DEBUG 14 NHibernate.Loader.Entity.AbstractEntityLoader - Static select for action NHibernate.Engine.CascadingAction+RefreshCascadingAction on entity CumbriaMD.Domain.Product: SELECT product0_.Id as Id3_1_, product0_.Name as Name3_1_, product0_.Code as Code3_1_, product0_.Description as Descript4_3_1_, product0_.Price as Price3_1_, product0_.IsDiscounted as IsDiscou6_3_1_, product0_.IsInStock as IsInStock3_1_, product0_.AddedAt as AddedAt3_1_, product0_.UpdatedAt as UpdatedAt3_1_, product0_.Brand_id as Brand10_3_1_, categories1_.Product_id as Product2_3_, category2_.Id as Category1_3_, category2_.Id as Id1_0_, category2_.IsActive as IsActive1_0_, category2_.OrderInList as OrderInL3_1_0_, category2_.ParentCategory as ParentCa4_1_0_ FROM [Product] product0_ left outer join CategoriesProducts categories1_ on product0_.Id=categories1_.Product_id left outer join [Category] category2_ on categories1_.Category_id=category2_.Id WHERE product0_.Id=?
DEBUG 14 NHibernate.Loader.Collection.OneToManyLoader - Static select for one-to-many CumbriaMD.Domain.Brand.Products: SELECT products0_.Brand_id as Brand10_1_, products0_.Id as Id1_, products0_.Id as Id3_0_, products0_.Name as Name3_0_, products0_.Code as Code3_0_, products0_.Description as Descript4_3_0_, products0_.Price as Price3_0_, products0_.IsDiscounted as IsDiscou6_3_0_, products0_.IsInStock as IsInStock3_0_, products0_.AddedAt as AddedAt3_0_, products0_.UpdatedAt as UpdatedAt3_0_, products0_.Brand_id as Brand10_3_0_ FROM [Product] products0_ WHERE products0_.Brand_id=?
DEBUG 14 NHibernate.Loader.Collection.BasicCollectionLoader - Static select for collection CumbriaMD.Domain.Category.Products: SELECT products0_.Category_id as Category1_1_, products0_.Product_id as Product2_1_, product1_.Id as Id3_0_, product1_.Name as Name3_0_, product1_.Code as Code3_0_, product1_.Description as Descript4_3_0_, product1_.Price as Price3_0_, product1_.IsDiscounted as IsDiscou6_3_0_, product1_.IsInStock as IsInStock3_0_, product1_.AddedAt as AddedAt3_0_, product1_.UpdatedAt as UpdatedAt3_0_, product1_.Brand_id as Brand10_3_0_ FROM CategoriesProducts products0_ left outer join [Product] product1_ on products0_.Product_id=product1_.Id WHERE products0_.Category_id=?
DEBUG 14 NHibernate.Loader.Collection.OneToManyLoader - Static select for one-to-many CumbriaMD.Domain.Category.Children: SELECT children0_.ParentCategory as ParentCa4_1_, children0_.Id as Id1_, children0_.Id as Id1_0_, children0_.IsActive as IsActive1_0_, children0_.OrderInList as OrderInL3_1_0_, children0_.ParentCategory as ParentCa4_1_0_ FROM [Category] children0_ WHERE children0_.ParentCategory=?
DEBUG 14 NHibernate.Loader.Collection.BasicCollectionLoader - Static select for collection CumbriaMD.Domain.Product.Categories: SELECT categories0_.Product_id as Product2_1_, categories0_.Category_id as Category1_1_, category1_.Id as Id1_0_, category1_.IsActive as IsActive1_0_, category1_.OrderInList as OrderInL3_1_0_, category1_.ParentCategory as ParentCa4_1_0_ FROM CategoriesProducts categories0_ left outer join [Category] category1_ on categories0_.Category_id=category1_.Id WHERE categories0_.Product_id=?
DEBUG 14 NHibernate.Impl.SessionFactoryObjectFactory - initializing class SessionFactoryObjectFactory
DEBUG 14 NHibernate.Impl.SessionFactoryObjectFactory - registered: 36d271d62d424af4861d00540bdb895b(unnamed)
INFO 14 NHibernate.Impl.SessionFactoryObjectFactory - no name configured
DEBUG 14 NHibernate.Impl.SessionFactoryImpl - Instantiated session factory
DEBUG 14 NHibernate.Impl.SessionFactoryImpl - Checking 0 named HQL queries
DEBUG 14 NHibernate.Impl.SessionFactoryImpl - Checking 0 named SQL queries
DEBUG 14 NHibernate.Impl.SessionImpl - [session-id=56b7448c-5b51-437b-a4d8-f5ad70b89d97] opened session at timestamp: 634801350479, for session factory: [/36d271d62d424af4861d00540bdb895b]
DEBUG 14 NHibernate.Impl.SessionImpl - [session-id=56b7448c-5b51-437b-a4d8-f5ad70b89d97] running ISession.Dispose()
DEBUG 14 NHibernate.Impl.SessionImpl - [session-id=56b7448c-5b51-437b-a4d8-f5ad70b89d97] executing real Dispose(True)
DEBUG 14 NHibernate.Impl.SessionImpl - closing session
DEBUG 14 NHibernate.AdoNet.AbstractBatcher - running BatcherImpl.Dispose(true)
INFO 63 NHibernate.Impl.SessionFactoryImpl - Closing
DEBUG 63 NHibernate.Connection.ConnectionProvider - Disposing of ConnectionProvider.
INFO 5 NHibernate.Cfg.Environment - NHibernate 3.3.1.4000 (3.3.1.4000)
INFO 5 NHibernate.Cfg.Environment - hibernate-configuration section not found in application configuration file
INFO 5 NHibernate.Cfg.Environment - Bytecode provider name : lcg
INFO 5 NHibernate.Cfg.Environment - Using reflection optimizer
DEBUG 5 NHibernate.Cfg.Configuration - Mapping XML:
<hibernate-mapping xmlns="urn:nhibernate-mapping-2.2"><class xmlns="urn:nhibernate-mapping-2.2" name="CumbriaMD.Domain.Brand, CumbriaMD.Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" table="`Brand`"><id access="backfield" name="Id" type="System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"><column name="Id" /><generator class="identity" /></id><bag name="Products"><key><column name="Brand_id" /></key><one-to-many class="CumbriaMD.Domain.Product, CumbriaMD.Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" /></bag><property name="Name" type="System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"><column name="Name" length="50" not-null="true" /></property><property name="IsActive" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"><column name="IsActive" not-null="true" /></property><many-to-one class="CumbriaMD.Domain.Product, CumbriaMD.Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" name="DefaultProduct"><column name="DefaultProduct_id" /></many-to-one></class></hibernate-mapping>
INFO 5 NHibernate.Dialect.Dialect - Using dialect: NHibernate.Dialect.MsSql2008Dialect
INFO 5 NHibernate.Cfg.XmlHbmBinding.Binder - Mapping class: CumbriaMD.Domain.Brand -> Brand
DEBUG 5 NHibernate.Cfg.XmlHbmBinding.Binder - Mapped property: Id -> Id, type: Int32
DEBUG 5 NHibernate.Cfg.XmlHbmBinding.Binder - Mapped property: Products, type: System.Collections.Generic.ICollection`1[[CumbriaMD.Domain.Product, CumbriaMD.Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]](CumbriaMD.Domain.Brand.Products)
DEBUG 5 NHibernate.Cfg.XmlHbmBinding.Binder - Mapped property: Name -> Name, type: String
DEBUG 5 NHibernate.Cfg.XmlHbmBinding.Binder - Mapped property: IsActive -> IsActive, type: Boolean
DEBUG 5 NHibernate.Cfg.XmlHbmBinding.Binder - Mapped property: DefaultProduct -> DefaultProduct_id, type: CumbriaMD.Domain.Product
DEBUG 5 NHibernate.Cfg.Configuration - Mapping XML:
<hibernate-mapping xmlns="urn:nhibernate-mapping-2.2"><class xmlns="urn:nhibernate-mapping-2.2" name="CumbriaMD.Domain.Category, CumbriaMD.Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" table="`Category`"><id access="backfield" name="Id" type="System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"><column name="Id" /><generator class="identity" /></id><bag cascade="all" inverse="true" name="Products" table="CategoriesProducts"><key><column name="Category_id" /></key><many-to-many class="CumbriaMD.Domain.Product, CumbriaMD.Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null"><column name="Product_id" /></many-to-many></bag><bag name="Children"><key><column name="ParentCategory" /></key><one-to-many class="CumbriaMD.Domain.Category, CumbriaMD.Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" /></bag><property name="IsActive" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"><column name="IsActive" not-null="true" /></property><property name="OrderInList" type="System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"><column name="OrderInList" /></property><many-to-one class="CumbriaMD.Domain.Category, CumbriaMD.Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" name="Parent"><column name="ParentCategory" /></many-to-one></class></hibernate-mapping>
INFO 5 NHibernate.Dialect.Dialect - Using dialect: NHibernate.Dialect.MsSql2008Dialect
INFO 5 NHibernate.Cfg.XmlHbmBinding.Binder - Mapping class: CumbriaMD.Domain.Category -> Category
DEBUG 5 NHibernate.Cfg.XmlHbmBinding.Binder - Mapped property: Id -> Id, type: Int32
INFO 5 NHibernate.Cfg.XmlHbmBinding.Binder - Mapping collection: CumbriaMD.Domain.Category.Products -> CategoriesProducts
DEBUG 5 NHibernate.Cfg.XmlHbmBinding.Binder - Mapped property: Products, type: System.Collections.Generic.ICollection`1[[CumbriaMD.Domain.Product, CumbriaMD.Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]](CumbriaMD.Domain.Category.Products)
DEBUG 5 NHibernate.Cfg.XmlHbmBinding.Binder - Mapped property: Children, type: System.Collections.Generic.ICollection`1[[CumbriaMD.Domain.Category, CumbriaMD.Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]](CumbriaMD.Domain.Category.Children)
DEBUG 5 NHibernate.Cfg.XmlHbmBinding.Binder - Mapped property: IsActive -> IsActive, type: Boolean
DEBUG 5 NHibernate.Cfg.XmlHbmBinding.Binder - Mapped property: OrderInList -> OrderInList, type: Int32
DEBUG 5 NHibernate.Cfg.XmlHbmBinding.Binder - Mapped property: Parent -> ParentCategory, type: CumbriaMD.Domain.Category
DEBUG 5 NHibernate.Cfg.Configuration - Mapping XML:
<hibernate-mapping xmlns="urn:nhibernate-mapping-2.2"><class xmlns="urn:nhibernate-mapping-2.2" name="CumbriaMD.Domain.Product, CumbriaMD.Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" table="`Product`"><id access="backfield" name="Id" type="System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"><column name="Id" /><generator class="identity" /></id><bag cascade="all" name="Categories" table="CategoriesProducts"><key><column name="Product_id" /></key><many-to-many class="CumbriaMD.Domain.Category, CumbriaMD.Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null"><column name="Category_id" /></many-to-many></bag><property name="Name" type="System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"><column name="Name" length="100" not-null="true" /></property><property name="Code" type="System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"><column name="Code" not-null="true" /></property><property name="Description" type="System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"><column name="Description" length="1500" not-null="true" /></property><property name="Price" type="System.Decimal, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"><column name="Price" not-null="true" /></property><property name="IsDiscounted" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"><column name="IsDiscounted" not-null="true" /></property><property name="IsInStock" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"><column name="IsInStock" not-null="true" /></property><property name="AddedAt" type="System.Nullable`1[[System.DateTime, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]], mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"><column name="AddedAt" not-null="true" /></property><property name="UpdatedAt" type="System.Nullable`1[[System.DateTime, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]], mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"><column name="UpdatedAt" not-null="true" /></property><many-to-one class="CumbriaMD.Domain.Brand, CumbriaMD.Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" name="Brand"><column name="Brand_id" not-null="true" /></many-to-one></class></hibernate-mapping>
INFO 5 NHibernate.Dialect.Dialect - Using dialect: NHibernate.Dialect.MsSql2008Dialect
INFO 5 NHibernate.Cfg.XmlHbmBinding.Binder - Mapping class: CumbriaMD.Domain.Product -> Product
DEBUG 5 NHibernate.Cfg.XmlHbmBinding.Binder - Mapped property: Id -> Id, type: Int32
INFO 5 NHibernate.Cfg.XmlHbmBinding.Binder - Mapping collection: CumbriaMD.Domain.Product.Categories -> CategoriesProducts
DEBUG 5 NHibernate.Cfg.XmlHbmBinding.Binder - Mapped property: Categories, type: System.Collections.Generic.ICollection`1[[CumbriaMD.Domain.Category, CumbriaMD.Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]](CumbriaMD.Domain.Product.Categories)
DEBUG 5 NHibernate.Cfg.XmlHbmBinding.Binder - Mapped property: Name -> Name, type: String
DEBUG 5 NHibernate.Cfg.XmlHbmBinding.Binder - Mapped property: Code -> Code, type: String
DEBUG 5 NHibernate.Cfg.XmlHbmBinding.Binder - Mapped property: Description -> Description, type: String
DEBUG 5 NHibernate.Cfg.XmlHbmBinding.Binder - Mapped property: Price -> Price, type: Decimal
DEBUG 5 NHibernate.Cfg.XmlHbmBinding.Binder - Mapped property: IsDiscounted -> IsDiscounted, type: Boolean
DEBUG 5 NHibernate.Cfg.XmlHbmBinding.Binder - Mapped property: IsInStock -> IsInStock, type: Boolean
DEBUG 5 NHibernate.Cfg.XmlHbmBinding.Binder - Mapped property: AddedAt -> AddedAt, type: DateTime
DEBUG 5 NHibernate.Cfg.XmlHbmBinding.Binder - Mapped property: UpdatedAt -> UpdatedAt, type: DateTime
DEBUG 5 NHibernate.Cfg.XmlHbmBinding.Binder - Mapped property: Brand -> Brand_id, type: CumbriaMD.Domain.Brand
INFO 5 NHibernate.Dialect.Dialect - Using dialect: NHibernate.Dialect.MsSql2008Dialect
INFO 5 NHibernate.Dialect.Dialect - Using dialect: NHibernate.Dialect.MsSql2008Dialect
INFO 5 NHibernate.Connection.ConnectionProviderFactory - Initializing connection provider: NHibernate.Connection.DriverConnectionProvider
INFO 5 NHibernate.Connection.ConnectionProvider - Configuring ConnectionProvider
DEBUG 5 NHibernate.Connection.DriverConnectionProvider - Obtaining IDbConnection from Driver
DEBUG 5 NHibernate.Connection.ConnectionProvider - Closing connection
INFO 5 NHibernate.Dialect.Dialect - Using dialect: NHibernate.Dialect.MsSql2008Dialect
INFO 5 NHibernate.Cfg.Configuration - checking mappings queue
INFO 5 NHibernate.Cfg.Configuration - processing one-to-many association mappings
DEBUG 5 NHibernate.Cfg.XmlHbmBinding.Binder - Second pass for collection: CumbriaMD.Domain.Brand.Products
INFO 5 NHibernate.Cfg.XmlHbmBinding.Binder - mapping collection: CumbriaMD.Domain.Brand.Products -> Product
DEBUG 5 NHibernate.Cfg.XmlHbmBinding.Binder - Mapped collection key: Brand_id, one-to-many: CumbriaMD.Domain.Product
DEBUG 5 NHibernate.Cfg.XmlHbmBinding.Binder - Second pass for collection: CumbriaMD.Domain.Category.Products
DEBUG 5 NHibernate.Cfg.XmlHbmBinding.Binder - Mapped collection key: Category_id, element: Product_id, type: CumbriaMD.Domain.Product
DEBUG 5 NHibernate.Cfg.XmlHbmBinding.Binder - Second pass for collection: CumbriaMD.Domain.Category.Children
INFO 5 NHibernate.Cfg.XmlHbmBinding.Binder - mapping collection: CumbriaMD.Domain.Category.Children -> Category
DEBUG 5 NHibernate.Cfg.XmlHbmBinding.Binder - Mapped collection key: ParentCategory, one-to-many: CumbriaMD.Domain.Category
DEBUG 5 NHibernate.Cfg.XmlHbmBinding.Binder - Second pass for collection: CumbriaMD.Domain.Product.Categories
DEBUG 5 NHibernate.Cfg.XmlHbmBinding.Binder - Mapped collection key: Product_id, element: Category_id, type: CumbriaMD.Domain.Category
INFO 5 NHibernate.Cfg.Configuration - processing one-to-one association property references
INFO 5 NHibernate.Cfg.Configuration - processing foreign key constraints
DEBUG 5 NHibernate.Cfg.Configuration - resolving reference to class: CumbriaMD.Domain.Product
DEBUG 5 NHibernate.Cfg.Configuration - resolving reference to class: CumbriaMD.Domain.Category
DEBUG 5 NHibernate.Cfg.Configuration - resolving reference to class: CumbriaMD.Domain.Product
DEBUG 5 NHibernate.Cfg.Configuration - resolving reference to class: CumbriaMD.Domain.Category
DEBUG 5 NHibernate.Cfg.Configuration - resolving reference to class: CumbriaMD.Domain.Brand
INFO 5 NHibernate.Cfg.Configuration - processing filters (second pass)
INFO 5 NHibernate.Cfg.Configuration - checking mappings queue
INFO 5 NHibernate.Cfg.Configuration - processing one-to-many association mappings
INFO 5 NHibernate.Cfg.Configuration - processing one-to-one association property references
INFO 5 NHibernate.Cfg.Configuration - processing foreign key constraints
DEBUG 5 NHibernate.Cfg.Configuration - resolving reference to class: CumbriaMD.Domain.Product
DEBUG 5 NHibernate.Cfg.Configuration - resolving reference to class: CumbriaMD.Domain.Category
DEBUG 5 NHibernate.Cfg.Configuration - resolving reference to class: CumbriaMD.Domain.Product
DEBUG 5 NHibernate.Cfg.Configuration - resolving reference to class: CumbriaMD.Domain.Category
DEBUG 5 NHibernate.Cfg.Configuration - resolving reference to class: CumbriaMD.Domain.Brand
INFO 5 NHibernate.Cfg.Configuration - processing filters (second pass)
INFO 5 NHibernate.Connection.ConnectionProviderFactory - Initializing connection provider: NHibernate.Connection.DriverConnectionProvider
INFO 5 NHibernate.Connection.ConnectionProvider - Configuring ConnectionProvider
DEBUG 5 NHibernate.Connection.DriverConnectionProvider - Obtaining IDbConnection from Driver
DEBUG 5 NHibernate.Tool.hbm2ddl.SchemaExport - 
    if exists (select 1 from sys.objects where object_id = OBJECT_ID(N'[FK18E3AB3D8E538E2D]') AND parent_object_id = OBJECT_ID('[Brand]'))
alter table [Brand]  drop constraint FK18E3AB3D8E538E2D

DEBUG 5 NHibernate.Tool.hbm2ddl.SchemaExport - SQL Batch: if exists (select 1 from sys.objects where object_id = OBJECT_ID(N'[FK18E3AB3D8E538E2D]') AND parent_object_id = OBJECT_ID('[Brand]'))
alter table [Brand]  drop constraint FK18E3AB3D8E538E2D
DEBUG 5 NHibernate.Tool.hbm2ddl.SchemaExport - 
    if exists (select 1 from sys.objects where object_id = OBJECT_ID(N'[FK6482F24CBCE17DD]') AND parent_object_id = OBJECT_ID('[Category]'))
alter table [Category]  drop constraint FK6482F24CBCE17DD

DEBUG 5 NHibernate.Tool.hbm2ddl.SchemaExport - SQL Batch: if exists (select 1 from sys.objects where object_id = OBJECT_ID(N'[FK6482F24CBCE17DD]') AND parent_object_id = OBJECT_ID('[Category]'))
alter table [Category]  drop constraint FK6482F24CBCE17DD
DEBUG 5 NHibernate.Tool.hbm2ddl.SchemaExport - 
    if exists (select 1 from sys.objects where object_id = OBJECT_ID(N'[FKAD3E9DD3350EC5DF]') AND parent_object_id = OBJECT_ID('CategoriesProducts'))
alter table CategoriesProducts  drop constraint FKAD3E9DD3350EC5DF

DEBUG 5 NHibernate.Tool.hbm2ddl.SchemaExport - SQL Batch: if exists (select 1 from sys.objects where object_id = OBJECT_ID(N'[FKAD3E9DD3350EC5DF]') AND parent_object_id = OBJECT_ID('CategoriesProducts'))
alter table CategoriesProducts  drop constraint FKAD3E9DD3350EC5DF
DEBUG 5 NHibernate.Tool.hbm2ddl.SchemaExport - 
    if exists (select 1 from sys.objects where object_id = OBJECT_ID(N'[FKAD3E9DD3ED552755]') AND parent_object_id = OBJECT_ID('CategoriesProducts'))
alter table CategoriesProducts  drop constraint FKAD3E9DD3ED552755

DEBUG 5 NHibernate.Tool.hbm2ddl.SchemaExport - SQL Batch: if exists (select 1 from sys.objects where object_id = OBJECT_ID(N'[FKAD3E9DD3ED552755]') AND parent_object_id = OBJECT_ID('CategoriesProducts'))
alter table CategoriesProducts  drop constraint FKAD3E9DD3ED552755
DEBUG 5 NHibernate.Tool.hbm2ddl.SchemaExport - 
    if exists (select 1 from sys.objects where object_id = OBJECT_ID(N'[FK1F94D86AF20A7EB]') AND parent_object_id = OBJECT_ID('[Product]'))
alter table [Product]  drop constraint FK1F94D86AF20A7EB

DEBUG 5 NHibernate.Tool.hbm2ddl.SchemaExport - SQL Batch: if exists (select 1 from sys.objects where object_id = OBJECT_ID(N'[FK1F94D86AF20A7EB]') AND parent_object_id = OBJECT_ID('[Product]'))
alter table [Product]  drop constraint FK1F94D86AF20A7EB
DEBUG 5 NHibernate.Tool.hbm2ddl.SchemaExport - 
    if exists (select * from dbo.sysobjects where id = object_id(N'[Brand]') and OBJECTPROPERTY(id, N'IsUserTable') = 1) drop table [Brand]
DEBUG 5 NHibernate.Tool.hbm2ddl.SchemaExport - SQL Batch: if exists (select * from dbo.sysobjects where id = object_id(N'[Brand]') and OBJECTPROPERTY(id, N'IsUserTable') = 1) drop table [Brand]
DEBUG 5 NHibernate.Tool.hbm2ddl.SchemaExport - 
    if exists (select * from dbo.sysobjects where id = object_id(N'[Category]') and OBJECTPROPERTY(id, N'IsUserTable') = 1) drop table [Category]
DEBUG 5 NHibernate.Tool.hbm2ddl.SchemaExport - SQL Batch: if exists (select * from dbo.sysobjects where id = object_id(N'[Category]') and OBJECTPROPERTY(id, N'IsUserTable') = 1) drop table [Category]
DEBUG 5 NHibernate.Tool.hbm2ddl.SchemaExport - 
    if exists (select * from dbo.sysobjects where id = object_id(N'CategoriesProducts') and OBJECTPROPERTY(id, N'IsUserTable') = 1) drop table CategoriesProducts
DEBUG 5 NHibernate.Tool.hbm2ddl.SchemaExport - SQL Batch: if exists (select * from dbo.sysobjects where id = object_id(N'CategoriesProducts') and OBJECTPROPERTY(id, N'IsUserTable') = 1) drop table CategoriesProducts
DEBUG 5 NHibernate.Tool.hbm2ddl.SchemaExport - 
    if exists (select * from dbo.sysobjects where id = object_id(N'[Product]') and OBJECTPROPERTY(id, N'IsUserTable') = 1) drop table [Product]
DEBUG 5 NHibernate.Tool.hbm2ddl.SchemaExport - SQL Batch: if exists (select * from dbo.sysobjects where id = object_id(N'[Product]') and OBJECTPROPERTY(id, N'IsUserTable') = 1) drop table [Product]
DEBUG 5 NHibernate.Tool.hbm2ddl.SchemaExport - 
    create table [Brand] (
        Id INT IDENTITY NOT NULL,
       Name NVARCHAR(50) not null,
       IsActive BIT not null,
       DefaultProduct_id INT null,
       primary key (Id)
    )
DEBUG 5 NHibernate.Tool.hbm2ddl.SchemaExport - SQL Batch: create table [Brand] (Id INT IDENTITY NOT NULL, Name NVARCHAR(50) not null, IsActive BIT not null, DefaultProduct_id INT null, primary key (Id))
DEBUG 5 NHibernate.Tool.hbm2ddl.SchemaExport - 
    create table [Category] (
        Id INT IDENTITY NOT NULL,
       IsActive BIT not null,
       OrderInList INT null,
       ParentCategory INT null,
       primary key (Id)
    )
DEBUG 5 NHibernate.Tool.hbm2ddl.SchemaExport - SQL Batch: create table [Category] (Id INT IDENTITY NOT NULL, IsActive BIT not null, OrderInList INT null, ParentCategory INT null, primary key (Id))
DEBUG 5 NHibernate.Tool.hbm2ddl.SchemaExport - 
    create table CategoriesProducts (
        Category_id INT not null,
       Product_id INT not null
    )
DEBUG 5 NHibernate.Tool.hbm2ddl.SchemaExport - SQL Batch: create table CategoriesProducts (Category_id INT not null, Product_id INT not null)
DEBUG 5 NHibernate.Tool.hbm2ddl.SchemaExport - 
    create table [Product] (
        Id INT IDENTITY NOT NULL,
       Name NVARCHAR(100) not null,
       Code NVARCHAR(255) not null,
       Description NVARCHAR(1500) not null,
       Price DECIMAL(19,5) not null,
       IsDiscounted BIT not null,
       IsInStock BIT not null,
       AddedAt DATETIME not null,
       UpdatedAt DATETIME not null,
       Brand_id INT not null,
       primary key (Id)
    )
DEBUG 5 NHibernate.Tool.hbm2ddl.SchemaExport - SQL Batch: create table [Product] (Id INT IDENTITY NOT NULL, Name NVARCHAR(100) not null, Code NVARCHAR(255) not null, Description NVARCHAR(1500) not null, Price DECIMAL(19,5) not null, IsDiscounted BIT not null, IsInStock BIT not null, AddedAt DATETIME not null, UpdatedAt DATETIME not null, Brand_id INT not null, primary key (Id))
DEBUG 5 NHibernate.Tool.hbm2ddl.SchemaExport - 
    alter table [Brand] 
        add constraint FK18E3AB3D8E538E2D 
        foreign key (DefaultProduct_id) 
        references [Product]
DEBUG 5 NHibernate.Tool.hbm2ddl.SchemaExport - SQL Batch: alter table [Brand] add constraint FK18E3AB3D8E538E2D foreign key (DefaultProduct_id) references [Product]
DEBUG 5 NHibernate.Tool.hbm2ddl.SchemaExport - 
    alter table [Category] 
        add constraint FK6482F24CBCE17DD 
        foreign key (ParentCategory) 
        references [Category]
DEBUG 5 NHibernate.Tool.hbm2ddl.SchemaExport - SQL Batch: alter table [Category] add constraint FK6482F24CBCE17DD foreign key (ParentCategory) references [Category]
DEBUG 5 NHibernate.Tool.hbm2ddl.SchemaExport - 
    alter table CategoriesProducts 
        add constraint FKAD3E9DD3350EC5DF 
        foreign key (Product_id) 
        references [Product]
DEBUG 5 NHibernate.Tool.hbm2ddl.SchemaExport - SQL Batch: alter table CategoriesProducts add constraint FKAD3E9DD3350EC5DF foreign key (Product_id) references [Product]
DEBUG 5 NHibernate.Tool.hbm2ddl.SchemaExport - 
    alter table CategoriesProducts 
        add constraint FKAD3E9DD3ED552755 
        foreign key (Category_id) 
        references [Category]
DEBUG 5 NHibernate.Tool.hbm2ddl.SchemaExport - SQL Batch: alter table CategoriesProducts add constraint FKAD3E9DD3ED552755 foreign key (Category_id) references [Category]
DEBUG 5 NHibernate.Tool.hbm2ddl.SchemaExport - 
    alter table [Product] 
        add constraint FK1F94D86AF20A7EB 
        foreign key (Brand_id) 
        references [Brand]
DEBUG 5 NHibernate.Tool.hbm2ddl.SchemaExport - SQL Batch: alter table [Product] add constraint FK1F94D86AF20A7EB foreign key (Brand_id) references [Brand]
DEBUG 5 NHibernate.Connection.ConnectionProvider - Closing connection
DEBUG 5 NHibernate.Connection.ConnectionProvider - Disposing of ConnectionProvider.
INFO 5 NHibernate.Cfg.Configuration - checking mappings queue
INFO 5 NHibernate.Cfg.Configuration - processing one-to-many association mappings
INFO 5 NHibernate.Cfg.Configuration - processing one-to-one association property references
INFO 5 NHibernate.Cfg.Configuration - processing foreign key constraints
DEBUG 5 NHibernate.Cfg.Configuration - resolving reference to class: CumbriaMD.Domain.Product
DEBUG 5 NHibernate.Cfg.Configuration - resolving reference to class: CumbriaMD.Domain.Category
DEBUG 5 NHibernate.Cfg.Configuration - resolving reference to class: CumbriaMD.Domain.Product
DEBUG 5 NHibernate.Cfg.Configuration - resolving reference to class: CumbriaMD.Domain.Category
DEBUG 5 NHibernate.Cfg.Configuration - resolving reference to class: CumbriaMD.Domain.Brand
INFO 5 NHibernate.Cfg.Configuration - processing filters (second pass)
INFO 5 NHibernate.Dialect.Dialect - Using dialect: NHibernate.Dialect.MsSql2008Dialect
INFO 5 NHibernate.Dialect.Dialect - Using dialect: NHibernate.Dialect.MsSql2008Dialect
INFO 5 NHibernate.Exceptions.SQLExceptionConverterFactory - Using dialect defined converter
INFO 5 NHibernate.Cfg.SettingsFactory - Generate SQL with comments: disabled
INFO 5 NHibernate.Connection.ConnectionProviderFactory - Initializing connection provider: NHibernate.Connection.DriverConnectionProvider
INFO 5 NHibernate.Connection.ConnectionProvider - Configuring ConnectionProvider
INFO 5 NHibernate.Cfg.SettingsFactory - Transaction factory: NHibernate.Transaction.AdoNetWithDistributedTransactionFactory
INFO 5 NHibernate.Cfg.SettingsFactory - Optimize cache for minimal puts: False
INFO 5 NHibernate.Cfg.SettingsFactory - Connection release mode: auto
INFO 5 NHibernate.Cfg.SettingsFactory - Default batch fetch size: 1
INFO 5 NHibernate.Cfg.SettingsFactory - echoing all SQL to stdout
INFO 5 NHibernate.Cfg.SettingsFactory - Statistics: disabled
INFO 5 NHibernate.Cfg.SettingsFactory - Deleted entity synthetic identifier rollback: disabled
INFO 5 NHibernate.Cfg.SettingsFactory - Query translator: NHibernate.Hql.Ast.ANTLR.ASTQueryTranslatorFactory
INFO 5 NHibernate.Cfg.SettingsFactory - Query language substitutions: {'true'='1', 'false'='0', 'yes'=''Y'', 'no'=''N''}
INFO 5 NHibernate.Cfg.SettingsFactory - cache provider: NHibernate.Cache.NoCacheProvider, NHibernate, Version=3.3.1.4000, Culture=neutral, PublicKeyToken=aa95f207798dfdb4
INFO 5 NHibernate.Cfg.SettingsFactory - Order SQL inserts for batching: enabled
DEBUG 5 NHibernate.Cfg.SettingsFactory - Wrap result sets: disabled
INFO 5 NHibernate.Cfg.SettingsFactory - Batcher factory: NHibernate.AdoNet.SqlClientBatchingBatcherFactory, NHibernate, Version=3.3.1.4000, Culture=neutral, PublicKeyToken=aa95f207798dfdb4
INFO 5 NHibernate.Cfg.SettingsFactory - Default entity-mode: Poco
INFO 5 NHibernate.Cfg.SettingsFactory - Named query checking : enabled
INFO 5 NHibernate.Impl.SessionFactoryImpl - building session factory
DEBUG 5 NHibernate.Impl.SessionFactoryImpl - Session factory constructed with filter configurations : {}
DEBUG 5 NHibernate.Impl.SessionFactoryImpl - instantiating session factory with properties: {'use_reflection_optimizer'='True', 'connection.provider'='NHibernate.Connection.DriverConnectionProvider', 'connection.driver_class'='NHibernate.Driver.SqlClientDriver, NHibernate, Version=3.3.1.4000, Culture=neutral, PublicKeyToken=aa95f207798dfdb4', 'dialect'='NHibernate.Dialect.MsSql2008Dialect, NHibernate, Version=3.3.1.4000, Culture=neutral, PublicKeyToken=aa95f207798dfdb4', 'hibernate.dialect'='NHibernate.Dialect.MsSql2008Dialect, NHibernate, Version=3.3.1.4000, Culture=neutral, PublicKeyToken=aa95f207798dfdb4', 'use_outer_join'='true', 'show_sql'='true', 'connection.connection_string'='Data Source=localhost\SQLEXPRESS;Initial Catalog=eDetectorDb;Integrated Security=true'}
DEBUG 5 NHibernate.Connection.DriverConnectionProvider - Obtaining IDbConnection from Driver
DEBUG 5 NHibernate.Connection.ConnectionProvider - Closing connection
DEBUG 5 NHibernate.Tuple.Entity.AbstractEntityTuplizer - No custom accessors found for entity: CumbriaMD.Domain.Brand
DEBUG 5 NHibernate.Tuple.Entity.AbstractEntityTuplizer - No custom accessors found for entity: CumbriaMD.Domain.Brand
DEBUG 5 NHibernate.Tuple.Entity.PocoEntityTuplizer - Create Instantiator using optimizer for:CumbriaMD.Domain.Brand
DEBUG 5 NHibernate.Tuple.Entity.AbstractEntityTuplizer - No custom accessors found for entity: CumbriaMD.Domain.Category
DEBUG 5 NHibernate.Tuple.Entity.AbstractEntityTuplizer - No custom accessors found for entity: CumbriaMD.Domain.Category
DEBUG 5 NHibernate.Tuple.Entity.PocoEntityTuplizer - Create Instantiator using optimizer for:CumbriaMD.Domain.Category
DEBUG 5 NHibernate.Tuple.Entity.AbstractEntityTuplizer - No custom accessors found for entity: CumbriaMD.Domain.Product
DEBUG 5 NHibernate.Tuple.Entity.AbstractEntityTuplizer - No custom accessors found for entity: CumbriaMD.Domain.Product
DEBUG 5 NHibernate.Tuple.Entity.PocoEntityTuplizer - Create Instantiator using optimizer for:CumbriaMD.Domain.Product
DEBUG 5 NHibernate.Persister.Collection.ICollectionPersister - Static SQL for collection: CumbriaMD.Domain.Brand.Products
DEBUG 5 NHibernate.Persister.Collection.ICollectionPersister -  Row insert: UPDATE [Product] SET Brand_id = ? WHERE Id = ?
DEBUG 5 NHibernate.Persister.Collection.ICollectionPersister -  Row delete: UPDATE [Product] SET Brand_id = null WHERE Brand_id = ? AND Id = ?
DEBUG 5 NHibernate.Persister.Collection.ICollectionPersister -  One-shot delete: UPDATE [Product] SET Brand_id = null WHERE Brand_id = ?
DEBUG 5 NHibernate.Persister.Collection.ICollectionPersister - Static SQL for collection: CumbriaMD.Domain.Category.Products
DEBUG 5 NHibernate.Persister.Collection.ICollectionPersister -  Row insert: INSERT INTO CategoriesProducts (Category_id, Product_id) VALUES (?, ?)
DEBUG 5 NHibernate.Persister.Collection.ICollectionPersister -  Row update: UPDATE CategoriesProducts SET Product_id = ? WHERE Category_id = ? AND Product_id = ?
DEBUG 5 NHibernate.Persister.Collection.ICollectionPersister -  Row delete: DELETE FROM CategoriesProducts WHERE Category_id = ? AND Product_id = ?
DEBUG 5 NHibernate.Persister.Collection.ICollectionPersister -  One-shot delete: DELETE FROM CategoriesProducts WHERE Category_id = ?
DEBUG 5 NHibernate.Persister.Collection.ICollectionPersister - Static SQL for collection: CumbriaMD.Domain.Category.Children
DEBUG 5 NHibernate.Persister.Collection.ICollectionPersister -  Row insert: UPDATE [Category] SET ParentCategory = ? WHERE Id = ?
DEBUG 5 NHibernate.Persister.Collection.ICollectionPersister -  Row delete: UPDATE [Category] SET ParentCategory = null WHERE ParentCategory = ? AND Id = ?
DEBUG 5 NHibernate.Persister.Collection.ICollectionPersister -  One-shot delete: UPDATE [Category] SET ParentCategory = null WHERE ParentCategory = ?
DEBUG 5 NHibernate.Persister.Collection.ICollectionPersister - Static SQL for collection: CumbriaMD.Domain.Product.Categories
DEBUG 5 NHibernate.Persister.Collection.ICollectionPersister -  Row insert: INSERT INTO CategoriesProducts (Product_id, Category_id) VALUES (?, ?)
DEBUG 5 NHibernate.Persister.Collection.ICollectionPersister -  Row update: UPDATE CategoriesProducts SET Category_id = ? WHERE Product_id = ? AND Category_id = ?
DEBUG 5 NHibernate.Persister.Collection.ICollectionPersister -  Row delete: DELETE FROM CategoriesProducts WHERE Product_id = ? AND Category_id = ?
DEBUG 5 NHibernate.Persister.Collection.ICollectionPersister -  One-shot delete: DELETE FROM CategoriesProducts WHERE Product_id = ?
DEBUG 5 NHibernate.Persister.Entity.AbstractEntityPersister - Static SQL for entity: CumbriaMD.Domain.Brand
DEBUG 5 NHibernate.Persister.Entity.AbstractEntityPersister -  Version select: SELECT Id FROM [Brand] WHERE Id = ?
DEBUG 5 NHibernate.Persister.Entity.AbstractEntityPersister -  Snapshot select: SELECT brand_.Id, brand_.Name as Name0_, brand_.IsActive as IsActive0_, brand_.DefaultProduct_id as DefaultP4_0_ FROM [Brand] brand_ WHERE brand_.Id=?
DEBUG 5 NHibernate.Persister.Entity.AbstractEntityPersister -  Insert 0: INSERT INTO [Brand] (Name, IsActive, DefaultProduct_id, Id) VALUES (?, ?, ?, ?)
DEBUG 5 NHibernate.Persister.Entity.AbstractEntityPersister -  Update 0: UPDATE [Brand] SET Name = ?, IsActive = ?, DefaultProduct_id = ? WHERE Id = ?
DEBUG 5 NHibernate.Persister.Entity.AbstractEntityPersister -  Delete 0: DELETE FROM [Brand] WHERE Id = ?
DEBUG 5 NHibernate.Persister.Entity.AbstractEntityPersister -  Identity insert: INSERT INTO [Brand] (Name, IsActive, DefaultProduct_id) VALUES (?, ?, ?); select SCOPE_IDENTITY()
DEBUG 5 NHibernate.Loader.Entity.AbstractEntityLoader - Static select for entity CumbriaMD.Domain.Brand: SELECT brand0_.Id as Id0_0_, brand0_.Name as Name0_0_, brand0_.IsActive as IsActive0_0_, brand0_.DefaultProduct_id as DefaultP4_0_0_ FROM [Brand] brand0_ WHERE brand0_.Id=?
DEBUG 5 NHibernate.Loader.Entity.AbstractEntityLoader - Static select for entity CumbriaMD.Domain.Brand: SELECT brand0_.Id as Id0_0_, brand0_.Name as Name0_0_, brand0_.IsActive as IsActive0_0_, brand0_.DefaultProduct_id as DefaultP4_0_0_ FROM [Brand] brand0_ WHERE brand0_.Id=?
DEBUG 5 NHibernate.Loader.Entity.AbstractEntityLoader - Static select for entity CumbriaMD.Domain.Brand: SELECT brand0_.Id as Id0_0_, brand0_.Name as Name0_0_, brand0_.IsActive as IsActive0_0_, brand0_.DefaultProduct_id as DefaultP4_0_0_ FROM [Brand] brand0_ with (updlock, rowlock) WHERE brand0_.Id=?
DEBUG 5 NHibernate.Loader.Entity.AbstractEntityLoader - Static select for entity CumbriaMD.Domain.Brand: SELECT brand0_.Id as Id0_0_, brand0_.Name as Name0_0_, brand0_.IsActive as IsActive0_0_, brand0_.DefaultProduct_id as DefaultP4_0_0_ FROM [Brand] brand0_ with (updlock, rowlock, nowait) WHERE brand0_.Id=?
DEBUG 5 NHibernate.Loader.Entity.AbstractEntityLoader - Static select for entity CumbriaMD.Domain.Brand: SELECT brand0_.Id as Id0_0_, brand0_.Name as Name0_0_, brand0_.IsActive as IsActive0_0_, brand0_.DefaultProduct_id as DefaultP4_0_0_ FROM [Brand] brand0_ with (updlock, rowlock) WHERE brand0_.Id=?
DEBUG 5 NHibernate.Loader.Entity.AbstractEntityLoader - Static select for action NHibernate.Engine.CascadingAction+MergeCascadingAction on entity CumbriaMD.Domain.Brand: SELECT brand0_.Id as Id0_0_, brand0_.Name as Name0_0_, brand0_.IsActive as IsActive0_0_, brand0_.DefaultProduct_id as DefaultP4_0_0_ FROM [Brand] brand0_ WHERE brand0_.Id=?
DEBUG 5 NHibernate.Loader.Entity.AbstractEntityLoader - Static select for action NHibernate.Engine.CascadingAction+RefreshCascadingAction on entity CumbriaMD.Domain.Brand: SELECT brand0_.Id as Id0_0_, brand0_.Name as Name0_0_, brand0_.IsActive as IsActive0_0_, brand0_.DefaultProduct_id as DefaultP4_0_0_ FROM [Brand] brand0_ WHERE brand0_.Id=?
DEBUG 5 NHibernate.Persister.Entity.AbstractEntityPersister - Static SQL for entity: CumbriaMD.Domain.Category
DEBUG 5 NHibernate.Persister.Entity.AbstractEntityPersister -  Version select: SELECT Id FROM [Category] WHERE Id = ?
DEBUG 5 NHibernate.Persister.Entity.AbstractEntityPersister -  Snapshot select: SELECT category_.Id, category_.IsActive as IsActive1_, category_.OrderInList as OrderInL3_1_, category_.ParentCategory as ParentCa4_1_ FROM [Category] category_ WHERE category_.Id=?
DEBUG 5 NHibernate.Persister.Entity.AbstractEntityPersister -  Insert 0: INSERT INTO [Category] (IsActive, OrderInList, ParentCategory, Id) VALUES (?, ?, ?, ?)
DEBUG 5 NHibernate.Persister.Entity.AbstractEntityPersister -  Update 0: UPDATE [Category] SET IsActive = ?, OrderInList = ?, ParentCategory = ? WHERE Id = ?
DEBUG 5 NHibernate.Persister.Entity.AbstractEntityPersister -  Delete 0: DELETE FROM [Category] WHERE Id = ?
DEBUG 5 NHibernate.Persister.Entity.AbstractEntityPersister -  Identity insert: INSERT INTO [Category] (IsActive, OrderInList, ParentCategory) VALUES (?, ?, ?); select SCOPE_IDENTITY()
DEBUG 5 NHibernate.Loader.Entity.AbstractEntityLoader - Static select for entity CumbriaMD.Domain.Category: SELECT category0_.Id as Id1_0_, category0_.IsActive as IsActive1_0_, category0_.OrderInList as OrderInL3_1_0_, category0_.ParentCategory as ParentCa4_1_0_ FROM [Category] category0_ WHERE category0_.Id=?
DEBUG 5 NHibernate.Loader.Entity.AbstractEntityLoader - Static select for entity CumbriaMD.Domain.Category: SELECT category0_.Id as Id1_0_, category0_.IsActive as IsActive1_0_, category0_.OrderInList as OrderInL3_1_0_, category0_.ParentCategory as ParentCa4_1_0_ FROM [Category] category0_ WHERE category0_.Id=?
DEBUG 5 NHibernate.Loader.Entity.AbstractEntityLoader - Static select for entity CumbriaMD.Domain.Category: SELECT category0_.Id as Id1_0_, category0_.IsActive as IsActive1_0_, category0_.OrderInList as OrderInL3_1_0_, category0_.ParentCategory as ParentCa4_1_0_ FROM [Category] category0_ with (updlock, rowlock) WHERE category0_.Id=?
DEBUG 5 NHibernate.Loader.Entity.AbstractEntityLoader - Static select for entity CumbriaMD.Domain.Category: SELECT category0_.Id as Id1_0_, category0_.IsActive as IsActive1_0_, category0_.OrderInList as OrderInL3_1_0_, category0_.ParentCategory as ParentCa4_1_0_ FROM [Category] category0_ with (updlock, rowlock, nowait) WHERE category0_.Id=?
DEBUG 5 NHibernate.Loader.Entity.AbstractEntityLoader - Static select for entity CumbriaMD.Domain.Category: SELECT category0_.Id as Id1_0_, category0_.IsActive as IsActive1_0_, category0_.OrderInList as OrderInL3_1_0_, category0_.ParentCategory as ParentCa4_1_0_ FROM [Category] category0_ with (updlock, rowlock) WHERE category0_.Id=?
DEBUG 5 NHibernate.Loader.Entity.AbstractEntityLoader - Static select for action NHibernate.Engine.CascadingAction+MergeCascadingAction on entity CumbriaMD.Domain.Category: SELECT category0_.Id as Id1_1_, category0_.IsActive as IsActive1_1_, category0_.OrderInList as OrderInL3_1_1_, category0_.ParentCategory as ParentCa4_1_1_, products1_.Category_id as Category1_3_, product2_.Id as Product2_3_, product2_.Id as Id3_0_, product2_.Name as Name3_0_, product2_.Code as Code3_0_, product2_.Description as Descript4_3_0_, product2_.Price as Price3_0_, product2_.IsDiscounted as IsDiscou6_3_0_, product2_.IsInStock as IsInStock3_0_, product2_.AddedAt as AddedAt3_0_, product2_.UpdatedAt as UpdatedAt3_0_, product2_.Brand_id as Brand10_3_0_ FROM [Category] category0_ left outer join CategoriesProducts products1_ on category0_.Id=products1_.Category_id left outer join [Product] product2_ on products1_.Product_id=product2_.Id WHERE category0_.Id=?
DEBUG 5 NHibernate.Loader.Entity.AbstractEntityLoader - Static select for action NHibernate.Engine.CascadingAction+RefreshCascadingAction on entity CumbriaMD.Domain.Category: SELECT category0_.Id as Id1_1_, category0_.IsActive as IsActive1_1_, category0_.OrderInList as OrderInL3_1_1_, category0_.ParentCategory as ParentCa4_1_1_, products1_.Category_id as Category1_3_, product2_.Id as Product2_3_, product2_.Id as Id3_0_, product2_.Name as Name3_0_, product2_.Code as Code3_0_, product2_.Description as Descript4_3_0_, product2_.Price as Price3_0_, product2_.IsDiscounted as IsDiscou6_3_0_, product2_.IsInStock as IsInStock3_0_, product2_.AddedAt as AddedAt3_0_, product2_.UpdatedAt as UpdatedAt3_0_, product2_.Brand_id as Brand10_3_0_ FROM [Category] category0_ left outer join CategoriesProducts products1_ on category0_.Id=products1_.Category_id left outer join [Product] product2_ on products1_.Product_id=product2_.Id WHERE category0_.Id=?
DEBUG 5 NHibernate.Persister.Entity.AbstractEntityPersister - Static SQL for entity: CumbriaMD.Domain.Product
DEBUG 5 NHibernate.Persister.Entity.AbstractEntityPersister -  Version select: SELECT Id FROM [Product] WHERE Id = ?
DEBUG 5 NHibernate.Persister.Entity.AbstractEntityPersister -  Snapshot select: SELECT product_.Id, product_.Name as Name3_, product_.Code as Code3_, product_.Description as Descript4_3_, product_.Price as Price3_, product_.IsDiscounted as IsDiscou6_3_, product_.IsInStock as IsInStock3_, product_.AddedAt as AddedAt3_, product_.UpdatedAt as UpdatedAt3_, product_.Brand_id as Brand10_3_ FROM [Product] product_ WHERE product_.Id=?
DEBUG 5 NHibernate.Persister.Entity.AbstractEntityPersister -  Insert 0: INSERT INTO [Product] (Name, Code, Description, Price, IsDiscounted, IsInStock, AddedAt, UpdatedAt, Brand_id, Id) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
DEBUG 5 NHibernate.Persister.Entity.AbstractEntityPersister -  Update 0: UPDATE [Product] SET Name = ?, Code = ?, Description = ?, Price = ?, IsDiscounted = ?, IsInStock = ?, AddedAt = ?, UpdatedAt = ?, Brand_id = ? WHERE Id = ?
DEBUG 5 NHibernate.Persister.Entity.AbstractEntityPersister -  Delete 0: DELETE FROM [Product] WHERE Id = ?
DEBUG 5 NHibernate.Persister.Entity.AbstractEntityPersister -  Identity insert: INSERT INTO [Product] (Name, Code, Description, Price, IsDiscounted, IsInStock, AddedAt, UpdatedAt, Brand_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?); select SCOPE_IDENTITY()
DEBUG 5 NHibernate.Loader.Entity.AbstractEntityLoader - Static select for entity CumbriaMD.Domain.Product: SELECT product0_.Id as Id3_0_, product0_.Name as Name3_0_, product0_.Code as Code3_0_, product0_.Description as Descript4_3_0_, product0_.Price as Price3_0_, product0_.IsDiscounted as IsDiscou6_3_0_, product0_.IsInStock as IsInStock3_0_, product0_.AddedAt as AddedAt3_0_, product0_.UpdatedAt as UpdatedAt3_0_, product0_.Brand_id as Brand10_3_0_ FROM [Product] product0_ WHERE product0_.Id=?
DEBUG 5 NHibernate.Loader.Entity.AbstractEntityLoader - Static select for entity CumbriaMD.Domain.Product: SELECT product0_.Id as Id3_0_, product0_.Name as Name3_0_, product0_.Code as Code3_0_, product0_.Description as Descript4_3_0_, product0_.Price as Price3_0_, product0_.IsDiscounted as IsDiscou6_3_0_, product0_.IsInStock as IsInStock3_0_, product0_.AddedAt as AddedAt3_0_, product0_.UpdatedAt as UpdatedAt3_0_, product0_.Brand_id as Brand10_3_0_ FROM [Product] product0_ WHERE product0_.Id=?
DEBUG 5 NHibernate.Loader.Entity.AbstractEntityLoader - Static select for entity CumbriaMD.Domain.Product: SELECT product0_.Id as Id3_0_, product0_.Name as Name3_0_, product0_.Code as Code3_0_, product0_.Description as Descript4_3_0_, product0_.Price as Price3_0_, product0_.IsDiscounted as IsDiscou6_3_0_, product0_.IsInStock as IsInStock3_0_, product0_.AddedAt as AddedAt3_0_, product0_.UpdatedAt as UpdatedAt3_0_, product0_.Brand_id as Brand10_3_0_ FROM [Product] product0_ with (updlock, rowlock) WHERE product0_.Id=?
DEBUG 5 NHibernate.Loader.Entity.AbstractEntityLoader - Static select for entity CumbriaMD.Domain.Product: SELECT product0_.Id as Id3_0_, product0_.Name as Name3_0_, product0_.Code as Code3_0_, product0_.Description as Descript4_3_0_, product0_.Price as Price3_0_, product0_.IsDiscounted as IsDiscou6_3_0_, product0_.IsInStock as IsInStock3_0_, product0_.AddedAt as AddedAt3_0_, product0_.UpdatedAt as UpdatedAt3_0_, product0_.Brand_id as Brand10_3_0_ FROM [Product] product0_ with (updlock, rowlock, nowait) WHERE product0_.Id=?
DEBUG 5 NHibernate.Loader.Entity.AbstractEntityLoader - Static select for entity CumbriaMD.Domain.Product: SELECT product0_.Id as Id3_0_, product0_.Name as Name3_0_, product0_.Code as Code3_0_, product0_.Description as Descript4_3_0_, product0_.Price as Price3_0_, product0_.IsDiscounted as IsDiscou6_3_0_, product0_.IsInStock as IsInStock3_0_, product0_.AddedAt as AddedAt3_0_, product0_.UpdatedAt as UpdatedAt3_0_, product0_.Brand_id as Brand10_3_0_ FROM [Product] product0_ with (updlock, rowlock) WHERE product0_.Id=?
DEBUG 5 NHibernate.Loader.Entity.AbstractEntityLoader - Static select for action NHibernate.Engine.CascadingAction+MergeCascadingAction on entity CumbriaMD.Domain.Product: SELECT product0_.Id as Id3_1_, product0_.Name as Name3_1_, product0_.Code as Code3_1_, product0_.Description as Descript4_3_1_, product0_.Price as Price3_1_, product0_.IsDiscounted as IsDiscou6_3_1_, product0_.IsInStock as IsInStock3_1_, product0_.AddedAt as AddedAt3_1_, product0_.UpdatedAt as UpdatedAt3_1_, product0_.Brand_id as Brand10_3_1_, categories1_.Product_id as Product2_3_, category2_.Id as Category1_3_, category2_.Id as Id1_0_, category2_.IsActive as IsActive1_0_, category2_.OrderInList as OrderInL3_1_0_, category2_.ParentCategory as ParentCa4_1_0_ FROM [Product] product0_ left outer join CategoriesProducts categories1_ on product0_.Id=categories1_.Product_id left outer join [Category] category2_ on categories1_.Category_id=category2_.Id WHERE product0_.Id=?
DEBUG 5 NHibernate.Loader.Entity.AbstractEntityLoader - Static select for action NHibernate.Engine.CascadingAction+RefreshCascadingAction on entity CumbriaMD.Domain.Product: SELECT product0_.Id as Id3_1_, product0_.Name as Name3_1_, product0_.Code as Code3_1_, product0_.Description as Descript4_3_1_, product0_.Price as Price3_1_, product0_.IsDiscounted as IsDiscou6_3_1_, product0_.IsInStock as IsInStock3_1_, product0_.AddedAt as AddedAt3_1_, product0_.UpdatedAt as UpdatedAt3_1_, product0_.Brand_id as Brand10_3_1_, categories1_.Product_id as Product2_3_, category2_.Id as Category1_3_, category2_.Id as Id1_0_, category2_.IsActive as IsActive1_0_, category2_.OrderInList as OrderInL3_1_0_, category2_.ParentCategory as ParentCa4_1_0_ FROM [Product] product0_ left outer join CategoriesProducts categories1_ on product0_.Id=categories1_.Product_id left outer join [Category] category2_ on categories1_.Category_id=category2_.Id WHERE product0_.Id=?
DEBUG 5 NHibernate.Loader.Collection.OneToManyLoader - Static select for one-to-many CumbriaMD.Domain.Brand.Products: SELECT products0_.Brand_id as Brand10_1_, products0_.Id as Id1_, products0_.Id as Id3_0_, products0_.Name as Name3_0_, products0_.Code as Code3_0_, products0_.Description as Descript4_3_0_, products0_.Price as Price3_0_, products0_.IsDiscounted as IsDiscou6_3_0_, products0_.IsInStock as IsInStock3_0_, products0_.AddedAt as AddedAt3_0_, products0_.UpdatedAt as UpdatedAt3_0_, products0_.Brand_id as Brand10_3_0_ FROM [Product] products0_ WHERE products0_.Brand_id=?
DEBUG 5 NHibernate.Loader.Collection.BasicCollectionLoader - Static select for collection CumbriaMD.Domain.Category.Products: SELECT products0_.Category_id as Category1_1_, products0_.Product_id as Product2_1_, product1_.Id as Id3_0_, product1_.Name as Name3_0_, product1_.Code as Code3_0_, product1_.Description as Descript4_3_0_, product1_.Price as Price3_0_, product1_.IsDiscounted as IsDiscou6_3_0_, product1_.IsInStock as IsInStock3_0_, product1_.AddedAt as AddedAt3_0_, product1_.UpdatedAt as UpdatedAt3_0_, product1_.Brand_id as Brand10_3_0_ FROM CategoriesProducts products0_ left outer join [Product] product1_ on products0_.Product_id=product1_.Id WHERE products0_.Category_id=?
DEBUG 5 NHibernate.Loader.Collection.OneToManyLoader - Static select for one-to-many CumbriaMD.Domain.Category.Children: SELECT children0_.ParentCategory as ParentCa4_1_, children0_.Id as Id1_, children0_.Id as Id1_0_, children0_.IsActive as IsActive1_0_, children0_.OrderInList as OrderInL3_1_0_, children0_.ParentCategory as ParentCa4_1_0_ FROM [Category] children0_ WHERE children0_.ParentCategory=?
DEBUG 5 NHibernate.Loader.Collection.BasicCollectionLoader - Static select for collection CumbriaMD.Domain.Product.Categories: SELECT categories0_.Product_id as Product2_1_, categories0_.Category_id as Category1_1_, category1_.Id as Id1_0_, category1_.IsActive as IsActive1_0_, category1_.OrderInList as OrderInL3_1_0_, category1_.ParentCategory as ParentCa4_1_0_ FROM CategoriesProducts categories0_ left outer join [Category] category1_ on categories0_.Category_id=category1_.Id WHERE categories0_.Product_id=?
DEBUG 5 NHibernate.Impl.SessionFactoryObjectFactory - initializing class SessionFactoryObjectFactory
DEBUG 5 NHibernate.Impl.SessionFactoryObjectFactory - registered: 8ccabbd8dacf4de79de354ce8c91618b(unnamed)
INFO 5 NHibernate.Impl.SessionFactoryObjectFactory - no name configured
DEBUG 5 NHibernate.Impl.SessionFactoryImpl - Instantiated session factory
DEBUG 5 NHibernate.Impl.SessionFactoryImpl - Checking 0 named HQL queries
DEBUG 5 NHibernate.Impl.SessionFactoryImpl - Checking 0 named SQL queries
DEBUG 5 NHibernate.Impl.SessionImpl - [session-id=70be0b70-03bb-4afe-a1ff-0bf4893696ca] opened session at timestamp: 634801404936, for session factory: [/8ccabbd8dacf4de79de354ce8c91618b]
DEBUG 5 NHibernate.Impl.SessionImpl - [session-id=70be0b70-03bb-4afe-a1ff-0bf4893696ca] running ISession.Dispose()
DEBUG 5 NHibernate.Impl.SessionImpl - [session-id=70be0b70-03bb-4afe-a1ff-0bf4893696ca] executing real Dispose(True)
DEBUG 5 NHibernate.Impl.SessionImpl - closing session
DEBUG 5 NHibernate.AdoNet.AbstractBatcher - running BatcherImpl.Dispose(true)
INFO 5 NHibernate.Impl.SessionFactoryImpl - Closing
DEBUG 5 NHibernate.Connection.ConnectionProvider - Disposing of ConnectionProvider.
INFO 6 NHibernate.Cfg.Environment - NHibernate 3.3.1.4000 (3.3.1.4000)
INFO 6 NHibernate.Cfg.Environment - hibernate-configuration section not found in application configuration file
INFO 6 NHibernate.Cfg.Environment - Bytecode provider name : lcg
INFO 6 NHibernate.Cfg.Environment - Using reflection optimizer
DEBUG 6 NHibernate.Cfg.Configuration - Mapping XML:
<hibernate-mapping xmlns="urn:nhibernate-mapping-2.2"><class xmlns="urn:nhibernate-mapping-2.2" name="CumbriaMD.Domain.Brand, CumbriaMD.Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" table="`Brand`"><id access="backfield" name="Id" type="System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"><column name="Id" /><generator class="identity" /></id><bag name="Products"><key><column name="Brand_id" /></key><one-to-many class="CumbriaMD.Domain.Product, CumbriaMD.Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" /></bag><property name="Name" type="System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"><column name="Name" length="50" not-null="true" /></property><property name="IsActive" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"><column name="IsActive" not-null="true" /></property><many-to-one class="CumbriaMD.Domain.Product, CumbriaMD.Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" name="DefaultProduct"><column name="DefaultProduct_id" /></many-to-one></class></hibernate-mapping>
INFO 6 NHibernate.Dialect.Dialect - Using dialect: NHibernate.Dialect.MsSql2008Dialect
INFO 6 NHibernate.Cfg.XmlHbmBinding.Binder - Mapping class: CumbriaMD.Domain.Brand -> Brand
DEBUG 6 NHibernate.Cfg.XmlHbmBinding.Binder - Mapped property: Id -> Id, type: Int32
DEBUG 6 NHibernate.Cfg.XmlHbmBinding.Binder - Mapped property: Products, type: System.Collections.Generic.ICollection`1[[CumbriaMD.Domain.Product, CumbriaMD.Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]](CumbriaMD.Domain.Brand.Products)
DEBUG 6 NHibernate.Cfg.XmlHbmBinding.Binder - Mapped property: Name -> Name, type: String
DEBUG 6 NHibernate.Cfg.XmlHbmBinding.Binder - Mapped property: IsActive -> IsActive, type: Boolean
DEBUG 6 NHibernate.Cfg.XmlHbmBinding.Binder - Mapped property: DefaultProduct -> DefaultProduct_id, type: CumbriaMD.Domain.Product
DEBUG 6 NHibernate.Cfg.Configuration - Mapping XML:
<hibernate-mapping xmlns="urn:nhibernate-mapping-2.2"><class xmlns="urn:nhibernate-mapping-2.2" name="CumbriaMD.Domain.Category, CumbriaMD.Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" table="`Category`"><id access="backfield" name="Id" type="System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"><column name="Id" /><generator class="identity" /></id><bag cascade="all" inverse="true" name="Products" table="CategoriesProducts"><key><column name="Category_id" /></key><many-to-many class="CumbriaMD.Domain.Product, CumbriaMD.Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null"><column name="Product_id" /></many-to-many></bag><bag name="Children"><key><column name="ParentCategory" /></key><one-to-many class="CumbriaMD.Domain.Category, CumbriaMD.Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" /></bag><property name="IsActive" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"><column name="IsActive" not-null="true" /></property><property name="OrderInList" type="System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"><column name="OrderInList" /></property><many-to-one class="CumbriaMD.Domain.Category, CumbriaMD.Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" name="Parent"><column name="ParentCategory" /></many-to-one></class></hibernate-mapping>
INFO 6 NHibernate.Dialect.Dialect - Using dialect: NHibernate.Dialect.MsSql2008Dialect
INFO 6 NHibernate.Cfg.XmlHbmBinding.Binder - Mapping class: CumbriaMD.Domain.Category -> Category
DEBUG 6 NHibernate.Cfg.XmlHbmBinding.Binder - Mapped property: Id -> Id, type: Int32
INFO 6 NHibernate.Cfg.XmlHbmBinding.Binder - Mapping collection: CumbriaMD.Domain.Category.Products -> CategoriesProducts
DEBUG 6 NHibernate.Cfg.XmlHbmBinding.Binder - Mapped property: Products, type: System.Collections.Generic.ICollection`1[[CumbriaMD.Domain.Product, CumbriaMD.Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]](CumbriaMD.Domain.Category.Products)
DEBUG 6 NHibernate.Cfg.XmlHbmBinding.Binder - Mapped property: Children, type: System.Collections.Generic.ICollection`1[[CumbriaMD.Domain.Category, CumbriaMD.Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]](CumbriaMD.Domain.Category.Children)
DEBUG 6 NHibernate.Cfg.XmlHbmBinding.Binder - Mapped property: IsActive -> IsActive, type: Boolean
DEBUG 6 NHibernate.Cfg.XmlHbmBinding.Binder - Mapped property: OrderInList -> OrderInList, type: Int32
DEBUG 6 NHibernate.Cfg.XmlHbmBinding.Binder - Mapped property: Parent -> ParentCategory, type: CumbriaMD.Domain.Category
DEBUG 6 NHibernate.Cfg.Configuration - Mapping XML:
<hibernate-mapping xmlns="urn:nhibernate-mapping-2.2"><class xmlns="urn:nhibernate-mapping-2.2" name="CumbriaMD.Domain.Product, CumbriaMD.Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" table="`Product`"><id access="backfield" name="Id" type="System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"><column name="Id" /><generator class="identity" /></id><bag cascade="all" name="Categories" table="CategoriesProducts"><key><column name="Product_id" /></key><many-to-many class="CumbriaMD.Domain.Category, CumbriaMD.Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null"><column name="Category_id" /></many-to-many></bag><property name="Name" type="System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"><column name="Name" length="100" not-null="true" /></property><property name="Code" type="System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"><column name="Code" not-null="true" /></property><property name="Description" type="System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"><column name="Description" length="1500" not-null="true" /></property><property name="Price" type="System.Decimal, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"><column name="Price" not-null="true" /></property><property name="IsDiscounted" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"><column name="IsDiscounted" not-null="true" /></property><property name="IsInStock" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"><column name="IsInStock" not-null="true" /></property><property name="AddedAt" type="System.Nullable`1[[System.DateTime, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]], mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"><column name="AddedAt" not-null="true" /></property><property name="UpdatedAt" type="System.Nullable`1[[System.DateTime, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]], mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"><column name="UpdatedAt" not-null="true" /></property><many-to-one class="CumbriaMD.Domain.Brand, CumbriaMD.Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" name="Brand"><column name="Brand_id" not-null="true" /></many-to-one></class></hibernate-mapping>
INFO 6 NHibernate.Dialect.Dialect - Using dialect: NHibernate.Dialect.MsSql2008Dialect
INFO 6 NHibernate.Cfg.XmlHbmBinding.Binder - Mapping class: CumbriaMD.Domain.Product -> Product
DEBUG 6 NHibernate.Cfg.XmlHbmBinding.Binder - Mapped property: Id -> Id, type: Int32
INFO 6 NHibernate.Cfg.XmlHbmBinding.Binder - Mapping collection: CumbriaMD.Domain.Product.Categories -> CategoriesProducts
DEBUG 6 NHibernate.Cfg.XmlHbmBinding.Binder - Mapped property: Categories, type: System.Collections.Generic.ICollection`1[[CumbriaMD.Domain.Category, CumbriaMD.Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]](CumbriaMD.Domain.Product.Categories)
DEBUG 6 NHibernate.Cfg.XmlHbmBinding.Binder - Mapped property: Name -> Name, type: String
DEBUG 6 NHibernate.Cfg.XmlHbmBinding.Binder - Mapped property: Code -> Code, type: String
DEBUG 6 NHibernate.Cfg.XmlHbmBinding.Binder - Mapped property: Description -> Description, type: String
DEBUG 6 NHibernate.Cfg.XmlHbmBinding.Binder - Mapped property: Price -> Price, type: Decimal
DEBUG 6 NHibernate.Cfg.XmlHbmBinding.Binder - Mapped property: IsDiscounted -> IsDiscounted, type: Boolean
DEBUG 6 NHibernate.Cfg.XmlHbmBinding.Binder - Mapped property: IsInStock -> IsInStock, type: Boolean
DEBUG 6 NHibernate.Cfg.XmlHbmBinding.Binder - Mapped property: AddedAt -> AddedAt, type: DateTime
DEBUG 6 NHibernate.Cfg.XmlHbmBinding.Binder - Mapped property: UpdatedAt -> UpdatedAt, type: DateTime
DEBUG 6 NHibernate.Cfg.XmlHbmBinding.Binder - Mapped property: Brand -> Brand_id, type: CumbriaMD.Domain.Brand
INFO 6 NHibernate.Dialect.Dialect - Using dialect: NHibernate.Dialect.MsSql2008Dialect
INFO 6 NHibernate.Dialect.Dialect - Using dialect: NHibernate.Dialect.MsSql2008Dialect
INFO 6 NHibernate.Connection.ConnectionProviderFactory - Initializing connection provider: NHibernate.Connection.DriverConnectionProvider
INFO 6 NHibernate.Connection.ConnectionProvider - Configuring ConnectionProvider
DEBUG 6 NHibernate.Connection.DriverConnectionProvider - Obtaining IDbConnection from Driver
DEBUG 6 NHibernate.Connection.ConnectionProvider - Closing connection
INFO 6 NHibernate.Dialect.Dialect - Using dialect: NHibernate.Dialect.MsSql2008Dialect
INFO 6 NHibernate.Cfg.Configuration - checking mappings queue
INFO 6 NHibernate.Cfg.Configuration - processing one-to-many association mappings
DEBUG 6 NHibernate.Cfg.XmlHbmBinding.Binder - Second pass for collection: CumbriaMD.Domain.Brand.Products
INFO 6 NHibernate.Cfg.XmlHbmBinding.Binder - mapping collection: CumbriaMD.Domain.Brand.Products -> Product
DEBUG 6 NHibernate.Cfg.XmlHbmBinding.Binder - Mapped collection key: Brand_id, one-to-many: CumbriaMD.Domain.Product
DEBUG 6 NHibernate.Cfg.XmlHbmBinding.Binder - Second pass for collection: CumbriaMD.Domain.Category.Products
DEBUG 6 NHibernate.Cfg.XmlHbmBinding.Binder - Mapped collection key: Category_id, element: Product_id, type: CumbriaMD.Domain.Product
DEBUG 6 NHibernate.Cfg.XmlHbmBinding.Binder - Second pass for collection: CumbriaMD.Domain.Category.Children
INFO 6 NHibernate.Cfg.XmlHbmBinding.Binder - mapping collection: CumbriaMD.Domain.Category.Children -> Category
DEBUG 6 NHibernate.Cfg.XmlHbmBinding.Binder - Mapped collection key: ParentCategory, one-to-many: CumbriaMD.Domain.Category
DEBUG 6 NHibernate.Cfg.XmlHbmBinding.Binder - Second pass for collection: CumbriaMD.Domain.Product.Categories
DEBUG 6 NHibernate.Cfg.XmlHbmBinding.Binder - Mapped collection key: Product_id, element: Category_id, type: CumbriaMD.Domain.Category
INFO 6 NHibernate.Cfg.Configuration - processing one-to-one association property references
INFO 6 NHibernate.Cfg.Configuration - processing foreign key constraints
DEBUG 6 NHibernate.Cfg.Configuration - resolving reference to class: CumbriaMD.Domain.Product
DEBUG 6 NHibernate.Cfg.Configuration - resolving reference to class: CumbriaMD.Domain.Category
DEBUG 6 NHibernate.Cfg.Configuration - resolving reference to class: CumbriaMD.Domain.Product
DEBUG 6 NHibernate.Cfg.Configuration - resolving reference to class: CumbriaMD.Domain.Category
DEBUG 6 NHibernate.Cfg.Configuration - resolving reference to class: CumbriaMD.Domain.Brand
INFO 6 NHibernate.Cfg.Configuration - processing filters (second pass)
INFO 6 NHibernate.Cfg.Configuration - checking mappings queue
INFO 6 NHibernate.Cfg.Configuration - processing one-to-many association mappings
INFO 6 NHibernate.Cfg.Configuration - processing one-to-one association property references
INFO 6 NHibernate.Cfg.Configuration - processing foreign key constraints
DEBUG 6 NHibernate.Cfg.Configuration - resolving reference to class: CumbriaMD.Domain.Product
DEBUG 6 NHibernate.Cfg.Configuration - resolving reference to class: CumbriaMD.Domain.Category
DEBUG 6 NHibernate.Cfg.Configuration - resolving reference to class: CumbriaMD.Domain.Product
DEBUG 6 NHibernate.Cfg.Configuration - resolving reference to class: CumbriaMD.Domain.Category
DEBUG 6 NHibernate.Cfg.Configuration - resolving reference to class: CumbriaMD.Domain.Brand
INFO 6 NHibernate.Cfg.Configuration - processing filters (second pass)
INFO 6 NHibernate.Connection.ConnectionProviderFactory - Initializing connection provider: NHibernate.Connection.DriverConnectionProvider
INFO 6 NHibernate.Connection.ConnectionProvider - Configuring ConnectionProvider
DEBUG 6 NHibernate.Connection.DriverConnectionProvider - Obtaining IDbConnection from Driver
DEBUG 6 NHibernate.Tool.hbm2ddl.SchemaExport - 
    if exists (select 1 from sys.objects where object_id = OBJECT_ID(N'[FK18E3AB3D8E538E2D]') AND parent_object_id = OBJECT_ID('[Brand]'))
alter table [Brand]  drop constraint FK18E3AB3D8E538E2D

DEBUG 6 NHibernate.Tool.hbm2ddl.SchemaExport - SQL Batch: if exists (select 1 from sys.objects where object_id = OBJECT_ID(N'[FK18E3AB3D8E538E2D]') AND parent_object_id = OBJECT_ID('[Brand]'))
alter table [Brand]  drop constraint FK18E3AB3D8E538E2D
DEBUG 6 NHibernate.Tool.hbm2ddl.SchemaExport - 
    if exists (select 1 from sys.objects where object_id = OBJECT_ID(N'[FK6482F24CBCE17DD]') AND parent_object_id = OBJECT_ID('[Category]'))
alter table [Category]  drop constraint FK6482F24CBCE17DD

DEBUG 6 NHibernate.Tool.hbm2ddl.SchemaExport - SQL Batch: if exists (select 1 from sys.objects where object_id = OBJECT_ID(N'[FK6482F24CBCE17DD]') AND parent_object_id = OBJECT_ID('[Category]'))
alter table [Category]  drop constraint FK6482F24CBCE17DD
DEBUG 6 NHibernate.Tool.hbm2ddl.SchemaExport - 
    if exists (select 1 from sys.objects where object_id = OBJECT_ID(N'[FKAD3E9DD3350EC5DF]') AND parent_object_id = OBJECT_ID('CategoriesProducts'))
alter table CategoriesProducts  drop constraint FKAD3E9DD3350EC5DF

DEBUG 6 NHibernate.Tool.hbm2ddl.SchemaExport - SQL Batch: if exists (select 1 from sys.objects where object_id = OBJECT_ID(N'[FKAD3E9DD3350EC5DF]') AND parent_object_id = OBJECT_ID('CategoriesProducts'))
alter table CategoriesProducts  drop constraint FKAD3E9DD3350EC5DF
DEBUG 6 NHibernate.Tool.hbm2ddl.SchemaExport - 
    if exists (select 1 from sys.objects where object_id = OBJECT_ID(N'[FKAD3E9DD3ED552755]') AND parent_object_id = OBJECT_ID('CategoriesProducts'))
alter table CategoriesProducts  drop constraint FKAD3E9DD3ED552755

DEBUG 6 NHibernate.Tool.hbm2ddl.SchemaExport - SQL Batch: if exists (select 1 from sys.objects where object_id = OBJECT_ID(N'[FKAD3E9DD3ED552755]') AND parent_object_id = OBJECT_ID('CategoriesProducts'))
alter table CategoriesProducts  drop constraint FKAD3E9DD3ED552755
DEBUG 6 NHibernate.Tool.hbm2ddl.SchemaExport - 
    if exists (select 1 from sys.objects where object_id = OBJECT_ID(N'[FK1F94D86AF20A7EB]') AND parent_object_id = OBJECT_ID('[Product]'))
alter table [Product]  drop constraint FK1F94D86AF20A7EB

DEBUG 6 NHibernate.Tool.hbm2ddl.SchemaExport - SQL Batch: if exists (select 1 from sys.objects where object_id = OBJECT_ID(N'[FK1F94D86AF20A7EB]') AND parent_object_id = OBJECT_ID('[Product]'))
alter table [Product]  drop constraint FK1F94D86AF20A7EB
DEBUG 6 NHibernate.Tool.hbm2ddl.SchemaExport - 
    if exists (select * from dbo.sysobjects where id = object_id(N'[Brand]') and OBJECTPROPERTY(id, N'IsUserTable') = 1) drop table [Brand]
DEBUG 6 NHibernate.Tool.hbm2ddl.SchemaExport - SQL Batch: if exists (select * from dbo.sysobjects where id = object_id(N'[Brand]') and OBJECTPROPERTY(id, N'IsUserTable') = 1) drop table [Brand]
DEBUG 6 NHibernate.Tool.hbm2ddl.SchemaExport - 
    if exists (select * from dbo.sysobjects where id = object_id(N'[Category]') and OBJECTPROPERTY(id, N'IsUserTable') = 1) drop table [Category]
DEBUG 6 NHibernate.Tool.hbm2ddl.SchemaExport - SQL Batch: if exists (select * from dbo.sysobjects where id = object_id(N'[Category]') and OBJECTPROPERTY(id, N'IsUserTable') = 1) drop table [Category]
DEBUG 6 NHibernate.Tool.hbm2ddl.SchemaExport - 
    if exists (select * from dbo.sysobjects where id = object_id(N'CategoriesProducts') and OBJECTPROPERTY(id, N'IsUserTable') = 1) drop table CategoriesProducts
DEBUG 6 NHibernate.Tool.hbm2ddl.SchemaExport - SQL Batch: if exists (select * from dbo.sysobjects where id = object_id(N'CategoriesProducts') and OBJECTPROPERTY(id, N'IsUserTable') = 1) drop table CategoriesProducts
DEBUG 6 NHibernate.Tool.hbm2ddl.SchemaExport - 
    if exists (select * from dbo.sysobjects where id = object_id(N'[Product]') and OBJECTPROPERTY(id, N'IsUserTable') = 1) drop table [Product]
DEBUG 6 NHibernate.Tool.hbm2ddl.SchemaExport - SQL Batch: if exists (select * from dbo.sysobjects where id = object_id(N'[Product]') and OBJECTPROPERTY(id, N'IsUserTable') = 1) drop table [Product]
DEBUG 6 NHibernate.Tool.hbm2ddl.SchemaExport - 
    create table [Brand] (
        Id INT IDENTITY NOT NULL,
       Name NVARCHAR(50) not null,
       IsActive BIT not null,
       DefaultProduct_id INT null,
       primary key (Id)
    )
DEBUG 6 NHibernate.Tool.hbm2ddl.SchemaExport - SQL Batch: create table [Brand] (Id INT IDENTITY NOT NULL, Name NVARCHAR(50) not null, IsActive BIT not null, DefaultProduct_id INT null, primary key (Id))
DEBUG 6 NHibernate.Tool.hbm2ddl.SchemaExport - 
    create table [Category] (
        Id INT IDENTITY NOT NULL,
       IsActive BIT not null,
       OrderInList INT null,
       ParentCategory INT null,
       primary key (Id)
    )
DEBUG 6 NHibernate.Tool.hbm2ddl.SchemaExport - SQL Batch: create table [Category] (Id INT IDENTITY NOT NULL, IsActive BIT not null, OrderInList INT null, ParentCategory INT null, primary key (Id))
DEBUG 6 NHibernate.Tool.hbm2ddl.SchemaExport - 
    create table CategoriesProducts (
        Category_id INT not null,
       Product_id INT not null
    )
DEBUG 6 NHibernate.Tool.hbm2ddl.SchemaExport - SQL Batch: create table CategoriesProducts (Category_id INT not null, Product_id INT not null)
DEBUG 6 NHibernate.Tool.hbm2ddl.SchemaExport - 
    create table [Product] (
        Id INT IDENTITY NOT NULL,
       Name NVARCHAR(100) not null,
       Code NVARCHAR(255) not null,
       Description NVARCHAR(1500) not null,
       Price DECIMAL(19,5) not null,
       IsDiscounted BIT not null,
       IsInStock BIT not null,
       AddedAt DATETIME not null,
       UpdatedAt DATETIME not null,
       Brand_id INT not null,
       primary key (Id)
    )
DEBUG 6 NHibernate.Tool.hbm2ddl.SchemaExport - SQL Batch: create table [Product] (Id INT IDENTITY NOT NULL, Name NVARCHAR(100) not null, Code NVARCHAR(255) not null, Description NVARCHAR(1500) not null, Price DECIMAL(19,5) not null, IsDiscounted BIT not null, IsInStock BIT not null, AddedAt DATETIME not null, UpdatedAt DATETIME not null, Brand_id INT not null, primary key (Id))
DEBUG 6 NHibernate.Tool.hbm2ddl.SchemaExport - 
    alter table [Brand] 
        add constraint FK18E3AB3D8E538E2D 
        foreign key (DefaultProduct_id) 
        references [Product]
DEBUG 6 NHibernate.Tool.hbm2ddl.SchemaExport - SQL Batch: alter table [Brand] add constraint FK18E3AB3D8E538E2D foreign key (DefaultProduct_id) references [Product]
DEBUG 6 NHibernate.Tool.hbm2ddl.SchemaExport - 
    alter table [Category] 
        add constraint FK6482F24CBCE17DD 
        foreign key (ParentCategory) 
        references [Category]
DEBUG 6 NHibernate.Tool.hbm2ddl.SchemaExport - SQL Batch: alter table [Category] add constraint FK6482F24CBCE17DD foreign key (ParentCategory) references [Category]
DEBUG 6 NHibernate.Tool.hbm2ddl.SchemaExport - 
    alter table CategoriesProducts 
        add constraint FKAD3E9DD3350EC5DF 
        foreign key (Product_id) 
        references [Product]
DEBUG 6 NHibernate.Tool.hbm2ddl.SchemaExport - SQL Batch: alter table CategoriesProducts add constraint FKAD3E9DD3350EC5DF foreign key (Product_id) references [Product]
DEBUG 6 NHibernate.Tool.hbm2ddl.SchemaExport - 
    alter table CategoriesProducts 
        add constraint FKAD3E9DD3ED552755 
        foreign key (Category_id) 
        references [Category]
DEBUG 6 NHibernate.Tool.hbm2ddl.SchemaExport - SQL Batch: alter table CategoriesProducts add constraint FKAD3E9DD3ED552755 foreign key (Category_id) references [Category]
DEBUG 6 NHibernate.Tool.hbm2ddl.SchemaExport - 
    alter table [Product] 
        add constraint FK1F94D86AF20A7EB 
        foreign key (Brand_id) 
        references [Brand]
DEBUG 6 NHibernate.Tool.hbm2ddl.SchemaExport - SQL Batch: alter table [Product] add constraint FK1F94D86AF20A7EB foreign key (Brand_id) references [Brand]
DEBUG 6 NHibernate.Connection.ConnectionProvider - Closing connection
DEBUG 6 NHibernate.Connection.ConnectionProvider - Disposing of ConnectionProvider.
INFO 6 NHibernate.Cfg.Configuration - checking mappings queue
INFO 6 NHibernate.Cfg.Configuration - processing one-to-many association mappings
INFO 6 NHibernate.Cfg.Configuration - processing one-to-one association property references
INFO 6 NHibernate.Cfg.Configuration - processing foreign key constraints
DEBUG 6 NHibernate.Cfg.Configuration - resolving reference to class: CumbriaMD.Domain.Product
DEBUG 6 NHibernate.Cfg.Configuration - resolving reference to class: CumbriaMD.Domain.Category
DEBUG 6 NHibernate.Cfg.Configuration - resolving reference to class: CumbriaMD.Domain.Product
DEBUG 6 NHibernate.Cfg.Configuration - resolving reference to class: CumbriaMD.Domain.Category
DEBUG 6 NHibernate.Cfg.Configuration - resolving reference to class: CumbriaMD.Domain.Brand
INFO 6 NHibernate.Cfg.Configuration - processing filters (second pass)
INFO 6 NHibernate.Dialect.Dialect - Using dialect: NHibernate.Dialect.MsSql2008Dialect
INFO 6 NHibernate.Dialect.Dialect - Using dialect: NHibernate.Dialect.MsSql2008Dialect
INFO 6 NHibernate.Exceptions.SQLExceptionConverterFactory - Using dialect defined converter
INFO 6 NHibernate.Cfg.SettingsFactory - Generate SQL with comments: disabled
INFO 6 NHibernate.Connection.ConnectionProviderFactory - Initializing connection provider: NHibernate.Connection.DriverConnectionProvider
INFO 6 NHibernate.Connection.ConnectionProvider - Configuring ConnectionProvider
INFO 6 NHibernate.Cfg.SettingsFactory - Transaction factory: NHibernate.Transaction.AdoNetWithDistributedTransactionFactory
INFO 6 NHibernate.Cfg.SettingsFactory - Optimize cache for minimal puts: False
INFO 6 NHibernate.Cfg.SettingsFactory - Connection release mode: auto
INFO 6 NHibernate.Cfg.SettingsFactory - Default batch fetch size: 1
INFO 6 NHibernate.Cfg.SettingsFactory - echoing all SQL to stdout
INFO 6 NHibernate.Cfg.SettingsFactory - Statistics: disabled
INFO 6 NHibernate.Cfg.SettingsFactory - Deleted entity synthetic identifier rollback: disabled
INFO 6 NHibernate.Cfg.SettingsFactory - Query translator: NHibernate.Hql.Ast.ANTLR.ASTQueryTranslatorFactory
INFO 6 NHibernate.Cfg.SettingsFactory - Query language substitutions: {'true'='1', 'false'='0', 'yes'=''Y'', 'no'=''N''}
INFO 6 NHibernate.Cfg.SettingsFactory - cache provider: NHibernate.Cache.NoCacheProvider, NHibernate, Version=3.3.1.4000, Culture=neutral, PublicKeyToken=aa95f207798dfdb4
INFO 6 NHibernate.Cfg.SettingsFactory - Order SQL inserts for batching: enabled
DEBUG 6 NHibernate.Cfg.SettingsFactory - Wrap result sets: disabled
INFO 6 NHibernate.Cfg.SettingsFactory - Batcher factory: NHibernate.AdoNet.SqlClientBatchingBatcherFactory, NHibernate, Version=3.3.1.4000, Culture=neutral, PublicKeyToken=aa95f207798dfdb4
INFO 6 NHibernate.Cfg.SettingsFactory - Default entity-mode: Poco
INFO 6 NHibernate.Cfg.SettingsFactory - Named query checking : enabled
INFO 6 NHibernate.Impl.SessionFactoryImpl - building session factory
DEBUG 6 NHibernate.Impl.SessionFactoryImpl - Session factory constructed with filter configurations : {}
DEBUG 6 NHibernate.Impl.SessionFactoryImpl - instantiating session factory with properties: {'use_reflection_optimizer'='True', 'connection.provider'='NHibernate.Connection.DriverConnectionProvider', 'connection.driver_class'='NHibernate.Driver.SqlClientDriver, NHibernate, Version=3.3.1.4000, Culture=neutral, PublicKeyToken=aa95f207798dfdb4', 'dialect'='NHibernate.Dialect.MsSql2008Dialect, NHibernate, Version=3.3.1.4000, Culture=neutral, PublicKeyToken=aa95f207798dfdb4', 'hibernate.dialect'='NHibernate.Dialect.MsSql2008Dialect, NHibernate, Version=3.3.1.4000, Culture=neutral, PublicKeyToken=aa95f207798dfdb4', 'use_outer_join'='true', 'show_sql'='true', 'connection.connection_string'='Data Source=localhost\SQLEXPRESS;Initial Catalog=eDetectorDb;Integrated Security=true'}
DEBUG 6 NHibernate.Connection.DriverConnectionProvider - Obtaining IDbConnection from Driver
DEBUG 6 NHibernate.Connection.ConnectionProvider - Closing connection
DEBUG 6 NHibernate.Tuple.Entity.AbstractEntityTuplizer - No custom accessors found for entity: CumbriaMD.Domain.Brand
DEBUG 6 NHibernate.Tuple.Entity.AbstractEntityTuplizer - No custom accessors found for entity: CumbriaMD.Domain.Brand
DEBUG 6 NHibernate.Tuple.Entity.PocoEntityTuplizer - Create Instantiator using optimizer for:CumbriaMD.Domain.Brand
DEBUG 6 NHibernate.Tuple.Entity.AbstractEntityTuplizer - No custom accessors found for entity: CumbriaMD.Domain.Category
DEBUG 6 NHibernate.Tuple.Entity.AbstractEntityTuplizer - No custom accessors found for entity: CumbriaMD.Domain.Category
DEBUG 6 NHibernate.Tuple.Entity.PocoEntityTuplizer - Create Instantiator using optimizer for:CumbriaMD.Domain.Category
DEBUG 6 NHibernate.Tuple.Entity.AbstractEntityTuplizer - No custom accessors found for entity: CumbriaMD.Domain.Product
DEBUG 6 NHibernate.Tuple.Entity.AbstractEntityTuplizer - No custom accessors found for entity: CumbriaMD.Domain.Product
DEBUG 6 NHibernate.Tuple.Entity.PocoEntityTuplizer - Create Instantiator using optimizer for:CumbriaMD.Domain.Product
DEBUG 6 NHibernate.Persister.Collection.ICollectionPersister - Static SQL for collection: CumbriaMD.Domain.Brand.Products
DEBUG 6 NHibernate.Persister.Collection.ICollectionPersister -  Row insert: UPDATE [Product] SET Brand_id = ? WHERE Id = ?
DEBUG 6 NHibernate.Persister.Collection.ICollectionPersister -  Row delete: UPDATE [Product] SET Brand_id = null WHERE Brand_id = ? AND Id = ?
DEBUG 6 NHibernate.Persister.Collection.ICollectionPersister -  One-shot delete: UPDATE [Product] SET Brand_id = null WHERE Brand_id = ?
DEBUG 6 NHibernate.Persister.Collection.ICollectionPersister - Static SQL for collection: CumbriaMD.Domain.Category.Products
DEBUG 6 NHibernate.Persister.Collection.ICollectionPersister -  Row insert: INSERT INTO CategoriesProducts (Category_id, Product_id) VALUES (?, ?)
DEBUG 6 NHibernate.Persister.Collection.ICollectionPersister -  Row update: UPDATE CategoriesProducts SET Product_id = ? WHERE Category_id = ? AND Product_id = ?
DEBUG 6 NHibernate.Persister.Collection.ICollectionPersister -  Row delete: DELETE FROM CategoriesProducts WHERE Category_id = ? AND Product_id = ?
DEBUG 6 NHibernate.Persister.Collection.ICollectionPersister -  One-shot delete: DELETE FROM CategoriesProducts WHERE Category_id = ?
DEBUG 6 NHibernate.Persister.Collection.ICollectionPersister - Static SQL for collection: CumbriaMD.Domain.Category.Children
DEBUG 6 NHibernate.Persister.Collection.ICollectionPersister -  Row insert: UPDATE [Category] SET ParentCategory = ? WHERE Id = ?
DEBUG 6 NHibernate.Persister.Collection.ICollectionPersister -  Row delete: UPDATE [Category] SET ParentCategory = null WHERE ParentCategory = ? AND Id = ?
DEBUG 6 NHibernate.Persister.Collection.ICollectionPersister -  One-shot delete: UPDATE [Category] SET ParentCategory = null WHERE ParentCategory = ?
DEBUG 6 NHibernate.Persister.Collection.ICollectionPersister - Static SQL for collection: CumbriaMD.Domain.Product.Categories
DEBUG 6 NHibernate.Persister.Collection.ICollectionPersister -  Row insert: INSERT INTO CategoriesProducts (Product_id, Category_id) VALUES (?, ?)
DEBUG 6 NHibernate.Persister.Collection.ICollectionPersister -  Row update: UPDATE CategoriesProducts SET Category_id = ? WHERE Product_id = ? AND Category_id = ?
DEBUG 6 NHibernate.Persister.Collection.ICollectionPersister -  Row delete: DELETE FROM CategoriesProducts WHERE Product_id = ? AND Category_id = ?
DEBUG 6 NHibernate.Persister.Collection.ICollectionPersister -  One-shot delete: DELETE FROM CategoriesProducts WHERE Product_id = ?
DEBUG 6 NHibernate.Persister.Entity.AbstractEntityPersister - Static SQL for entity: CumbriaMD.Domain.Brand
DEBUG 6 NHibernate.Persister.Entity.AbstractEntityPersister -  Version select: SELECT Id FROM [Brand] WHERE Id = ?
DEBUG 6 NHibernate.Persister.Entity.AbstractEntityPersister -  Snapshot select: SELECT brand_.Id, brand_.Name as Name0_, brand_.IsActive as IsActive0_, brand_.DefaultProduct_id as DefaultP4_0_ FROM [Brand] brand_ WHERE brand_.Id=?
DEBUG 6 NHibernate.Persister.Entity.AbstractEntityPersister -  Insert 0: INSERT INTO [Brand] (Name, IsActive, DefaultProduct_id, Id) VALUES (?, ?, ?, ?)
DEBUG 6 NHibernate.Persister.Entity.AbstractEntityPersister -  Update 0: UPDATE [Brand] SET Name = ?, IsActive = ?, DefaultProduct_id = ? WHERE Id = ?
DEBUG 6 NHibernate.Persister.Entity.AbstractEntityPersister -  Delete 0: DELETE FROM [Brand] WHERE Id = ?
DEBUG 6 NHibernate.Persister.Entity.AbstractEntityPersister -  Identity insert: INSERT INTO [Brand] (Name, IsActive, DefaultProduct_id) VALUES (?, ?, ?); select SCOPE_IDENTITY()
DEBUG 6 NHibernate.Loader.Entity.AbstractEntityLoader - Static select for entity CumbriaMD.Domain.Brand: SELECT brand0_.Id as Id0_0_, brand0_.Name as Name0_0_, brand0_.IsActive as IsActive0_0_, brand0_.DefaultProduct_id as DefaultP4_0_0_ FROM [Brand] brand0_ WHERE brand0_.Id=?
DEBUG 6 NHibernate.Loader.Entity.AbstractEntityLoader - Static select for entity CumbriaMD.Domain.Brand: SELECT brand0_.Id as Id0_0_, brand0_.Name as Name0_0_, brand0_.IsActive as IsActive0_0_, brand0_.DefaultProduct_id as DefaultP4_0_0_ FROM [Brand] brand0_ WHERE brand0_.Id=?
DEBUG 6 NHibernate.Loader.Entity.AbstractEntityLoader - Static select for entity CumbriaMD.Domain.Brand: SELECT brand0_.Id as Id0_0_, brand0_.Name as Name0_0_, brand0_.IsActive as IsActive0_0_, brand0_.DefaultProduct_id as DefaultP4_0_0_ FROM [Brand] brand0_ with (updlock, rowlock) WHERE brand0_.Id=?
DEBUG 6 NHibernate.Loader.Entity.AbstractEntityLoader - Static select for entity CumbriaMD.Domain.Brand: SELECT brand0_.Id as Id0_0_, brand0_.Name as Name0_0_, brand0_.IsActive as IsActive0_0_, brand0_.DefaultProduct_id as DefaultP4_0_0_ FROM [Brand] brand0_ with (updlock, rowlock, nowait) WHERE brand0_.Id=?
DEBUG 6 NHibernate.Loader.Entity.AbstractEntityLoader - Static select for entity CumbriaMD.Domain.Brand: SELECT brand0_.Id as Id0_0_, brand0_.Name as Name0_0_, brand0_.IsActive as IsActive0_0_, brand0_.DefaultProduct_id as DefaultP4_0_0_ FROM [Brand] brand0_ with (updlock, rowlock) WHERE brand0_.Id=?
DEBUG 6 NHibernate.Loader.Entity.AbstractEntityLoader - Static select for action NHibernate.Engine.CascadingAction+MergeCascadingAction on entity CumbriaMD.Domain.Brand: SELECT brand0_.Id as Id0_0_, brand0_.Name as Name0_0_, brand0_.IsActive as IsActive0_0_, brand0_.DefaultProduct_id as DefaultP4_0_0_ FROM [Brand] brand0_ WHERE brand0_.Id=?
DEBUG 6 NHibernate.Loader.Entity.AbstractEntityLoader - Static select for action NHibernate.Engine.CascadingAction+RefreshCascadingAction on entity CumbriaMD.Domain.Brand: SELECT brand0_.Id as Id0_0_, brand0_.Name as Name0_0_, brand0_.IsActive as IsActive0_0_, brand0_.DefaultProduct_id as DefaultP4_0_0_ FROM [Brand] brand0_ WHERE brand0_.Id=?
DEBUG 6 NHibernate.Persister.Entity.AbstractEntityPersister - Static SQL for entity: CumbriaMD.Domain.Category
DEBUG 6 NHibernate.Persister.Entity.AbstractEntityPersister -  Version select: SELECT Id FROM [Category] WHERE Id = ?
DEBUG 6 NHibernate.Persister.Entity.AbstractEntityPersister -  Snapshot select: SELECT category_.Id, category_.IsActive as IsActive1_, category_.OrderInList as OrderInL3_1_, category_.ParentCategory as ParentCa4_1_ FROM [Category] category_ WHERE category_.Id=?
DEBUG 6 NHibernate.Persister.Entity.AbstractEntityPersister -  Insert 0: INSERT INTO [Category] (IsActive, OrderInList, ParentCategory, Id) VALUES (?, ?, ?, ?)
DEBUG 6 NHibernate.Persister.Entity.AbstractEntityPersister -  Update 0: UPDATE [Category] SET IsActive = ?, OrderInList = ?, ParentCategory = ? WHERE Id = ?
DEBUG 6 NHibernate.Persister.Entity.AbstractEntityPersister -  Delete 0: DELETE FROM [Category] WHERE Id = ?
DEBUG 6 NHibernate.Persister.Entity.AbstractEntityPersister -  Identity insert: INSERT INTO [Category] (IsActive, OrderInList, ParentCategory) VALUES (?, ?, ?); select SCOPE_IDENTITY()
DEBUG 6 NHibernate.Loader.Entity.AbstractEntityLoader - Static select for entity CumbriaMD.Domain.Category: SELECT category0_.Id as Id1_0_, category0_.IsActive as IsActive1_0_, category0_.OrderInList as OrderInL3_1_0_, category0_.ParentCategory as ParentCa4_1_0_ FROM [Category] category0_ WHERE category0_.Id=?
DEBUG 6 NHibernate.Loader.Entity.AbstractEntityLoader - Static select for entity CumbriaMD.Domain.Category: SELECT category0_.Id as Id1_0_, category0_.IsActive as IsActive1_0_, category0_.OrderInList as OrderInL3_1_0_, category0_.ParentCategory as ParentCa4_1_0_ FROM [Category] category0_ WHERE category0_.Id=?
DEBUG 6 NHibernate.Loader.Entity.AbstractEntityLoader - Static select for entity CumbriaMD.Domain.Category: SELECT category0_.Id as Id1_0_, category0_.IsActive as IsActive1_0_, category0_.OrderInList as OrderInL3_1_0_, category0_.ParentCategory as ParentCa4_1_0_ FROM [Category] category0_ with (updlock, rowlock) WHERE category0_.Id=?
DEBUG 6 NHibernate.Loader.Entity.AbstractEntityLoader - Static select for entity CumbriaMD.Domain.Category: SELECT category0_.Id as Id1_0_, category0_.IsActive as IsActive1_0_, category0_.OrderInList as OrderInL3_1_0_, category0_.ParentCategory as ParentCa4_1_0_ FROM [Category] category0_ with (updlock, rowlock, nowait) WHERE category0_.Id=?
DEBUG 6 NHibernate.Loader.Entity.AbstractEntityLoader - Static select for entity CumbriaMD.Domain.Category: SELECT category0_.Id as Id1_0_, category0_.IsActive as IsActive1_0_, category0_.OrderInList as OrderInL3_1_0_, category0_.ParentCategory as ParentCa4_1_0_ FROM [Category] category0_ with (updlock, rowlock) WHERE category0_.Id=?
DEBUG 6 NHibernate.Loader.Entity.AbstractEntityLoader - Static select for action NHibernate.Engine.CascadingAction+MergeCascadingAction on entity CumbriaMD.Domain.Category: SELECT category0_.Id as Id1_1_, category0_.IsActive as IsActive1_1_, category0_.OrderInList as OrderInL3_1_1_, category0_.ParentCategory as ParentCa4_1_1_, products1_.Category_id as Category1_3_, product2_.Id as Product2_3_, product2_.Id as Id3_0_, product2_.Name as Name3_0_, product2_.Code as Code3_0_, product2_.Description as Descript4_3_0_, product2_.Price as Price3_0_, product2_.IsDiscounted as IsDiscou6_3_0_, product2_.IsInStock as IsInStock3_0_, product2_.AddedAt as AddedAt3_0_, product2_.UpdatedAt as UpdatedAt3_0_, product2_.Brand_id as Brand10_3_0_ FROM [Category] category0_ left outer join CategoriesProducts products1_ on category0_.Id=products1_.Category_id left outer join [Product] product2_ on products1_.Product_id=product2_.Id WHERE category0_.Id=?
DEBUG 6 NHibernate.Loader.Entity.AbstractEntityLoader - Static select for action NHibernate.Engine.CascadingAction+RefreshCascadingAction on entity CumbriaMD.Domain.Category: SELECT category0_.Id as Id1_1_, category0_.IsActive as IsActive1_1_, category0_.OrderInList as OrderInL3_1_1_, category0_.ParentCategory as ParentCa4_1_1_, products1_.Category_id as Category1_3_, product2_.Id as Product2_3_, product2_.Id as Id3_0_, product2_.Name as Name3_0_, product2_.Code as Code3_0_, product2_.Description as Descript4_3_0_, product2_.Price as Price3_0_, product2_.IsDiscounted as IsDiscou6_3_0_, product2_.IsInStock as IsInStock3_0_, product2_.AddedAt as AddedAt3_0_, product2_.UpdatedAt as UpdatedAt3_0_, product2_.Brand_id as Brand10_3_0_ FROM [Category] category0_ left outer join CategoriesProducts products1_ on category0_.Id=products1_.Category_id left outer join [Product] product2_ on products1_.Product_id=product2_.Id WHERE category0_.Id=?
DEBUG 6 NHibernate.Persister.Entity.AbstractEntityPersister - Static SQL for entity: CumbriaMD.Domain.Product
DEBUG 6 NHibernate.Persister.Entity.AbstractEntityPersister -  Version select: SELECT Id FROM [Product] WHERE Id = ?
DEBUG 6 NHibernate.Persister.Entity.AbstractEntityPersister -  Snapshot select: SELECT product_.Id, product_.Name as Name3_, product_.Code as Code3_, product_.Description as Descript4_3_, product_.Price as Price3_, product_.IsDiscounted as IsDiscou6_3_, product_.IsInStock as IsInStock3_, product_.AddedAt as AddedAt3_, product_.UpdatedAt as UpdatedAt3_, product_.Brand_id as Brand10_3_ FROM [Product] product_ WHERE product_.Id=?
DEBUG 6 NHibernate.Persister.Entity.AbstractEntityPersister -  Insert 0: INSERT INTO [Product] (Name, Code, Description, Price, IsDiscounted, IsInStock, AddedAt, UpdatedAt, Brand_id, Id) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
DEBUG 6 NHibernate.Persister.Entity.AbstractEntityPersister -  Update 0: UPDATE [Product] SET Name = ?, Code = ?, Description = ?, Price = ?, IsDiscounted = ?, IsInStock = ?, AddedAt = ?, UpdatedAt = ?, Brand_id = ? WHERE Id = ?
DEBUG 6 NHibernate.Persister.Entity.AbstractEntityPersister -  Delete 0: DELETE FROM [Product] WHERE Id = ?
DEBUG 6 NHibernate.Persister.Entity.AbstractEntityPersister -  Identity insert: INSERT INTO [Product] (Name, Code, Description, Price, IsDiscounted, IsInStock, AddedAt, UpdatedAt, Brand_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?); select SCOPE_IDENTITY()
DEBUG 6 NHibernate.Loader.Entity.AbstractEntityLoader - Static select for entity CumbriaMD.Domain.Product: SELECT product0_.Id as Id3_0_, product0_.Name as Name3_0_, product0_.Code as Code3_0_, product0_.Description as Descript4_3_0_, product0_.Price as Price3_0_, product0_.IsDiscounted as IsDiscou6_3_0_, product0_.IsInStock as IsInStock3_0_, product0_.AddedAt as AddedAt3_0_, product0_.UpdatedAt as UpdatedAt3_0_, product0_.Brand_id as Brand10_3_0_ FROM [Product] product0_ WHERE product0_.Id=?
DEBUG 6 NHibernate.Loader.Entity.AbstractEntityLoader - Static select for entity CumbriaMD.Domain.Product: SELECT product0_.Id as Id3_0_, product0_.Name as Name3_0_, product0_.Code as Code3_0_, product0_.Description as Descript4_3_0_, product0_.Price as Price3_0_, product0_.IsDiscounted as IsDiscou6_3_0_, product0_.IsInStock as IsInStock3_0_, product0_.AddedAt as AddedAt3_0_, product0_.UpdatedAt as UpdatedAt3_0_, product0_.Brand_id as Brand10_3_0_ FROM [Product] product0_ WHERE product0_.Id=?
DEBUG 6 NHibernate.Loader.Entity.AbstractEntityLoader - Static select for entity CumbriaMD.Domain.Product: SELECT product0_.Id as Id3_0_, product0_.Name as Name3_0_, product0_.Code as Code3_0_, product0_.Description as Descript4_3_0_, product0_.Price as Price3_0_, product0_.IsDiscounted as IsDiscou6_3_0_, product0_.IsInStock as IsInStock3_0_, product0_.AddedAt as AddedAt3_0_, product0_.UpdatedAt as UpdatedAt3_0_, product0_.Brand_id as Brand10_3_0_ FROM [Product] product0_ with (updlock, rowlock) WHERE product0_.Id=?
DEBUG 6 NHibernate.Loader.Entity.AbstractEntityLoader - Static select for entity CumbriaMD.Domain.Product: SELECT product0_.Id as Id3_0_, product0_.Name as Name3_0_, product0_.Code as Code3_0_, product0_.Description as Descript4_3_0_, product0_.Price as Price3_0_, product0_.IsDiscounted as IsDiscou6_3_0_, product0_.IsInStock as IsInStock3_0_, product0_.AddedAt as AddedAt3_0_, product0_.UpdatedAt as UpdatedAt3_0_, product0_.Brand_id as Brand10_3_0_ FROM [Product] product0_ with (updlock, rowlock, nowait) WHERE product0_.Id=?
DEBUG 6 NHibernate.Loader.Entity.AbstractEntityLoader - Static select for entity CumbriaMD.Domain.Product: SELECT product0_.Id as Id3_0_, product0_.Name as Name3_0_, product0_.Code as Code3_0_, product0_.Description as Descript4_3_0_, product0_.Price as Price3_0_, product0_.IsDiscounted as IsDiscou6_3_0_, product0_.IsInStock as IsInStock3_0_, product0_.AddedAt as AddedAt3_0_, product0_.UpdatedAt as UpdatedAt3_0_, product0_.Brand_id as Brand10_3_0_ FROM [Product] product0_ with (updlock, rowlock) WHERE product0_.Id=?
DEBUG 6 NHibernate.Loader.Entity.AbstractEntityLoader - Static select for action NHibernate.Engine.CascadingAction+MergeCascadingAction on entity CumbriaMD.Domain.Product: SELECT product0_.Id as Id3_1_, product0_.Name as Name3_1_, product0_.Code as Code3_1_, product0_.Description as Descript4_3_1_, product0_.Price as Price3_1_, product0_.IsDiscounted as IsDiscou6_3_1_, product0_.IsInStock as IsInStock3_1_, product0_.AddedAt as AddedAt3_1_, product0_.UpdatedAt as UpdatedAt3_1_, product0_.Brand_id as Brand10_3_1_, categories1_.Product_id as Product2_3_, category2_.Id as Category1_3_, category2_.Id as Id1_0_, category2_.IsActive as IsActive1_0_, category2_.OrderInList as OrderInL3_1_0_, category2_.ParentCategory as ParentCa4_1_0_ FROM [Product] product0_ left outer join CategoriesProducts categories1_ on product0_.Id=categories1_.Product_id left outer join [Category] category2_ on categories1_.Category_id=category2_.Id WHERE product0_.Id=?
DEBUG 6 NHibernate.Loader.Entity.AbstractEntityLoader - Static select for action NHibernate.Engine.CascadingAction+RefreshCascadingAction on entity CumbriaMD.Domain.Product: SELECT product0_.Id as Id3_1_, product0_.Name as Name3_1_, product0_.Code as Code3_1_, product0_.Description as Descript4_3_1_, product0_.Price as Price3_1_, product0_.IsDiscounted as IsDiscou6_3_1_, product0_.IsInStock as IsInStock3_1_, product0_.AddedAt as AddedAt3_1_, product0_.UpdatedAt as UpdatedAt3_1_, product0_.Brand_id as Brand10_3_1_, categories1_.Product_id as Product2_3_, category2_.Id as Category1_3_, category2_.Id as Id1_0_, category2_.IsActive as IsActive1_0_, category2_.OrderInList as OrderInL3_1_0_, category2_.ParentCategory as ParentCa4_1_0_ FROM [Product] product0_ left outer join CategoriesProducts categories1_ on product0_.Id=categories1_.Product_id left outer join [Category] category2_ on categories1_.Category_id=category2_.Id WHERE product0_.Id=?
DEBUG 6 NHibernate.Loader.Collection.OneToManyLoader - Static select for one-to-many CumbriaMD.Domain.Brand.Products: SELECT products0_.Brand_id as Brand10_1_, products0_.Id as Id1_, products0_.Id as Id3_0_, products0_.Name as Name3_0_, products0_.Code as Code3_0_, products0_.Description as Descript4_3_0_, products0_.Price as Price3_0_, products0_.IsDiscounted as IsDiscou6_3_0_, products0_.IsInStock as IsInStock3_0_, products0_.AddedAt as AddedAt3_0_, products0_.UpdatedAt as UpdatedAt3_0_, products0_.Brand_id as Brand10_3_0_ FROM [Product] products0_ WHERE products0_.Brand_id=?
DEBUG 6 NHibernate.Loader.Collection.BasicCollectionLoader - Static select for collection CumbriaMD.Domain.Category.Products: SELECT products0_.Category_id as Category1_1_, products0_.Product_id as Product2_1_, product1_.Id as Id3_0_, product1_.Name as Name3_0_, product1_.Code as Code3_0_, product1_.Description as Descript4_3_0_, product1_.Price as Price3_0_, product1_.IsDiscounted as IsDiscou6_3_0_, product1_.IsInStock as IsInStock3_0_, product1_.AddedAt as AddedAt3_0_, product1_.UpdatedAt as UpdatedAt3_0_, product1_.Brand_id as Brand10_3_0_ FROM CategoriesProducts products0_ left outer join [Product] product1_ on products0_.Product_id=product1_.Id WHERE products0_.Category_id=?
DEBUG 6 NHibernate.Loader.Collection.OneToManyLoader - Static select for one-to-many CumbriaMD.Domain.Category.Children: SELECT children0_.ParentCategory as ParentCa4_1_, children0_.Id as Id1_, children0_.Id as Id1_0_, children0_.IsActive as IsActive1_0_, children0_.OrderInList as OrderInL3_1_0_, children0_.ParentCategory as ParentCa4_1_0_ FROM [Category] children0_ WHERE children0_.ParentCategory=?
DEBUG 6 NHibernate.Loader.Collection.BasicCollectionLoader - Static select for collection CumbriaMD.Domain.Product.Categories: SELECT categories0_.Product_id as Product2_1_, categories0_.Category_id as Category1_1_, category1_.Id as Id1_0_, category1_.IsActive as IsActive1_0_, category1_.OrderInList as OrderInL3_1_0_, category1_.ParentCategory as ParentCa4_1_0_ FROM CategoriesProducts categories0_ left outer join [Category] category1_ on categories0_.Category_id=category1_.Id WHERE categories0_.Product_id=?
DEBUG 6 NHibernate.Impl.SessionFactoryObjectFactory - initializing class SessionFactoryObjectFactory
DEBUG 6 NHibernate.Impl.SessionFactoryObjectFactory - registered: ba33d1237490495e900b453b4ac28414(unnamed)
INFO 6 NHibernate.Impl.SessionFactoryObjectFactory - no name configured
DEBUG 6 NHibernate.Impl.SessionFactoryImpl - Instantiated session factory
DEBUG 6 NHibernate.Impl.SessionFactoryImpl - Checking 0 named HQL queries
DEBUG 6 NHibernate.Impl.SessionFactoryImpl - Checking 0 named SQL queries
DEBUG 6 NHibernate.Impl.SessionImpl - [session-id=60251a8f-d0bd-4674-a626-91f8393c1dd1] opened session at timestamp: 634801406270, for session factory: [/ba33d1237490495e900b453b4ac28414]
DEBUG 6 NHibernate.Impl.SessionImpl - [session-id=60251a8f-d0bd-4674-a626-91f8393c1dd1] running ISession.Dispose()
DEBUG 6 NHibernate.Impl.SessionImpl - [session-id=60251a8f-d0bd-4674-a626-91f8393c1dd1] executing real Dispose(True)
DEBUG 6 NHibernate.Impl.SessionImpl - closing session
DEBUG 6 NHibernate.AdoNet.AbstractBatcher - running BatcherImpl.Dispose(true)
DEBUG 12 NHibernate.Impl.SessionImpl - [session-id=f7a15350-e247-49d7-924a-2f9112f81801] opened session at timestamp: 634801406325, for session factory: [/ba33d1237490495e900b453b4ac28414]
DEBUG 12 NHibernate.Impl.SessionImpl - [session-id=f7a15350-e247-49d7-924a-2f9112f81801] running ISession.Dispose()
DEBUG 12 NHibernate.Impl.SessionImpl - [session-id=f7a15350-e247-49d7-924a-2f9112f81801] executing real Dispose(True)
DEBUG 12 NHibernate.Impl.SessionImpl - closing session
DEBUG 12 NHibernate.AdoNet.AbstractBatcher - running BatcherImpl.Dispose(true)
INFO 10 NHibernate.Impl.SessionFactoryImpl - Closing
DEBUG 10 NHibernate.Connection.ConnectionProvider - Disposing of ConnectionProvider.
INFO 6 NHibernate.Cfg.Environment - NHibernate 3.3.1.4000 (3.3.1.4000)
INFO 6 NHibernate.Cfg.Environment - hibernate-configuration section not found in application configuration file
INFO 6 NHibernate.Cfg.Environment - Bytecode provider name : lcg
INFO 6 NHibernate.Cfg.Environment - Using reflection optimizer
DEBUG 6 NHibernate.Cfg.Configuration - Mapping XML:
<hibernate-mapping xmlns="urn:nhibernate-mapping-2.2"><class xmlns="urn:nhibernate-mapping-2.2" name="CumbriaMD.Domain.Brand, CumbriaMD.Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" table="`Brand`"><id access="backfield" name="Id" type="System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"><column name="Id" /><generator class="identity" /></id><bag name="Products"><key><column name="Brand_id" /></key><one-to-many class="CumbriaMD.Domain.Product, CumbriaMD.Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" /></bag><property name="Name" type="System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"><column name="Name" length="50" not-null="true" /></property><property name="IsActive" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"><column name="IsActive" not-null="true" /></property><many-to-one class="CumbriaMD.Domain.Product, CumbriaMD.Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" name="DefaultProduct"><column name="DefaultProduct_id" /></many-to-one></class></hibernate-mapping>
INFO 6 NHibernate.Dialect.Dialect - Using dialect: NHibernate.Dialect.MsSql2008Dialect
INFO 6 NHibernate.Cfg.XmlHbmBinding.Binder - Mapping class: CumbriaMD.Domain.Brand -> Brand
DEBUG 6 NHibernate.Cfg.XmlHbmBinding.Binder - Mapped property: Id -> Id, type: Int32
DEBUG 6 NHibernate.Cfg.XmlHbmBinding.Binder - Mapped property: Products, type: System.Collections.Generic.ICollection`1[[CumbriaMD.Domain.Product, CumbriaMD.Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]](CumbriaMD.Domain.Brand.Products)
DEBUG 6 NHibernate.Cfg.XmlHbmBinding.Binder - Mapped property: Name -> Name, type: String
DEBUG 6 NHibernate.Cfg.XmlHbmBinding.Binder - Mapped property: IsActive -> IsActive, type: Boolean
DEBUG 6 NHibernate.Cfg.XmlHbmBinding.Binder - Mapped property: DefaultProduct -> DefaultProduct_id, type: CumbriaMD.Domain.Product
DEBUG 6 NHibernate.Cfg.Configuration - Mapping XML:
<hibernate-mapping xmlns="urn:nhibernate-mapping-2.2"><class xmlns="urn:nhibernate-mapping-2.2" name="CumbriaMD.Domain.Category, CumbriaMD.Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" table="`Category`"><id access="backfield" name="Id" type="System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"><column name="Id" /><generator class="identity" /></id><bag cascade="all" inverse="true" name="Products" table="CategoriesProducts"><key><column name="Category_id" /></key><many-to-many class="CumbriaMD.Domain.Product, CumbriaMD.Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null"><column name="Product_id" /></many-to-many></bag><bag name="Children"><key><column name="ParentCategory" /></key><one-to-many class="CumbriaMD.Domain.Category, CumbriaMD.Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" /></bag><property name="IsActive" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"><column name="IsActive" not-null="true" /></property><property name="OrderInList" type="System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"><column name="OrderInList" /></property><many-to-one class="CumbriaMD.Domain.Category, CumbriaMD.Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" name="Parent"><column name="ParentCategory" /></many-to-one></class></hibernate-mapping>
INFO 6 NHibernate.Dialect.Dialect - Using dialect: NHibernate.Dialect.MsSql2008Dialect
INFO 6 NHibernate.Cfg.XmlHbmBinding.Binder - Mapping class: CumbriaMD.Domain.Category -> Category
DEBUG 6 NHibernate.Cfg.XmlHbmBinding.Binder - Mapped property: Id -> Id, type: Int32
INFO 6 NHibernate.Cfg.XmlHbmBinding.Binder - Mapping collection: CumbriaMD.Domain.Category.Products -> CategoriesProducts
DEBUG 6 NHibernate.Cfg.XmlHbmBinding.Binder - Mapped property: Products, type: System.Collections.Generic.ICollection`1[[CumbriaMD.Domain.Product, CumbriaMD.Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]](CumbriaMD.Domain.Category.Products)
DEBUG 6 NHibernate.Cfg.XmlHbmBinding.Binder - Mapped property: Children, type: System.Collections.Generic.ICollection`1[[CumbriaMD.Domain.Category, CumbriaMD.Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]](CumbriaMD.Domain.Category.Children)
DEBUG 6 NHibernate.Cfg.XmlHbmBinding.Binder - Mapped property: IsActive -> IsActive, type: Boolean
DEBUG 6 NHibernate.Cfg.XmlHbmBinding.Binder - Mapped property: OrderInList -> OrderInList, type: Int32
DEBUG 6 NHibernate.Cfg.XmlHbmBinding.Binder - Mapped property: Parent -> ParentCategory, type: CumbriaMD.Domain.Category
DEBUG 6 NHibernate.Cfg.Configuration - Mapping XML:
<hibernate-mapping xmlns="urn:nhibernate-mapping-2.2"><class xmlns="urn:nhibernate-mapping-2.2" name="CumbriaMD.Domain.Product, CumbriaMD.Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" table="`Product`"><id access="backfield" name="Id" type="System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"><column name="Id" /><generator class="identity" /></id><bag cascade="all" name="Categories" table="CategoriesProducts"><key><column name="Product_id" /></key><many-to-many class="CumbriaMD.Domain.Category, CumbriaMD.Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null"><column name="Category_id" /></many-to-many></bag><property name="Name" type="System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"><column name="Name" length="100" not-null="true" /></property><property name="Code" type="System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"><column name="Code" not-null="true" /></property><property name="Description" type="System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"><column name="Description" length="1500" not-null="true" /></property><property name="Price" type="System.Decimal, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"><column name="Price" not-null="true" /></property><property name="IsDiscounted" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"><column name="IsDiscounted" not-null="true" /></property><property name="IsInStock" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"><column name="IsInStock" not-null="true" /></property><property name="AddedAt" type="System.Nullable`1[[System.DateTime, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]], mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"><column name="AddedAt" not-null="true" /></property><property name="UpdatedAt" type="System.Nullable`1[[System.DateTime, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]], mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"><column name="UpdatedAt" not-null="true" /></property><many-to-one class="CumbriaMD.Domain.Brand, CumbriaMD.Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" name="Brand"><column name="Brand_id" not-null="true" /></many-to-one></class></hibernate-mapping>
