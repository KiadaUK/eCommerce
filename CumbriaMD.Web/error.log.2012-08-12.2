DEBUG 114 NHibernate.Event.Default.DefaultLoadEventListener - entity found in session cache
DEBUG 114 NHibernate.Engine.TwoPhaseLoad - done materializing entity [CumbriaMD.Domain.Category#1]
DEBUG 114 NHibernate.Engine.TwoPhaseLoad - resolving associations for [CumbriaMD.Domain.Category#2]
DEBUG 114 NHibernate.Engine.Loading.LoadContexts - creating collection wrapper:[CumbriaMD.Domain.Category.Products#2]
DEBUG 114 NHibernate.Engine.Loading.LoadContexts - creating collection wrapper:[CumbriaMD.Domain.Category.Subcategories#2]
DEBUG 114 NHibernate.Event.Default.DefaultLoadEventListener - loading entity: [CumbriaMD.Domain.Category#1]
DEBUG 114 NHibernate.Event.Default.DefaultLoadEventListener - entity found in session cache
DEBUG 114 NHibernate.Engine.TwoPhaseLoad - done materializing entity [CumbriaMD.Domain.Category#2]
DEBUG 114 NHibernate.Engine.TwoPhaseLoad - resolving associations for [CumbriaMD.Domain.Category#4]
DEBUG 114 NHibernate.Engine.Loading.LoadContexts - creating collection wrapper:[CumbriaMD.Domain.Category.Products#4]
DEBUG 114 NHibernate.Engine.Loading.LoadContexts - creating collection wrapper:[CumbriaMD.Domain.Category.Subcategories#4]
DEBUG 114 NHibernate.Event.Default.DefaultLoadEventListener - loading entity: [CumbriaMD.Domain.Category#1]
DEBUG 114 NHibernate.Event.Default.DefaultLoadEventListener - entity found in session cache
DEBUG 114 NHibernate.Engine.TwoPhaseLoad - done materializing entity [CumbriaMD.Domain.Category#4]
DEBUG 114 NHibernate.Engine.TwoPhaseLoad - resolving associations for [CumbriaMD.Domain.Category#5]
DEBUG 114 NHibernate.Engine.Loading.LoadContexts - creating collection wrapper:[CumbriaMD.Domain.Category.Products#5]
DEBUG 114 NHibernate.Engine.Loading.LoadContexts - creating collection wrapper:[CumbriaMD.Domain.Category.Subcategories#5]
DEBUG 114 NHibernate.Event.Default.DefaultLoadEventListener - loading entity: [CumbriaMD.Domain.Category#4]
DEBUG 114 NHibernate.Event.Default.DefaultLoadEventListener - entity found in session cache
DEBUG 114 NHibernate.Engine.TwoPhaseLoad - done materializing entity [CumbriaMD.Domain.Category#5]
DEBUG 114 NHibernate.Engine.TwoPhaseLoad - resolving associations for [CumbriaMD.Domain.Category#6]
DEBUG 114 NHibernate.Engine.Loading.LoadContexts - creating collection wrapper:[CumbriaMD.Domain.Category.Products#6]
DEBUG 114 NHibernate.Engine.Loading.LoadContexts - creating collection wrapper:[CumbriaMD.Domain.Category.Subcategories#6]
DEBUG 114 NHibernate.Event.Default.DefaultLoadEventListener - loading entity: [CumbriaMD.Domain.Category#4]
DEBUG 114 NHibernate.Event.Default.DefaultLoadEventListener - entity found in session cache
DEBUG 114 NHibernate.Engine.TwoPhaseLoad - done materializing entity [CumbriaMD.Domain.Category#6]
DEBUG 114 NHibernate.Engine.StatefulPersistenceContext - initializing non-lazy collections
DEBUG 114 NHibernate.AdoNet.ConnectionManager - after autocommit
DEBUG 114 NHibernate.Impl.SessionImpl - transaction completion
DEBUG 114 NHibernate.AdoNet.ConnectionManager - aggressively releasing database connection
DEBUG 114 NHibernate.Loader.Criteria.CriteriaQueryTranslator - put criteria= alias=this0_
DEBUG 114 NHibernate.AdoNet.AbstractBatcher - Opened new IDbCommand, open IDbCommands: 1
DEBUG 114 NHibernate.AdoNet.AbstractBatcher - Building an IDbCommand object for the SqlString: SELECT this_.Id as Id1_0_, this_.Name as Name1_0_, this_.IsActive as IsActive1_0_, this_.OrderInList as OrderInL4_1_0_, this_.ParentCategory as ParentCa5_1_0_ FROM [Category] this_
INFO 114 NHibernate.Loader.Loader - SELECT this_.Id as Id1_0_, this_.Name as Name1_0_, this_.IsActive as IsActive1_0_, this_.OrderInList as OrderInL4_1_0_, this_.ParentCategory as ParentCa5_1_0_ FROM [Category] this_
DEBUG 114 NHibernate.SQL - SELECT this_.Id as Id1_0_, this_.Name as Name1_0_, this_.IsActive as IsActive1_0_, this_.OrderInList as OrderInL4_1_0_, this_.ParentCategory as ParentCa5_1_0_ FROM [Category] this_
DEBUG 114 NHibernate.Connection.DriverConnectionProvider - Obtaining IDbConnection from Driver
DEBUG 114 NHibernate.AdoNet.AbstractBatcher - ExecuteReader took 0 ms
DEBUG 114 NHibernate.AdoNet.AbstractBatcher - Opened IDataReader, open IDataReaders: 1
DEBUG 114 NHibernate.Loader.Loader - processing result set
DEBUG 114 NHibernate.Loader.Loader - result set row: 0
DEBUG 114 NHibernate.Type.Int32Type - returning '1' as column: Id1_0_
DEBUG 114 NHibernate.Loader.Loader - result row: EntityKey[CumbriaMD.Domain.Category#1]
DEBUG 114 NHibernate.Loader.Loader - result set row: 1
DEBUG 114 NHibernate.Type.Int32Type - returning '2' as column: Id1_0_
DEBUG 114 NHibernate.Loader.Loader - result row: EntityKey[CumbriaMD.Domain.Category#2]
DEBUG 114 NHibernate.Loader.Loader - result set row: 2
DEBUG 114 NHibernate.Type.Int32Type - returning '4' as column: Id1_0_
DEBUG 114 NHibernate.Loader.Loader - result row: EntityKey[CumbriaMD.Domain.Category#4]
DEBUG 114 NHibernate.Loader.Loader - result set row: 3
DEBUG 114 NHibernate.Type.Int32Type - returning '5' as column: Id1_0_
DEBUG 114 NHibernate.Loader.Loader - result row: EntityKey[CumbriaMD.Domain.Category#5]
DEBUG 114 NHibernate.Loader.Loader - result set row: 4
DEBUG 114 NHibernate.Type.Int32Type - returning '6' as column: Id1_0_
DEBUG 114 NHibernate.Loader.Loader - result row: EntityKey[CumbriaMD.Domain.Category#6]
DEBUG 114 NHibernate.Loader.Loader - done processing result set (5 rows)
DEBUG 114 NHibernate.Driver.NHybridDataReader - running NHybridDataReader.Dispose()
DEBUG 114 NHibernate.AdoNet.AbstractBatcher - Closed IDataReader, open IDataReaders :0
DEBUG 114 NHibernate.AdoNet.AbstractBatcher - DataReader was closed after 0 ms
DEBUG 114 NHibernate.AdoNet.AbstractBatcher - Closed IDbCommand, open IDbCommands: 0
DEBUG 114 NHibernate.AdoNet.ConnectionManager - aggressively releasing database connection
DEBUG 114 NHibernate.Connection.ConnectionProvider - Closing connection
DEBUG 114 NHibernate.Loader.Loader - total objects hydrated: 0
DEBUG 114 NHibernate.Engine.StatefulPersistenceContext - initializing non-lazy collections
DEBUG 114 NHibernate.AdoNet.ConnectionManager - after autocommit
DEBUG 114 NHibernate.Impl.SessionImpl - transaction completion
DEBUG 114 NHibernate.AdoNet.ConnectionManager - aggressively releasing database connection
DEBUG 114 NHibernate.Impl.SessionImpl - [session-id=61944a41-9d2d-4873-9237-9483f32aba68] running ISession.Dispose()
DEBUG 114 NHibernate.Impl.SessionImpl - [session-id=61944a41-9d2d-4873-9237-9483f32aba68] executing real Dispose(True)
DEBUG 114 NHibernate.Impl.SessionImpl - closing session
DEBUG 114 NHibernate.AdoNet.AbstractBatcher - running BatcherImpl.Dispose(true)
INFO 96 NHibernate.Impl.SessionFactoryImpl - Closing
DEBUG 96 NHibernate.Connection.ConnectionProvider - Disposing of ConnectionProvider.
INFO 79 NHibernate.Cfg.Environment - NHibernate 3.3.1.4000 (3.3.1.4000)
INFO 79 NHibernate.Cfg.Environment - hibernate-configuration section not found in application configuration file
INFO 79 NHibernate.Cfg.Environment - Bytecode provider name : lcg
INFO 79 NHibernate.Cfg.Environment - Using reflection optimizer
DEBUG 79 NHibernate.Cfg.Configuration - Mapping XML:
<hibernate-mapping xmlns="urn:nhibernate-mapping-2.2"><class xmlns="urn:nhibernate-mapping-2.2" name="CumbriaMD.Domain.Brand, CumbriaMD.Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" table="`Brand`"><id name="Id" type="System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"><column name="Id" /><generator class="identity" /></id><bag name="Products"><key><column name="Brand_id" /></key><one-to-many class="CumbriaMD.Domain.Product, CumbriaMD.Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" /></bag><property name="Name" type="System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"><column name="Name" length="50" not-null="true" /></property><property name="IsActive" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"><column name="IsActive" not-null="true" /></property><many-to-one class="CumbriaMD.Domain.Product, CumbriaMD.Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" name="DefaultProduct"><column name="DefaultProduct_id" /></many-to-one></class></hibernate-mapping>
INFO 79 NHibernate.Dialect.Dialect - Using dialect: NHibernate.Dialect.MsSql2008Dialect
INFO 79 NHibernate.Cfg.XmlHbmBinding.Binder - Mapping class: CumbriaMD.Domain.Brand -> Brand
DEBUG 79 NHibernate.Cfg.XmlHbmBinding.Binder - Mapped property: Id -> Id, type: Int32
DEBUG 79 NHibernate.Cfg.XmlHbmBinding.Binder - Mapped property: Products, type: System.Collections.Generic.ICollection`1[[CumbriaMD.Domain.Product, CumbriaMD.Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]](CumbriaMD.Domain.Brand.Products)
DEBUG 79 NHibernate.Cfg.XmlHbmBinding.Binder - Mapped property: Name -> Name, type: String
DEBUG 79 NHibernate.Cfg.XmlHbmBinding.Binder - Mapped property: IsActive -> IsActive, type: Boolean
DEBUG 79 NHibernate.Cfg.XmlHbmBinding.Binder - Mapped property: DefaultProduct -> DefaultProduct_id, type: CumbriaMD.Domain.Product
DEBUG 79 NHibernate.Cfg.Configuration - Mapping XML:
<hibernate-mapping xmlns="urn:nhibernate-mapping-2.2"><class xmlns="urn:nhibernate-mapping-2.2" name="CumbriaMD.Domain.Category, CumbriaMD.Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" table="`Category`"><id name="Id" type="System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"><column name="Id" /><generator class="identity" /></id><bag cascade="all" inverse="true" name="Products" table="CategoriesProducts"><key><column name="Category_id" /></key><many-to-many class="CumbriaMD.Domain.Product, CumbriaMD.Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null"><column name="Product_id" /></many-to-many></bag><bag cascade="all-delete-orphan" name="Subcategories"><key><column name="ParentCategory" /></key><one-to-many class="CumbriaMD.Domain.Category, CumbriaMD.Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" /></bag><property name="Name" type="System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"><column name="Name" length="50" not-null="true" /></property><property name="IsActive" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"><column name="IsActive" not-null="true" /></property><property name="OrderInList" type="System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"><column name="OrderInList" /></property><many-to-one class="CumbriaMD.Domain.Category, CumbriaMD.Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" name="Parent"><column name="ParentCategory" /></many-to-one></class></hibernate-mapping>
INFO 79 NHibernate.Dialect.Dialect - Using dialect: NHibernate.Dialect.MsSql2008Dialect
INFO 79 NHibernate.Cfg.XmlHbmBinding.Binder - Mapping class: CumbriaMD.Domain.Category -> Category
DEBUG 79 NHibernate.Cfg.XmlHbmBinding.Binder - Mapped property: Id -> Id, type: Int32
INFO 79 NHibernate.Cfg.XmlHbmBinding.Binder - Mapping collection: CumbriaMD.Domain.Category.Products -> CategoriesProducts
DEBUG 79 NHibernate.Cfg.XmlHbmBinding.Binder - Mapped property: Products, type: System.Collections.Generic.ICollection`1[[CumbriaMD.Domain.Product, CumbriaMD.Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]](CumbriaMD.Domain.Category.Products)
DEBUG 79 NHibernate.Cfg.XmlHbmBinding.Binder - Mapped property: Subcategories, type: System.Collections.Generic.ICollection`1[[CumbriaMD.Domain.Category, CumbriaMD.Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]](CumbriaMD.Domain.Category.Subcategories)
DEBUG 79 NHibernate.Cfg.XmlHbmBinding.Binder - Mapped property: Name -> Name, type: String
DEBUG 79 NHibernate.Cfg.XmlHbmBinding.Binder - Mapped property: IsActive -> IsActive, type: Boolean
DEBUG 79 NHibernate.Cfg.XmlHbmBinding.Binder - Mapped property: OrderInList -> OrderInList, type: Int32
DEBUG 79 NHibernate.Cfg.XmlHbmBinding.Binder - Mapped property: Parent -> ParentCategory, type: CumbriaMD.Domain.Category
DEBUG 79 NHibernate.Cfg.Configuration - Mapping XML:
<hibernate-mapping xmlns="urn:nhibernate-mapping-2.2"><class xmlns="urn:nhibernate-mapping-2.2" name="CumbriaMD.Domain.Product, CumbriaMD.Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" table="`Product`"><id name="Id" type="System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"><column name="Id" /><generator class="identity" /></id><bag cascade="all" name="Categories" table="CategoriesProducts"><key><column name="Product_id" /></key><many-to-many class="CumbriaMD.Domain.Category, CumbriaMD.Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null"><column name="Category_id" /></many-to-many></bag><property name="Name" type="System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"><column name="Name" length="100" not-null="true" /></property><property name="Code" type="System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"><column name="Code" not-null="true" /></property><property name="Description" type="System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"><column name="Description" length="1500" not-null="true" /></property><property name="Price" type="System.Decimal, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"><column name="Price" not-null="true" /></property><property name="IsDiscounted" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"><column name="IsDiscounted" not-null="true" /></property><property name="IsInStock" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"><column name="IsInStock" not-null="true" /></property><property name="AddedAt" type="System.Nullable`1[[System.DateTime, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]], mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"><column name="AddedAt" not-null="true" /></property><property name="UpdatedAt" type="System.Nullable`1[[System.DateTime, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]], mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"><column name="UpdatedAt" not-null="true" /></property><many-to-one class="CumbriaMD.Domain.Brand, CumbriaMD.Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" name="Brand"><column name="Brand_id" /></many-to-one></class></hibernate-mapping>
INFO 79 NHibernate.Dialect.Dialect - Using dialect: NHibernate.Dialect.MsSql2008Dialect
INFO 79 NHibernate.Cfg.XmlHbmBinding.Binder - Mapping class: CumbriaMD.Domain.Product -> Product
DEBUG 79 NHibernate.Cfg.XmlHbmBinding.Binder - Mapped property: Id -> Id, type: Int32
INFO 79 NHibernate.Cfg.XmlHbmBinding.Binder - Mapping collection: CumbriaMD.Domain.Product.Categories -> CategoriesProducts
DEBUG 79 NHibernate.Cfg.XmlHbmBinding.Binder - Mapped property: Categories, type: System.Collections.Generic.ICollection`1[[CumbriaMD.Domain.Category, CumbriaMD.Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]](CumbriaMD.Domain.Product.Categories)
DEBUG 79 NHibernate.Cfg.XmlHbmBinding.Binder - Mapped property: Name -> Name, type: String
DEBUG 79 NHibernate.Cfg.XmlHbmBinding.Binder - Mapped property: Code -> Code, type: String
DEBUG 79 NHibernate.Cfg.XmlHbmBinding.Binder - Mapped property: Description -> Description, type: String
DEBUG 79 NHibernate.Cfg.XmlHbmBinding.Binder - Mapped property: Price -> Price, type: Decimal
DEBUG 79 NHibernate.Cfg.XmlHbmBinding.Binder - Mapped property: IsDiscounted -> IsDiscounted, type: Boolean
DEBUG 79 NHibernate.Cfg.XmlHbmBinding.Binder - Mapped property: IsInStock -> IsInStock, type: Boolean
DEBUG 79 NHibernate.Cfg.XmlHbmBinding.Binder - Mapped property: AddedAt -> AddedAt, type: DateTime
DEBUG 79 NHibernate.Cfg.XmlHbmBinding.Binder - Mapped property: UpdatedAt -> UpdatedAt, type: DateTime
DEBUG 79 NHibernate.Cfg.XmlHbmBinding.Binder - Mapped property: Brand -> Brand_id, type: CumbriaMD.Domain.Brand
INFO 79 NHibernate.Dialect.Dialect - Using dialect: NHibernate.Dialect.MsSql2008Dialect
INFO 79 NHibernate.Dialect.Dialect - Using dialect: NHibernate.Dialect.MsSql2008Dialect
INFO 79 NHibernate.Connection.ConnectionProviderFactory - Initializing connection provider: NHibernate.Connection.DriverConnectionProvider
INFO 79 NHibernate.Connection.ConnectionProvider - Configuring ConnectionProvider
DEBUG 79 NHibernate.Connection.DriverConnectionProvider - Obtaining IDbConnection from Driver
DEBUG 79 NHibernate.Connection.ConnectionProvider - Closing connection
INFO 79 NHibernate.Dialect.Dialect - Using dialect: NHibernate.Dialect.MsSql2008Dialect
INFO 79 NHibernate.Cfg.Configuration - checking mappings queue
INFO 79 NHibernate.Cfg.Configuration - processing one-to-many association mappings
DEBUG 79 NHibernate.Cfg.XmlHbmBinding.Binder - Second pass for collection: CumbriaMD.Domain.Brand.Products
INFO 79 NHibernate.Cfg.XmlHbmBinding.Binder - mapping collection: CumbriaMD.Domain.Brand.Products -> Product
DEBUG 79 NHibernate.Cfg.XmlHbmBinding.Binder - Mapped collection key: Brand_id, one-to-many: CumbriaMD.Domain.Product
DEBUG 79 NHibernate.Cfg.XmlHbmBinding.Binder - Second pass for collection: CumbriaMD.Domain.Category.Products
DEBUG 79 NHibernate.Cfg.XmlHbmBinding.Binder - Mapped collection key: Category_id, element: Product_id, type: CumbriaMD.Domain.Product
DEBUG 79 NHibernate.Cfg.XmlHbmBinding.Binder - Second pass for collection: CumbriaMD.Domain.Category.Subcategories
INFO 79 NHibernate.Cfg.XmlHbmBinding.Binder - mapping collection: CumbriaMD.Domain.Category.Subcategories -> Category
DEBUG 79 NHibernate.Cfg.XmlHbmBinding.Binder - Mapped collection key: ParentCategory, one-to-many: CumbriaMD.Domain.Category
DEBUG 79 NHibernate.Cfg.XmlHbmBinding.Binder - Second pass for collection: CumbriaMD.Domain.Product.Categories
DEBUG 79 NHibernate.Cfg.XmlHbmBinding.Binder - Mapped collection key: Product_id, element: Category_id, type: CumbriaMD.Domain.Category
INFO 79 NHibernate.Cfg.Configuration - processing one-to-one association property references
INFO 79 NHibernate.Cfg.Configuration - processing foreign key constraints
DEBUG 79 NHibernate.Cfg.Configuration - resolving reference to class: CumbriaMD.Domain.Product
DEBUG 79 NHibernate.Cfg.Configuration - resolving reference to class: CumbriaMD.Domain.Category
DEBUG 79 NHibernate.Cfg.Configuration - resolving reference to class: CumbriaMD.Domain.Product
DEBUG 79 NHibernate.Cfg.Configuration - resolving reference to class: CumbriaMD.Domain.Category
DEBUG 79 NHibernate.Cfg.Configuration - resolving reference to class: CumbriaMD.Domain.Brand
INFO 79 NHibernate.Cfg.Configuration - processing filters (second pass)
INFO 79 NHibernate.Cfg.Configuration - checking mappings queue
INFO 79 NHibernate.Cfg.Configuration - processing one-to-many association mappings
INFO 79 NHibernate.Cfg.Configuration - processing one-to-one association property references
INFO 79 NHibernate.Cfg.Configuration - processing foreign key constraints
DEBUG 79 NHibernate.Cfg.Configuration - resolving reference to class: CumbriaMD.Domain.Product
DEBUG 79 NHibernate.Cfg.Configuration - resolving reference to class: CumbriaMD.Domain.Category
DEBUG 79 NHibernate.Cfg.Configuration - resolving reference to class: CumbriaMD.Domain.Product
DEBUG 79 NHibernate.Cfg.Configuration - resolving reference to class: CumbriaMD.Domain.Category
DEBUG 79 NHibernate.Cfg.Configuration - resolving reference to class: CumbriaMD.Domain.Brand
INFO 79 NHibernate.Cfg.Configuration - processing filters (second pass)
DEBUG 79 NHibernate.Tool.hbm2ddl.SchemaExport - 
    if exists (select 1 from sys.objects where object_id = OBJECT_ID(N'[FK18E3AB3D8E538E2D]') AND parent_object_id = OBJECT_ID('[Brand]'))
alter table [Brand]  drop constraint FK18E3AB3D8E538E2D

DEBUG 79 NHibernate.Tool.hbm2ddl.SchemaExport - 
    if exists (select 1 from sys.objects where object_id = OBJECT_ID(N'[FK6482F24CBCE17DD]') AND parent_object_id = OBJECT_ID('[Category]'))
alter table [Category]  drop constraint FK6482F24CBCE17DD

DEBUG 79 NHibernate.Tool.hbm2ddl.SchemaExport - 
    if exists (select 1 from sys.objects where object_id = OBJECT_ID(N'[FKAD3E9DD3350EC5DF]') AND parent_object_id = OBJECT_ID('CategoriesProducts'))
alter table CategoriesProducts  drop constraint FKAD3E9DD3350EC5DF

DEBUG 79 NHibernate.Tool.hbm2ddl.SchemaExport - 
    if exists (select 1 from sys.objects where object_id = OBJECT_ID(N'[FKAD3E9DD3ED552755]') AND parent_object_id = OBJECT_ID('CategoriesProducts'))
alter table CategoriesProducts  drop constraint FKAD3E9DD3ED552755

DEBUG 79 NHibernate.Tool.hbm2ddl.SchemaExport - 
    if exists (select 1 from sys.objects where object_id = OBJECT_ID(N'[FK1F94D86AF20A7EB]') AND parent_object_id = OBJECT_ID('[Product]'))
alter table [Product]  drop constraint FK1F94D86AF20A7EB

DEBUG 79 NHibernate.Tool.hbm2ddl.SchemaExport - 
    if exists (select * from dbo.sysobjects where id = object_id(N'[Brand]') and OBJECTPROPERTY(id, N'IsUserTable') = 1) drop table [Brand]
DEBUG 79 NHibernate.Tool.hbm2ddl.SchemaExport - 
    if exists (select * from dbo.sysobjects where id = object_id(N'[Category]') and OBJECTPROPERTY(id, N'IsUserTable') = 1) drop table [Category]
DEBUG 79 NHibernate.Tool.hbm2ddl.SchemaExport - 
    if exists (select * from dbo.sysobjects where id = object_id(N'CategoriesProducts') and OBJECTPROPERTY(id, N'IsUserTable') = 1) drop table CategoriesProducts
DEBUG 79 NHibernate.Tool.hbm2ddl.SchemaExport - 
    if exists (select * from dbo.sysobjects where id = object_id(N'[Product]') and OBJECTPROPERTY(id, N'IsUserTable') = 1) drop table [Product]
DEBUG 79 NHibernate.Tool.hbm2ddl.SchemaExport - 
    create table [Brand] (
        Id INT IDENTITY NOT NULL,
       Name NVARCHAR(50) not null,
       IsActive BIT not null,
       DefaultProduct_id INT null,
       primary key (Id)
    )
DEBUG 79 NHibernate.Tool.hbm2ddl.SchemaExport - 
    create table [Category] (
        Id INT IDENTITY NOT NULL,
       Name NVARCHAR(50) not null,
       IsActive BIT not null,
       OrderInList INT null,
       ParentCategory INT null,
       primary key (Id)
    )
DEBUG 79 NHibernate.Tool.hbm2ddl.SchemaExport - 
    create table CategoriesProducts (
        Category_id INT not null,
       Product_id INT not null
    )
DEBUG 79 NHibernate.Tool.hbm2ddl.SchemaExport - 
    create table [Product] (
        Id INT IDENTITY NOT NULL,
       Name NVARCHAR(100) not null,
       Code NVARCHAR(255) not null,
       Description NVARCHAR(1500) not null,
       Price DECIMAL(19,5) not null,
       IsDiscounted BIT not null,
       IsInStock BIT not null,
       AddedAt DATETIME not null,
       UpdatedAt DATETIME not null,
       Brand_id INT null,
       primary key (Id)
    )
DEBUG 79 NHibernate.Tool.hbm2ddl.SchemaExport - 
    alter table [Brand] 
        add constraint FK18E3AB3D8E538E2D 
        foreign key (DefaultProduct_id) 
        references [Product]
DEBUG 79 NHibernate.Tool.hbm2ddl.SchemaExport - 
    alter table [Category] 
        add constraint FK6482F24CBCE17DD 
        foreign key (ParentCategory) 
        references [Category]
DEBUG 79 NHibernate.Tool.hbm2ddl.SchemaExport - 
    alter table CategoriesProducts 
        add constraint FKAD3E9DD3350EC5DF 
        foreign key (Product_id) 
        references [Product]
DEBUG 79 NHibernate.Tool.hbm2ddl.SchemaExport - 
    alter table CategoriesProducts 
        add constraint FKAD3E9DD3ED552755 
        foreign key (Category_id) 
        references [Category]
DEBUG 79 NHibernate.Tool.hbm2ddl.SchemaExport - 
    alter table [Product] 
        add constraint FK1F94D86AF20A7EB 
        foreign key (Brand_id) 
        references [Brand]
INFO 79 NHibernate.Cfg.Configuration - checking mappings queue
INFO 79 NHibernate.Cfg.Configuration - processing one-to-many association mappings
INFO 79 NHibernate.Cfg.Configuration - processing one-to-one association property references
INFO 79 NHibernate.Cfg.Configuration - processing foreign key constraints
DEBUG 79 NHibernate.Cfg.Configuration - resolving reference to class: CumbriaMD.Domain.Product
DEBUG 79 NHibernate.Cfg.Configuration - resolving reference to class: CumbriaMD.Domain.Category
DEBUG 79 NHibernate.Cfg.Configuration - resolving reference to class: CumbriaMD.Domain.Product
DEBUG 79 NHibernate.Cfg.Configuration - resolving reference to class: CumbriaMD.Domain.Category
DEBUG 79 NHibernate.Cfg.Configuration - resolving reference to class: CumbriaMD.Domain.Brand
INFO 79 NHibernate.Cfg.Configuration - processing filters (second pass)
INFO 79 NHibernate.Dialect.Dialect - Using dialect: NHibernate.Dialect.MsSql2008Dialect
INFO 79 NHibernate.Dialect.Dialect - Using dialect: NHibernate.Dialect.MsSql2008Dialect
INFO 79 NHibernate.Exceptions.SQLExceptionConverterFactory - Using dialect defined converter
INFO 79 NHibernate.Cfg.SettingsFactory - Generate SQL with comments: disabled
INFO 79 NHibernate.Connection.ConnectionProviderFactory - Initializing connection provider: NHibernate.Connection.DriverConnectionProvider
INFO 79 NHibernate.Connection.ConnectionProvider - Configuring ConnectionProvider
INFO 79 NHibernate.Cfg.SettingsFactory - Transaction factory: NHibernate.Transaction.AdoNetWithDistributedTransactionFactory
INFO 79 NHibernate.Cfg.SettingsFactory - Optimize cache for minimal puts: False
INFO 79 NHibernate.Cfg.SettingsFactory - Connection release mode: auto
INFO 79 NHibernate.Cfg.SettingsFactory - Default batch fetch size: 1
INFO 79 NHibernate.Cfg.SettingsFactory - echoing all SQL to stdout
INFO 79 NHibernate.Cfg.SettingsFactory - Statistics: disabled
INFO 79 NHibernate.Cfg.SettingsFactory - Deleted entity synthetic identifier rollback: disabled
INFO 79 NHibernate.Cfg.SettingsFactory - Query translator: NHibernate.Hql.Ast.ANTLR.ASTQueryTranslatorFactory
INFO 79 NHibernate.Cfg.SettingsFactory - Query language substitutions: {'true'='1', 'false'='0', 'yes'=''Y'', 'no'=''N''}
INFO 79 NHibernate.Cfg.SettingsFactory - cache provider: NHibernate.Cache.NoCacheProvider, NHibernate, Version=3.3.1.4000, Culture=neutral, PublicKeyToken=aa95f207798dfdb4
INFO 79 NHibernate.Cfg.SettingsFactory - Order SQL inserts for batching: enabled
DEBUG 79 NHibernate.Cfg.SettingsFactory - Wrap result sets: disabled
INFO 79 NHibernate.Cfg.SettingsFactory - Batcher factory: NHibernate.AdoNet.SqlClientBatchingBatcherFactory, NHibernate, Version=3.3.1.4000, Culture=neutral, PublicKeyToken=aa95f207798dfdb4
INFO 79 NHibernate.Cfg.SettingsFactory - Default entity-mode: Poco
INFO 79 NHibernate.Cfg.SettingsFactory - Named query checking : enabled
INFO 79 NHibernate.Impl.SessionFactoryImpl - building session factory
DEBUG 79 NHibernate.Impl.SessionFactoryImpl - Session factory constructed with filter configurations : {}
DEBUG 79 NHibernate.Impl.SessionFactoryImpl - instantiating session factory with properties: {'use_reflection_optimizer'='True', 'connection.provider'='NHibernate.Connection.DriverConnectionProvider', 'connection.driver_class'='NHibernate.Driver.SqlClientDriver, NHibernate, Version=3.3.1.4000, Culture=neutral, PublicKeyToken=aa95f207798dfdb4', 'dialect'='NHibernate.Dialect.MsSql2008Dialect, NHibernate, Version=3.3.1.4000, Culture=neutral, PublicKeyToken=aa95f207798dfdb4', 'hibernate.dialect'='NHibernate.Dialect.MsSql2008Dialect, NHibernate, Version=3.3.1.4000, Culture=neutral, PublicKeyToken=aa95f207798dfdb4', 'use_outer_join'='true', 'show_sql'='true', 'connection.connection_string'='Data Source=localhost\SQLEXPRESS;Initial Catalog=eDetectorDb;Integrated Security=true'}
DEBUG 79 NHibernate.Connection.DriverConnectionProvider - Obtaining IDbConnection from Driver
DEBUG 79 NHibernate.Connection.ConnectionProvider - Closing connection
DEBUG 79 NHibernate.Tuple.Entity.AbstractEntityTuplizer - No custom accessors found for entity: CumbriaMD.Domain.Brand
DEBUG 79 NHibernate.Tuple.Entity.AbstractEntityTuplizer - No custom accessors found for entity: CumbriaMD.Domain.Brand
DEBUG 79 NHibernate.Tuple.Entity.PocoEntityTuplizer - Create Instantiator using optimizer for:CumbriaMD.Domain.Brand
DEBUG 79 NHibernate.Tuple.Entity.AbstractEntityTuplizer - No custom accessors found for entity: CumbriaMD.Domain.Category
DEBUG 79 NHibernate.Tuple.Entity.AbstractEntityTuplizer - No custom accessors found for entity: CumbriaMD.Domain.Category
DEBUG 79 NHibernate.Tuple.Entity.PocoEntityTuplizer - Create Instantiator using optimizer for:CumbriaMD.Domain.Category
DEBUG 79 NHibernate.Tuple.Entity.AbstractEntityTuplizer - No custom accessors found for entity: CumbriaMD.Domain.Product
DEBUG 79 NHibernate.Tuple.Entity.AbstractEntityTuplizer - No custom accessors found for entity: CumbriaMD.Domain.Product
DEBUG 79 NHibernate.Tuple.Entity.PocoEntityTuplizer - Create Instantiator using optimizer for:CumbriaMD.Domain.Product
DEBUG 79 NHibernate.Persister.Collection.ICollectionPersister - Static SQL for collection: CumbriaMD.Domain.Brand.Products
DEBUG 79 NHibernate.Persister.Collection.ICollectionPersister -  Row insert: UPDATE [Product] SET Brand_id = ? WHERE Id = ?
DEBUG 79 NHibernate.Persister.Collection.ICollectionPersister -  Row delete: UPDATE [Product] SET Brand_id = null WHERE Brand_id = ? AND Id = ?
DEBUG 79 NHibernate.Persister.Collection.ICollectionPersister -  One-shot delete: UPDATE [Product] SET Brand_id = null WHERE Brand_id = ?
DEBUG 79 NHibernate.Persister.Collection.ICollectionPersister - Static SQL for collection: CumbriaMD.Domain.Category.Products
DEBUG 79 NHibernate.Persister.Collection.ICollectionPersister -  Row insert: INSERT INTO CategoriesProducts (Category_id, Product_id) VALUES (?, ?)
DEBUG 79 NHibernate.Persister.Collection.ICollectionPersister -  Row update: UPDATE CategoriesProducts SET Product_id = ? WHERE Category_id = ? AND Product_id = ?
DEBUG 79 NHibernate.Persister.Collection.ICollectionPersister -  Row delete: DELETE FROM CategoriesProducts WHERE Category_id = ? AND Product_id = ?
DEBUG 79 NHibernate.Persister.Collection.ICollectionPersister -  One-shot delete: DELETE FROM CategoriesProducts WHERE Category_id = ?
DEBUG 79 NHibernate.Persister.Collection.ICollectionPersister - Static SQL for collection: CumbriaMD.Domain.Category.Subcategories
DEBUG 79 NHibernate.Persister.Collection.ICollectionPersister -  Row insert: UPDATE [Category] SET ParentCategory = ? WHERE Id = ?
DEBUG 79 NHibernate.Persister.Collection.ICollectionPersister -  Row delete: UPDATE [Category] SET ParentCategory = null WHERE ParentCategory = ? AND Id = ?
DEBUG 79 NHibernate.Persister.Collection.ICollectionPersister -  One-shot delete: UPDATE [Category] SET ParentCategory = null WHERE ParentCategory = ?
DEBUG 79 NHibernate.Persister.Collection.ICollectionPersister - Static SQL for collection: CumbriaMD.Domain.Product.Categories
DEBUG 79 NHibernate.Persister.Collection.ICollectionPersister -  Row insert: INSERT INTO CategoriesProducts (Product_id, Category_id) VALUES (?, ?)
DEBUG 79 NHibernate.Persister.Collection.ICollectionPersister -  Row update: UPDATE CategoriesProducts SET Category_id = ? WHERE Product_id = ? AND Category_id = ?
DEBUG 79 NHibernate.Persister.Collection.ICollectionPersister -  Row delete: DELETE FROM CategoriesProducts WHERE Product_id = ? AND Category_id = ?
DEBUG 79 NHibernate.Persister.Collection.ICollectionPersister -  One-shot delete: DELETE FROM CategoriesProducts WHERE Product_id = ?
DEBUG 79 NHibernate.Persister.Entity.AbstractEntityPersister - Static SQL for entity: CumbriaMD.Domain.Brand
DEBUG 79 NHibernate.Persister.Entity.AbstractEntityPersister -  Version select: SELECT Id FROM [Brand] WHERE Id = ?
DEBUG 79 NHibernate.Persister.Entity.AbstractEntityPersister -  Snapshot select: SELECT brand_.Id, brand_.Name as Name0_, brand_.IsActive as IsActive0_, brand_.DefaultProduct_id as DefaultP4_0_ FROM [Brand] brand_ WHERE brand_.Id=?
DEBUG 79 NHibernate.Persister.Entity.AbstractEntityPersister -  Insert 0: INSERT INTO [Brand] (Name, IsActive, DefaultProduct_id, Id) VALUES (?, ?, ?, ?)
DEBUG 79 NHibernate.Persister.Entity.AbstractEntityPersister -  Update 0: UPDATE [Brand] SET Name = ?, IsActive = ?, DefaultProduct_id = ? WHERE Id = ?
DEBUG 79 NHibernate.Persister.Entity.AbstractEntityPersister -  Delete 0: DELETE FROM [Brand] WHERE Id = ?
DEBUG 79 NHibernate.Persister.Entity.AbstractEntityPersister -  Identity insert: INSERT INTO [Brand] (Name, IsActive, DefaultProduct_id) VALUES (?, ?, ?); select SCOPE_IDENTITY()
DEBUG 79 NHibernate.Loader.Entity.AbstractEntityLoader - Static select for entity CumbriaMD.Domain.Brand: SELECT brand0_.Id as Id0_0_, brand0_.Name as Name0_0_, brand0_.IsActive as IsActive0_0_, brand0_.DefaultProduct_id as DefaultP4_0_0_ FROM [Brand] brand0_ WHERE brand0_.Id=?
DEBUG 79 NHibernate.Loader.Entity.AbstractEntityLoader - Static select for entity CumbriaMD.Domain.Brand: SELECT brand0_.Id as Id0_0_, brand0_.Name as Name0_0_, brand0_.IsActive as IsActive0_0_, brand0_.DefaultProduct_id as DefaultP4_0_0_ FROM [Brand] brand0_ WHERE brand0_.Id=?
DEBUG 79 NHibernate.Loader.Entity.AbstractEntityLoader - Static select for entity CumbriaMD.Domain.Brand: SELECT brand0_.Id as Id0_0_, brand0_.Name as Name0_0_, brand0_.IsActive as IsActive0_0_, brand0_.DefaultProduct_id as DefaultP4_0_0_ FROM [Brand] brand0_ with (updlock, rowlock) WHERE brand0_.Id=?
DEBUG 79 NHibernate.Loader.Entity.AbstractEntityLoader - Static select for entity CumbriaMD.Domain.Brand: SELECT brand0_.Id as Id0_0_, brand0_.Name as Name0_0_, brand0_.IsActive as IsActive0_0_, brand0_.DefaultProduct_id as DefaultP4_0_0_ FROM [Brand] brand0_ with (updlock, rowlock, nowait) WHERE brand0_.Id=?
DEBUG 79 NHibernate.Loader.Entity.AbstractEntityLoader - Static select for entity CumbriaMD.Domain.Brand: SELECT brand0_.Id as Id0_0_, brand0_.Name as Name0_0_, brand0_.IsActive as IsActive0_0_, brand0_.DefaultProduct_id as DefaultP4_0_0_ FROM [Brand] brand0_ with (updlock, rowlock) WHERE brand0_.Id=?
DEBUG 79 NHibernate.Loader.Entity.AbstractEntityLoader - Static select for action NHibernate.Engine.CascadingAction+MergeCascadingAction on entity CumbriaMD.Domain.Brand: SELECT brand0_.Id as Id0_0_, brand0_.Name as Name0_0_, brand0_.IsActive as IsActive0_0_, brand0_.DefaultProduct_id as DefaultP4_0_0_ FROM [Brand] brand0_ WHERE brand0_.Id=?
DEBUG 79 NHibernate.Loader.Entity.AbstractEntityLoader - Static select for action NHibernate.Engine.CascadingAction+RefreshCascadingAction on entity CumbriaMD.Domain.Brand: SELECT brand0_.Id as Id0_0_, brand0_.Name as Name0_0_, brand0_.IsActive as IsActive0_0_, brand0_.DefaultProduct_id as DefaultP4_0_0_ FROM [Brand] brand0_ WHERE brand0_.Id=?
DEBUG 79 NHibernate.Persister.Entity.AbstractEntityPersister - Static SQL for entity: CumbriaMD.Domain.Category
DEBUG 79 NHibernate.Persister.Entity.AbstractEntityPersister -  Version select: SELECT Id FROM [Category] WHERE Id = ?
DEBUG 79 NHibernate.Persister.Entity.AbstractEntityPersister -  Snapshot select: SELECT category_.Id, category_.Name as Name1_, category_.IsActive as IsActive1_, category_.OrderInList as OrderInL4_1_, category_.ParentCategory as ParentCa5_1_ FROM [Category] category_ WHERE category_.Id=?
DEBUG 79 NHibernate.Persister.Entity.AbstractEntityPersister -  Insert 0: INSERT INTO [Category] (Name, IsActive, OrderInList, ParentCategory, Id) VALUES (?, ?, ?, ?, ?)
DEBUG 79 NHibernate.Persister.Entity.AbstractEntityPersister -  Update 0: UPDATE [Category] SET Name = ?, IsActive = ?, OrderInList = ?, ParentCategory = ? WHERE Id = ?
DEBUG 79 NHibernate.Persister.Entity.AbstractEntityPersister -  Delete 0: DELETE FROM [Category] WHERE Id = ?
DEBUG 79 NHibernate.Persister.Entity.AbstractEntityPersister -  Identity insert: INSERT INTO [Category] (Name, IsActive, OrderInList, ParentCategory) VALUES (?, ?, ?, ?); select SCOPE_IDENTITY()
DEBUG 79 NHibernate.Loader.Entity.AbstractEntityLoader - Static select for entity CumbriaMD.Domain.Category: SELECT category0_.Id as Id1_0_, category0_.Name as Name1_0_, category0_.IsActive as IsActive1_0_, category0_.OrderInList as OrderInL4_1_0_, category0_.ParentCategory as ParentCa5_1_0_ FROM [Category] category0_ WHERE category0_.Id=?
DEBUG 79 NHibernate.Loader.Entity.AbstractEntityLoader - Static select for entity CumbriaMD.Domain.Category: SELECT category0_.Id as Id1_0_, category0_.Name as Name1_0_, category0_.IsActive as IsActive1_0_, category0_.OrderInList as OrderInL4_1_0_, category0_.ParentCategory as ParentCa5_1_0_ FROM [Category] category0_ WHERE category0_.Id=?
DEBUG 79 NHibernate.Loader.Entity.AbstractEntityLoader - Static select for entity CumbriaMD.Domain.Category: SELECT category0_.Id as Id1_0_, category0_.Name as Name1_0_, category0_.IsActive as IsActive1_0_, category0_.OrderInList as OrderInL4_1_0_, category0_.ParentCategory as ParentCa5_1_0_ FROM [Category] category0_ with (updlock, rowlock) WHERE category0_.Id=?
DEBUG 79 NHibernate.Loader.Entity.AbstractEntityLoader - Static select for entity CumbriaMD.Domain.Category: SELECT category0_.Id as Id1_0_, category0_.Name as Name1_0_, category0_.IsActive as IsActive1_0_, category0_.OrderInList as OrderInL4_1_0_, category0_.ParentCategory as ParentCa5_1_0_ FROM [Category] category0_ with (updlock, rowlock, nowait) WHERE category0_.Id=?
DEBUG 79 NHibernate.Loader.Entity.AbstractEntityLoader - Static select for entity CumbriaMD.Domain.Category: SELECT category0_.Id as Id1_0_, category0_.Name as Name1_0_, category0_.IsActive as IsActive1_0_, category0_.OrderInList as OrderInL4_1_0_, category0_.ParentCategory as ParentCa5_1_0_ FROM [Category] category0_ with (updlock, rowlock) WHERE category0_.Id=?
DEBUG 79 NHibernate.Loader.Entity.AbstractEntityLoader - Static select for action NHibernate.Engine.CascadingAction+MergeCascadingAction on entity CumbriaMD.Domain.Category: SELECT category0_.Id as Id1_1_, category0_.Name as Name1_1_, category0_.IsActive as IsActive1_1_, category0_.OrderInList as OrderInL4_1_1_, category0_.ParentCategory as ParentCa5_1_1_, products1_.Category_id as Category1_3_, product2_.Id as Product2_3_, product2_.Id as Id3_0_, product2_.Name as Name3_0_, product2_.Code as Code3_0_, product2_.Description as Descript4_3_0_, product2_.Price as Price3_0_, product2_.IsDiscounted as IsDiscou6_3_0_, product2_.IsInStock as IsInStock3_0_, product2_.AddedAt as AddedAt3_0_, product2_.UpdatedAt as UpdatedAt3_0_, product2_.Brand_id as Brand10_3_0_ FROM [Category] category0_ left outer join CategoriesProducts products1_ on category0_.Id=products1_.Category_id left outer join [Product] product2_ on products1_.Product_id=product2_.Id WHERE category0_.Id=?
DEBUG 79 NHibernate.Loader.Entity.AbstractEntityLoader - Static select for action NHibernate.Engine.CascadingAction+RefreshCascadingAction on entity CumbriaMD.Domain.Category: SELECT category0_.Id as Id1_1_, category0_.Name as Name1_1_, category0_.IsActive as IsActive1_1_, category0_.OrderInList as OrderInL4_1_1_, category0_.ParentCategory as ParentCa5_1_1_, products1_.Category_id as Category1_3_, product2_.Id as Product2_3_, product2_.Id as Id3_0_, product2_.Name as Name3_0_, product2_.Code as Code3_0_, product2_.Description as Descript4_3_0_, product2_.Price as Price3_0_, product2_.IsDiscounted as IsDiscou6_3_0_, product2_.IsInStock as IsInStock3_0_, product2_.AddedAt as AddedAt3_0_, product2_.UpdatedAt as UpdatedAt3_0_, product2_.Brand_id as Brand10_3_0_ FROM [Category] category0_ left outer join CategoriesProducts products1_ on category0_.Id=products1_.Category_id left outer join [Product] product2_ on products1_.Product_id=product2_.Id WHERE category0_.Id=?
DEBUG 79 NHibernate.Persister.Entity.AbstractEntityPersister - Static SQL for entity: CumbriaMD.Domain.Product
DEBUG 79 NHibernate.Persister.Entity.AbstractEntityPersister -  Version select: SELECT Id FROM [Product] WHERE Id = ?
DEBUG 79 NHibernate.Persister.Entity.AbstractEntityPersister -  Snapshot select: SELECT product_.Id, product_.Name as Name3_, product_.Code as Code3_, product_.Description as Descript4_3_, product_.Price as Price3_, product_.IsDiscounted as IsDiscou6_3_, product_.IsInStock as IsInStock3_, product_.AddedAt as AddedAt3_, product_.UpdatedAt as UpdatedAt3_, product_.Brand_id as Brand10_3_ FROM [Product] product_ WHERE product_.Id=?
DEBUG 79 NHibernate.Persister.Entity.AbstractEntityPersister -  Insert 0: INSERT INTO [Product] (Name, Code, Description, Price, IsDiscounted, IsInStock, AddedAt, UpdatedAt, Brand_id, Id) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
DEBUG 79 NHibernate.Persister.Entity.AbstractEntityPersister -  Update 0: UPDATE [Product] SET Name = ?, Code = ?, Description = ?, Price = ?, IsDiscounted = ?, IsInStock = ?, AddedAt = ?, UpdatedAt = ?, Brand_id = ? WHERE Id = ?
DEBUG 79 NHibernate.Persister.Entity.AbstractEntityPersister -  Delete 0: DELETE FROM [Product] WHERE Id = ?
DEBUG 79 NHibernate.Persister.Entity.AbstractEntityPersister -  Identity insert: INSERT INTO [Product] (Name, Code, Description, Price, IsDiscounted, IsInStock, AddedAt, UpdatedAt, Brand_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?); select SCOPE_IDENTITY()
DEBUG 79 NHibernate.Loader.Entity.AbstractEntityLoader - Static select for entity CumbriaMD.Domain.Product: SELECT product0_.Id as Id3_0_, product0_.Name as Name3_0_, product0_.Code as Code3_0_, product0_.Description as Descript4_3_0_, product0_.Price as Price3_0_, product0_.IsDiscounted as IsDiscou6_3_0_, product0_.IsInStock as IsInStock3_0_, product0_.AddedAt as AddedAt3_0_, product0_.UpdatedAt as UpdatedAt3_0_, product0_.Brand_id as Brand10_3_0_ FROM [Product] product0_ WHERE product0_.Id=?
DEBUG 79 NHibernate.Loader.Entity.AbstractEntityLoader - Static select for entity CumbriaMD.Domain.Product: SELECT product0_.Id as Id3_0_, product0_.Name as Name3_0_, product0_.Code as Code3_0_, product0_.Description as Descript4_3_0_, product0_.Price as Price3_0_, product0_.IsDiscounted as IsDiscou6_3_0_, product0_.IsInStock as IsInStock3_0_, product0_.AddedAt as AddedAt3_0_, product0_.UpdatedAt as UpdatedAt3_0_, product0_.Brand_id as Brand10_3_0_ FROM [Product] product0_ WHERE product0_.Id=?
DEBUG 79 NHibernate.Loader.Entity.AbstractEntityLoader - Static select for entity CumbriaMD.Domain.Product: SELECT product0_.Id as Id3_0_, product0_.Name as Name3_0_, product0_.Code as Code3_0_, product0_.Description as Descript4_3_0_, product0_.Price as Price3_0_, product0_.IsDiscounted as IsDiscou6_3_0_, product0_.IsInStock as IsInStock3_0_, product0_.AddedAt as AddedAt3_0_, product0_.UpdatedAt as UpdatedAt3_0_, product0_.Brand_id as Brand10_3_0_ FROM [Product] product0_ with (updlock, rowlock) WHERE product0_.Id=?
DEBUG 79 NHibernate.Loader.Entity.AbstractEntityLoader - Static select for entity CumbriaMD.Domain.Product: SELECT product0_.Id as Id3_0_, product0_.Name as Name3_0_, product0_.Code as Code3_0_, product0_.Description as Descript4_3_0_, product0_.Price as Price3_0_, product0_.IsDiscounted as IsDiscou6_3_0_, product0_.IsInStock as IsInStock3_0_, product0_.AddedAt as AddedAt3_0_, product0_.UpdatedAt as UpdatedAt3_0_, product0_.Brand_id as Brand10_3_0_ FROM [Product] product0_ with (updlock, rowlock, nowait) WHERE product0_.Id=?
DEBUG 79 NHibernate.Loader.Entity.AbstractEntityLoader - Static select for entity CumbriaMD.Domain.Product: SELECT product0_.Id as Id3_0_, product0_.Name as Name3_0_, product0_.Code as Code3_0_, product0_.Description as Descript4_3_0_, product0_.Price as Price3_0_, product0_.IsDiscounted as IsDiscou6_3_0_, product0_.IsInStock as IsInStock3_0_, product0_.AddedAt as AddedAt3_0_, product0_.UpdatedAt as UpdatedAt3_0_, product0_.Brand_id as Brand10_3_0_ FROM [Product] product0_ with (updlock, rowlock) WHERE product0_.Id=?
DEBUG 79 NHibernate.Loader.Entity.AbstractEntityLoader - Static select for action NHibernate.Engine.CascadingAction+MergeCascadingAction on entity CumbriaMD.Domain.Product: SELECT product0_.Id as Id3_1_, product0_.Name as Name3_1_, product0_.Code as Code3_1_, product0_.Description as Descript4_3_1_, product0_.Price as Price3_1_, product0_.IsDiscounted as IsDiscou6_3_1_, product0_.IsInStock as IsInStock3_1_, product0_.AddedAt as AddedAt3_1_, product0_.UpdatedAt as UpdatedAt3_1_, product0_.Brand_id as Brand10_3_1_, categories1_.Product_id as Product2_3_, category2_.Id as Category1_3_, category2_.Id as Id1_0_, category2_.Name as Name1_0_, category2_.IsActive as IsActive1_0_, category2_.OrderInList as OrderInL4_1_0_, category2_.ParentCategory as ParentCa5_1_0_ FROM [Product] product0_ left outer join CategoriesProducts categories1_ on product0_.Id=categories1_.Product_id left outer join [Category] category2_ on categories1_.Category_id=category2_.Id WHERE product0_.Id=?
DEBUG 79 NHibernate.Loader.Entity.AbstractEntityLoader - Static select for action NHibernate.Engine.CascadingAction+RefreshCascadingAction on entity CumbriaMD.Domain.Product: SELECT product0_.Id as Id3_1_, product0_.Name as Name3_1_, product0_.Code as Code3_1_, product0_.Description as Descript4_3_1_, product0_.Price as Price3_1_, product0_.IsDiscounted as IsDiscou6_3_1_, product0_.IsInStock as IsInStock3_1_, product0_.AddedAt as AddedAt3_1_, product0_.UpdatedAt as UpdatedAt3_1_, product0_.Brand_id as Brand10_3_1_, categories1_.Product_id as Product2_3_, category2_.Id as Category1_3_, category2_.Id as Id1_0_, category2_.Name as Name1_0_, category2_.IsActive as IsActive1_0_, category2_.OrderInList as OrderInL4_1_0_, category2_.ParentCategory as ParentCa5_1_0_ FROM [Product] product0_ left outer join CategoriesProducts categories1_ on product0_.Id=categories1_.Product_id left outer join [Category] category2_ on categories1_.Category_id=category2_.Id WHERE product0_.Id=?
DEBUG 79 NHibernate.Loader.Collection.OneToManyLoader - Static select for one-to-many CumbriaMD.Domain.Brand.Products: SELECT products0_.Brand_id as Brand10_1_, products0_.Id as Id1_, products0_.Id as Id3_0_, products0_.Name as Name3_0_, products0_.Code as Code3_0_, products0_.Description as Descript4_3_0_, products0_.Price as Price3_0_, products0_.IsDiscounted as IsDiscou6_3_0_, products0_.IsInStock as IsInStock3_0_, products0_.AddedAt as AddedAt3_0_, products0_.UpdatedAt as UpdatedAt3_0_, products0_.Brand_id as Brand10_3_0_ FROM [Product] products0_ WHERE products0_.Brand_id=?
DEBUG 79 NHibernate.Loader.Collection.BasicCollectionLoader - Static select for collection CumbriaMD.Domain.Category.Products: SELECT products0_.Category_id as Category1_1_, products0_.Product_id as Product2_1_, product1_.Id as Id3_0_, product1_.Name as Name3_0_, product1_.Code as Code3_0_, product1_.Description as Descript4_3_0_, product1_.Price as Price3_0_, product1_.IsDiscounted as IsDiscou6_3_0_, product1_.IsInStock as IsInStock3_0_, product1_.AddedAt as AddedAt3_0_, product1_.UpdatedAt as UpdatedAt3_0_, product1_.Brand_id as Brand10_3_0_ FROM CategoriesProducts products0_ left outer join [Product] product1_ on products0_.Product_id=product1_.Id WHERE products0_.Category_id=?
DEBUG 79 NHibernate.Loader.Collection.OneToManyLoader - Static select for one-to-many CumbriaMD.Domain.Category.Subcategories: SELECT subcategor0_.ParentCategory as ParentCa5_1_, subcategor0_.Id as Id1_, subcategor0_.Id as Id1_0_, subcategor0_.Name as Name1_0_, subcategor0_.IsActive as IsActive1_0_, subcategor0_.OrderInList as OrderInL4_1_0_, subcategor0_.ParentCategory as ParentCa5_1_0_ FROM [Category] subcategor0_ WHERE subcategor0_.ParentCategory=?
DEBUG 79 NHibernate.Loader.Collection.BasicCollectionLoader - Static select for collection CumbriaMD.Domain.Product.Categories: SELECT categories0_.Product_id as Product2_1_, categories0_.Category_id as Category1_1_, category1_.Id as Id1_0_, category1_.Name as Name1_0_, category1_.IsActive as IsActive1_0_, category1_.OrderInList as OrderInL4_1_0_, category1_.ParentCategory as ParentCa5_1_0_ FROM CategoriesProducts categories0_ left outer join [Category] category1_ on categories0_.Category_id=category1_.Id WHERE categories0_.Product_id=?
DEBUG 79 NHibernate.Impl.SessionFactoryObjectFactory - initializing class SessionFactoryObjectFactory
DEBUG 79 NHibernate.Impl.SessionFactoryObjectFactory - registered: 6f57371e56334b8d980eb750ffe6fdfb(unnamed)
INFO 79 NHibernate.Impl.SessionFactoryObjectFactory - no name configured
DEBUG 79 NHibernate.Impl.SessionFactoryImpl - Instantiated session factory
DEBUG 79 NHibernate.Impl.SessionFactoryImpl - Checking 0 named HQL queries
DEBUG 79 NHibernate.Impl.SessionFactoryImpl - Checking 0 named SQL queries
DEBUG 79 NHibernate.Impl.SessionImpl - [session-id=9937f989-2423-4cc5-a891-e564c8e78421] opened session at timestamp: 634803945708, for session factory: [/6f57371e56334b8d980eb750ffe6fdfb]
DEBUG 79 NHibernate.Loader.Criteria.CriteriaQueryTranslator - put criteria= alias=this0_
DEBUG 79 NHibernate.AdoNet.AbstractBatcher - Opened new IDbCommand, open IDbCommands: 1
DEBUG 79 NHibernate.AdoNet.AbstractBatcher - Building an IDbCommand object for the SqlString: SELECT this_.Id as Id1_0_, this_.Name as Name1_0_, this_.IsActive as IsActive1_0_, this_.OrderInList as OrderInL4_1_0_, this_.ParentCategory as ParentCa5_1_0_ FROM [Category] this_
INFO 79 NHibernate.Loader.Loader - SELECT this_.Id as Id1_0_, this_.Name as Name1_0_, this_.IsActive as IsActive1_0_, this_.OrderInList as OrderInL4_1_0_, this_.ParentCategory as ParentCa5_1_0_ FROM [Category] this_
DEBUG 79 NHibernate.SQL - SELECT this_.Id as Id1_0_, this_.Name as Name1_0_, this_.IsActive as IsActive1_0_, this_.OrderInList as OrderInL4_1_0_, this_.ParentCategory as ParentCa5_1_0_ FROM [Category] this_
DEBUG 79 NHibernate.Connection.DriverConnectionProvider - Obtaining IDbConnection from Driver
DEBUG 79 NHibernate.AdoNet.AbstractBatcher - ExecuteReader took 1 ms
DEBUG 79 NHibernate.AdoNet.AbstractBatcher - Opened IDataReader, open IDataReaders: 1
DEBUG 79 NHibernate.Loader.Loader - processing result set
DEBUG 79 NHibernate.Loader.Loader - result set row: 0
DEBUG 79 NHibernate.Type.Int32Type - returning '1' as column: Id1_0_
DEBUG 79 NHibernate.Loader.Loader - result row: EntityKey[CumbriaMD.Domain.Category#1]
DEBUG 79 NHibernate.Loader.Loader - Initializing object from DataReader: [CumbriaMD.Domain.Category#1]
DEBUG 79 NHibernate.Persister.Entity.AbstractEntityPersister - Hydrating entity: [CumbriaMD.Domain.Category#1]
DEBUG 79 NHibernate.Type.StringType - returning 'TOP LEVEL CATEGORY' as column: Name1_0_
DEBUG 79 NHibernate.Type.BooleanType - returning 'True' as column: IsActive1_0_
DEBUG 79 NHibernate.Type.Int32Type - returning '1' as column: OrderInL4_1_0_
DEBUG 79 NHibernate.Type.Int32Type - returning '1' as column: ParentCa5_1_0_
DEBUG 79 NHibernate.Loader.Loader - result set row: 1
DEBUG 79 NHibernate.Type.Int32Type - returning '2' as column: Id1_0_
DEBUG 79 NHibernate.Loader.Loader - result row: EntityKey[CumbriaMD.Domain.Category#2]
DEBUG 79 NHibernate.Loader.Loader - Initializing object from DataReader: [CumbriaMD.Domain.Category#2]
DEBUG 79 NHibernate.Persister.Entity.AbstractEntityPersister - Hydrating entity: [CumbriaMD.Domain.Category#2]
DEBUG 79 NHibernate.Type.StringType - returning 'Metal Detectors' as column: Name1_0_
DEBUG 79 NHibernate.Type.BooleanType - returning 'True' as column: IsActive1_0_
DEBUG 79 NHibernate.Type.Int32Type - returning '2' as column: OrderInL4_1_0_
DEBUG 79 NHibernate.Type.Int32Type - returning '1' as column: ParentCa5_1_0_
DEBUG 79 NHibernate.Loader.Loader - result set row: 2
DEBUG 79 NHibernate.Type.Int32Type - returning '4' as column: Id1_0_
DEBUG 79 NHibernate.Loader.Loader - result row: EntityKey[CumbriaMD.Domain.Category#4]
DEBUG 79 NHibernate.Loader.Loader - Initializing object from DataReader: [CumbriaMD.Domain.Category#4]
DEBUG 79 NHibernate.Persister.Entity.AbstractEntityPersister - Hydrating entity: [CumbriaMD.Domain.Category#4]
DEBUG 79 NHibernate.Type.StringType - returning 'Books' as column: Name1_0_
DEBUG 79 NHibernate.Type.BooleanType - returning 'True' as column: IsActive1_0_
DEBUG 79 NHibernate.Type.Int32Type - returning '3' as column: OrderInL4_1_0_
DEBUG 79 NHibernate.Type.Int32Type - returning '1' as column: ParentCa5_1_0_
DEBUG 79 NHibernate.Loader.Loader - result set row: 3
DEBUG 79 NHibernate.Type.Int32Type - returning '5' as column: Id1_0_
DEBUG 79 NHibernate.Loader.Loader - result row: EntityKey[CumbriaMD.Domain.Category#5]
DEBUG 79 NHibernate.Loader.Loader - Initializing object from DataReader: [CumbriaMD.Domain.Category#5]
DEBUG 79 NHibernate.Persister.Entity.AbstractEntityPersister - Hydrating entity: [CumbriaMD.Domain.Category#5]
DEBUG 79 NHibernate.Type.StringType - returning 'Maps' as column: Name1_0_
DEBUG 79 NHibernate.Type.BooleanType - returning 'True' as column: IsActive1_0_
DEBUG 79 NHibernate.Type.Int32Type - returning '2' as column: OrderInL4_1_0_
DEBUG 79 NHibernate.Type.Int32Type - returning '4' as column: ParentCa5_1_0_
DEBUG 79 NHibernate.Loader.Loader - result set row: 4
DEBUG 79 NHibernate.Type.Int32Type - returning '6' as column: Id1_0_
DEBUG 79 NHibernate.Loader.Loader - result row: EntityKey[CumbriaMD.Domain.Category#6]
DEBUG 79 NHibernate.Loader.Loader - Initializing object from DataReader: [CumbriaMD.Domain.Category#6]
DEBUG 79 NHibernate.Persister.Entity.AbstractEntityPersister - Hydrating entity: [CumbriaMD.Domain.Category#6]
DEBUG 79 NHibernate.Type.StringType - returning 'Magazines' as column: Name1_0_
DEBUG 79 NHibernate.Type.BooleanType - returning 'True' as column: IsActive1_0_
DEBUG 79 NHibernate.Type.Int32Type - returning '1' as column: OrderInL4_1_0_
DEBUG 79 NHibernate.Type.Int32Type - returning '4' as column: ParentCa5_1_0_
DEBUG 79 NHibernate.Loader.Loader - done processing result set (5 rows)
DEBUG 79 NHibernate.Driver.NHybridDataReader - running NHybridDataReader.Dispose()
DEBUG 79 NHibernate.AdoNet.AbstractBatcher - Closed IDataReader, open IDataReaders :0
DEBUG 79 NHibernate.AdoNet.AbstractBatcher - DataReader was closed after 16 ms
DEBUG 79 NHibernate.AdoNet.AbstractBatcher - Closed IDbCommand, open IDbCommands: 0
DEBUG 79 NHibernate.AdoNet.ConnectionManager - aggressively releasing database connection
DEBUG 79 NHibernate.Connection.ConnectionProvider - Closing connection
DEBUG 79 NHibernate.Loader.Loader - total objects hydrated: 5
DEBUG 79 NHibernate.Engine.TwoPhaseLoad - resolving associations for [CumbriaMD.Domain.Category#1]
DEBUG 79 NHibernate.Engine.Loading.LoadContexts - creating collection wrapper:[CumbriaMD.Domain.Category.Products#1]
DEBUG 79 NHibernate.Engine.Loading.LoadContexts - creating collection wrapper:[CumbriaMD.Domain.Category.Subcategories#1]
DEBUG 79 NHibernate.Event.Default.DefaultLoadEventListener - loading entity: [CumbriaMD.Domain.Category#1]
DEBUG 79 NHibernate.Event.Default.DefaultLoadEventListener - entity found in session cache
DEBUG 79 NHibernate.Engine.TwoPhaseLoad - done materializing entity [CumbriaMD.Domain.Category#1]
DEBUG 79 NHibernate.Engine.TwoPhaseLoad - resolving associations for [CumbriaMD.Domain.Category#2]
DEBUG 79 NHibernate.Engine.Loading.LoadContexts - creating collection wrapper:[CumbriaMD.Domain.Category.Products#2]
DEBUG 79 NHibernate.Engine.Loading.LoadContexts - creating collection wrapper:[CumbriaMD.Domain.Category.Subcategories#2]
DEBUG 79 NHibernate.Event.Default.DefaultLoadEventListener - loading entity: [CumbriaMD.Domain.Category#1]
DEBUG 79 NHibernate.Event.Default.DefaultLoadEventListener - entity found in session cache
DEBUG 79 NHibernate.Engine.TwoPhaseLoad - done materializing entity [CumbriaMD.Domain.Category#2]
DEBUG 79 NHibernate.Engine.TwoPhaseLoad - resolving associations for [CumbriaMD.Domain.Category#4]
DEBUG 79 NHibernate.Engine.Loading.LoadContexts - creating collection wrapper:[CumbriaMD.Domain.Category.Products#4]
DEBUG 79 NHibernate.Engine.Loading.LoadContexts - creating collection wrapper:[CumbriaMD.Domain.Category.Subcategories#4]
DEBUG 79 NHibernate.Event.Default.DefaultLoadEventListener - loading entity: [CumbriaMD.Domain.Category#1]
DEBUG 79 NHibernate.Event.Default.DefaultLoadEventListener - entity found in session cache
DEBUG 79 NHibernate.Engine.TwoPhaseLoad - done materializing entity [CumbriaMD.Domain.Category#4]
DEBUG 79 NHibernate.Engine.TwoPhaseLoad - resolving associations for [CumbriaMD.Domain.Category#5]
DEBUG 79 NHibernate.Engine.Loading.LoadContexts - creating collection wrapper:[CumbriaMD.Domain.Category.Products#5]
DEBUG 79 NHibernate.Engine.Loading.LoadContexts - creating collection wrapper:[CumbriaMD.Domain.Category.Subcategories#5]
DEBUG 79 NHibernate.Event.Default.DefaultLoadEventListener - loading entity: [CumbriaMD.Domain.Category#4]
DEBUG 79 NHibernate.Event.Default.DefaultLoadEventListener - entity found in session cache
DEBUG 79 NHibernate.Engine.TwoPhaseLoad - done materializing entity [CumbriaMD.Domain.Category#5]
DEBUG 79 NHibernate.Engine.TwoPhaseLoad - resolving associations for [CumbriaMD.Domain.Category#6]
DEBUG 79 NHibernate.Engine.Loading.LoadContexts - creating collection wrapper:[CumbriaMD.Domain.Category.Products#6]
DEBUG 79 NHibernate.Engine.Loading.LoadContexts - creating collection wrapper:[CumbriaMD.Domain.Category.Subcategories#6]
DEBUG 79 NHibernate.Event.Default.DefaultLoadEventListener - loading entity: [CumbriaMD.Domain.Category#4]
DEBUG 79 NHibernate.Event.Default.DefaultLoadEventListener - entity found in session cache
DEBUG 79 NHibernate.Engine.TwoPhaseLoad - done materializing entity [CumbriaMD.Domain.Category#6]
DEBUG 79 NHibernate.Engine.StatefulPersistenceContext - initializing non-lazy collections
DEBUG 79 NHibernate.AdoNet.ConnectionManager - after autocommit
DEBUG 79 NHibernate.Impl.SessionImpl - transaction completion
DEBUG 79 NHibernate.AdoNet.ConnectionManager - aggressively releasing database connection
DEBUG 79 NHibernate.Loader.Criteria.CriteriaQueryTranslator - put criteria= alias=this0_
DEBUG 79 NHibernate.AdoNet.AbstractBatcher - Opened new IDbCommand, open IDbCommands: 1
DEBUG 79 NHibernate.AdoNet.AbstractBatcher - Building an IDbCommand object for the SqlString: SELECT this_.Id as Id1_0_, this_.Name as Name1_0_, this_.IsActive as IsActive1_0_, this_.OrderInList as OrderInL4_1_0_, this_.ParentCategory as ParentCa5_1_0_ FROM [Category] this_
INFO 79 NHibernate.Loader.Loader - SELECT this_.Id as Id1_0_, this_.Name as Name1_0_, this_.IsActive as IsActive1_0_, this_.OrderInList as OrderInL4_1_0_, this_.ParentCategory as ParentCa5_1_0_ FROM [Category] this_
DEBUG 79 NHibernate.SQL - SELECT this_.Id as Id1_0_, this_.Name as Name1_0_, this_.IsActive as IsActive1_0_, this_.OrderInList as OrderInL4_1_0_, this_.ParentCategory as ParentCa5_1_0_ FROM [Category] this_
DEBUG 79 NHibernate.Connection.DriverConnectionProvider - Obtaining IDbConnection from Driver
DEBUG 79 NHibernate.AdoNet.AbstractBatcher - ExecuteReader took 0 ms
DEBUG 79 NHibernate.AdoNet.AbstractBatcher - Opened IDataReader, open IDataReaders: 1
DEBUG 79 NHibernate.Loader.Loader - processing result set
DEBUG 79 NHibernate.Loader.Loader - result set row: 0
DEBUG 79 NHibernate.Type.Int32Type - returning '1' as column: Id1_0_
DEBUG 79 NHibernate.Loader.Loader - result row: EntityKey[CumbriaMD.Domain.Category#1]
DEBUG 79 NHibernate.Loader.Loader - result set row: 1
DEBUG 79 NHibernate.Type.Int32Type - returning '2' as column: Id1_0_
DEBUG 79 NHibernate.Loader.Loader - result row: EntityKey[CumbriaMD.Domain.Category#2]
DEBUG 79 NHibernate.Loader.Loader - result set row: 2
DEBUG 79 NHibernate.Type.Int32Type - returning '4' as column: Id1_0_
DEBUG 79 NHibernate.Loader.Loader - result row: EntityKey[CumbriaMD.Domain.Category#4]
DEBUG 79 NHibernate.Loader.Loader - result set row: 3
DEBUG 79 NHibernate.Type.Int32Type - returning '5' as column: Id1_0_
DEBUG 79 NHibernate.Loader.Loader - result row: EntityKey[CumbriaMD.Domain.Category#5]
DEBUG 79 NHibernate.Loader.Loader - result set row: 4
DEBUG 79 NHibernate.Type.Int32Type - returning '6' as column: Id1_0_
DEBUG 79 NHibernate.Loader.Loader - result row: EntityKey[CumbriaMD.Domain.Category#6]
DEBUG 79 NHibernate.Loader.Loader - done processing result set (5 rows)
DEBUG 79 NHibernate.Driver.NHybridDataReader - running NHybridDataReader.Dispose()
DEBUG 79 NHibernate.AdoNet.AbstractBatcher - Closed IDataReader, open IDataReaders :0
DEBUG 79 NHibernate.AdoNet.AbstractBatcher - DataReader was closed after 1 ms
DEBUG 79 NHibernate.AdoNet.AbstractBatcher - Closed IDbCommand, open IDbCommands: 0
DEBUG 79 NHibernate.AdoNet.ConnectionManager - aggressively releasing database connection
DEBUG 79 NHibernate.Connection.ConnectionProvider - Closing connection
DEBUG 79 NHibernate.Loader.Loader - total objects hydrated: 0
DEBUG 79 NHibernate.Engine.StatefulPersistenceContext - initializing non-lazy collections
DEBUG 79 NHibernate.AdoNet.ConnectionManager - after autocommit
DEBUG 79 NHibernate.Impl.SessionImpl - transaction completion
DEBUG 79 NHibernate.AdoNet.ConnectionManager - aggressively releasing database connection
DEBUG 79 NHibernate.Impl.SessionImpl - [session-id=9937f989-2423-4cc5-a891-e564c8e78421] running ISession.Dispose()
DEBUG 79 NHibernate.Impl.SessionImpl - [session-id=9937f989-2423-4cc5-a891-e564c8e78421] executing real Dispose(True)
DEBUG 79 NHibernate.Impl.SessionImpl - closing session
DEBUG 79 NHibernate.AdoNet.AbstractBatcher - running BatcherImpl.Dispose(true)
DEBUG 105 NHibernate.Impl.SessionImpl - [session-id=431228be-1bff-4160-a7f4-c32e6be117a7] opened session at timestamp: 634803945755, for session factory: [/6f57371e56334b8d980eb750ffe6fdfb]
DEBUG 105 NHibernate.Loader.Criteria.CriteriaQueryTranslator - put criteria= alias=this0_
DEBUG 105 NHibernate.AdoNet.AbstractBatcher - Opened new IDbCommand, open IDbCommands: 1
DEBUG 105 NHibernate.AdoNet.AbstractBatcher - Building an IDbCommand object for the SqlString: SELECT this_.Id as Id1_0_, this_.Name as Name1_0_, this_.IsActive as IsActive1_0_, this_.OrderInList as OrderInL4_1_0_, this_.ParentCategory as ParentCa5_1_0_ FROM [Category] this_
INFO 105 NHibernate.Loader.Loader - SELECT this_.Id as Id1_0_, this_.Name as Name1_0_, this_.IsActive as IsActive1_0_, this_.OrderInList as OrderInL4_1_0_, this_.ParentCategory as ParentCa5_1_0_ FROM [Category] this_
DEBUG 105 NHibernate.SQL - SELECT this_.Id as Id1_0_, this_.Name as Name1_0_, this_.IsActive as IsActive1_0_, this_.OrderInList as OrderInL4_1_0_, this_.ParentCategory as ParentCa5_1_0_ FROM [Category] this_
DEBUG 105 NHibernate.Connection.DriverConnectionProvider - Obtaining IDbConnection from Driver
DEBUG 105 NHibernate.AdoNet.AbstractBatcher - ExecuteReader took 0 ms
DEBUG 105 NHibernate.AdoNet.AbstractBatcher - Opened IDataReader, open IDataReaders: 1
DEBUG 105 NHibernate.Loader.Loader - processing result set
DEBUG 105 NHibernate.Loader.Loader - result set row: 0
DEBUG 105 NHibernate.Type.Int32Type - returning '1' as column: Id1_0_
DEBUG 105 NHibernate.Loader.Loader - result row: EntityKey[CumbriaMD.Domain.Category#1]
DEBUG 105 NHibernate.Loader.Loader - Initializing object from DataReader: [CumbriaMD.Domain.Category#1]
DEBUG 105 NHibernate.Persister.Entity.AbstractEntityPersister - Hydrating entity: [CumbriaMD.Domain.Category#1]
DEBUG 105 NHibernate.Type.StringType - returning 'TOP LEVEL CATEGORY' as column: Name1_0_
DEBUG 105 NHibernate.Type.BooleanType - returning 'True' as column: IsActive1_0_
DEBUG 105 NHibernate.Type.Int32Type - returning '1' as column: OrderInL4_1_0_
DEBUG 105 NHibernate.Type.Int32Type - returning '1' as column: ParentCa5_1_0_
DEBUG 105 NHibernate.Loader.Loader - result set row: 1
DEBUG 105 NHibernate.Type.Int32Type - returning '2' as column: Id1_0_
DEBUG 105 NHibernate.Loader.Loader - result row: EntityKey[CumbriaMD.Domain.Category#2]
DEBUG 105 NHibernate.Loader.Loader - Initializing object from DataReader: [CumbriaMD.Domain.Category#2]
DEBUG 105 NHibernate.Persister.Entity.AbstractEntityPersister - Hydrating entity: [CumbriaMD.Domain.Category#2]
DEBUG 105 NHibernate.Type.StringType - returning 'Metal Detectors' as column: Name1_0_
DEBUG 105 NHibernate.Type.BooleanType - returning 'True' as column: IsActive1_0_
DEBUG 105 NHibernate.Type.Int32Type - returning '2' as column: OrderInL4_1_0_
DEBUG 105 NHibernate.Type.Int32Type - returning '1' as column: ParentCa5_1_0_
DEBUG 105 NHibernate.Loader.Loader - result set row: 2
DEBUG 105 NHibernate.Type.Int32Type - returning '4' as column: Id1_0_
DEBUG 105 NHibernate.Loader.Loader - result row: EntityKey[CumbriaMD.Domain.Category#4]
DEBUG 105 NHibernate.Loader.Loader - Initializing object from DataReader: [CumbriaMD.Domain.Category#4]
DEBUG 105 NHibernate.Persister.Entity.AbstractEntityPersister - Hydrating entity: [CumbriaMD.Domain.Category#4]
DEBUG 105 NHibernate.Type.StringType - returning 'Books' as column: Name1_0_
DEBUG 105 NHibernate.Type.BooleanType - returning 'True' as column: IsActive1_0_
DEBUG 105 NHibernate.Type.Int32Type - returning '3' as column: OrderInL4_1_0_
DEBUG 105 NHibernate.Type.Int32Type - returning '1' as column: ParentCa5_1_0_
DEBUG 105 NHibernate.Loader.Loader - result set row: 3
DEBUG 105 NHibernate.Type.Int32Type - returning '5' as column: Id1_0_
DEBUG 105 NHibernate.Loader.Loader - result row: EntityKey[CumbriaMD.Domain.Category#5]
DEBUG 105 NHibernate.Loader.Loader - Initializing object from DataReader: [CumbriaMD.Domain.Category#5]
DEBUG 105 NHibernate.Persister.Entity.AbstractEntityPersister - Hydrating entity: [CumbriaMD.Domain.Category#5]
DEBUG 105 NHibernate.Type.StringType - returning 'Maps' as column: Name1_0_
DEBUG 105 NHibernate.Type.BooleanType - returning 'True' as column: IsActive1_0_
DEBUG 105 NHibernate.Type.Int32Type - returning '2' as column: OrderInL4_1_0_
DEBUG 105 NHibernate.Type.Int32Type - returning '4' as column: ParentCa5_1_0_
DEBUG 105 NHibernate.Loader.Loader - result set row: 4
DEBUG 105 NHibernate.Type.Int32Type - returning '6' as column: Id1_0_
DEBUG 105 NHibernate.Loader.Loader - result row: EntityKey[CumbriaMD.Domain.Category#6]
DEBUG 105 NHibernate.Loader.Loader - Initializing object from DataReader: [CumbriaMD.Domain.Category#6]
DEBUG 105 NHibernate.Persister.Entity.AbstractEntityPersister - Hydrating entity: [CumbriaMD.Domain.Category#6]
DEBUG 105 NHibernate.Type.StringType - returning 'Magazines' as column: Name1_0_
DEBUG 105 NHibernate.Type.BooleanType - returning 'True' as column: IsActive1_0_
DEBUG 105 NHibernate.Type.Int32Type - returning '1' as column: OrderInL4_1_0_
DEBUG 105 NHibernate.Type.Int32Type - returning '4' as column: ParentCa5_1_0_
DEBUG 105 NHibernate.Loader.Loader - done processing result set (5 rows)
DEBUG 105 NHibernate.Driver.NHybridDataReader - running NHybridDataReader.Dispose()
DEBUG 105 NHibernate.AdoNet.AbstractBatcher - Closed IDataReader, open IDataReaders :0
DEBUG 105 NHibernate.AdoNet.AbstractBatcher - DataReader was closed after 1 ms
DEBUG 105 NHibernate.AdoNet.AbstractBatcher - Closed IDbCommand, open IDbCommands: 0
DEBUG 105 NHibernate.AdoNet.ConnectionManager - aggressively releasing database connection
DEBUG 105 NHibernate.Connection.ConnectionProvider - Closing connection
DEBUG 105 NHibernate.Loader.Loader - total objects hydrated: 5
DEBUG 105 NHibernate.Engine.TwoPhaseLoad - resolving associations for [CumbriaMD.Domain.Category#1]
DEBUG 105 NHibernate.Engine.Loading.LoadContexts - creating collection wrapper:[CumbriaMD.Domain.Category.Products#1]
DEBUG 105 NHibernate.Engine.Loading.LoadContexts - creating collection wrapper:[CumbriaMD.Domain.Category.Subcategories#1]
DEBUG 105 NHibernate.Event.Default.DefaultLoadEventListener - loading entity: [CumbriaMD.Domain.Category#1]
DEBUG 105 NHibernate.Event.Default.DefaultLoadEventListener - entity found in session cache
DEBUG 105 NHibernate.Engine.TwoPhaseLoad - done materializing entity [CumbriaMD.Domain.Category#1]
DEBUG 105 NHibernate.Engine.TwoPhaseLoad - resolving associations for [CumbriaMD.Domain.Category#2]
DEBUG 105 NHibernate.Engine.Loading.LoadContexts - creating collection wrapper:[CumbriaMD.Domain.Category.Products#2]
DEBUG 105 NHibernate.Engine.Loading.LoadContexts - creating collection wrapper:[CumbriaMD.Domain.Category.Subcategories#2]
DEBUG 105 NHibernate.Event.Default.DefaultLoadEventListener - loading entity: [CumbriaMD.Domain.Category#1]
DEBUG 105 NHibernate.Event.Default.DefaultLoadEventListener - entity found in session cache
DEBUG 105 NHibernate.Engine.TwoPhaseLoad - done materializing entity [CumbriaMD.Domain.Category#2]
DEBUG 105 NHibernate.Engine.TwoPhaseLoad - resolving associations for [CumbriaMD.Domain.Category#4]
DEBUG 105 NHibernate.Engine.Loading.LoadContexts - creating collection wrapper:[CumbriaMD.Domain.Category.Products#4]
DEBUG 105 NHibernate.Engine.Loading.LoadContexts - creating collection wrapper:[CumbriaMD.Domain.Category.Subcategories#4]
DEBUG 105 NHibernate.Event.Default.DefaultLoadEventListener - loading entity: [CumbriaMD.Domain.Category#1]
DEBUG 105 NHibernate.Event.Default.DefaultLoadEventListener - entity found in session cache
DEBUG 105 NHibernate.Engine.TwoPhaseLoad - done materializing entity [CumbriaMD.Domain.Category#4]
DEBUG 105 NHibernate.Engine.TwoPhaseLoad - resolving associations for [CumbriaMD.Domain.Category#5]
DEBUG 105 NHibernate.Engine.Loading.LoadContexts - creating collection wrapper:[CumbriaMD.Domain.Category.Products#5]
DEBUG 105 NHibernate.Engine.Loading.LoadContexts - creating collection wrapper:[CumbriaMD.Domain.Category.Subcategories#5]
DEBUG 105 NHibernate.Event.Default.DefaultLoadEventListener - loading entity: [CumbriaMD.Domain.Category#4]
DEBUG 105 NHibernate.Event.Default.DefaultLoadEventListener - entity found in session cache
DEBUG 105 NHibernate.Engine.TwoPhaseLoad - done materializing entity [CumbriaMD.Domain.Category#5]
DEBUG 105 NHibernate.Engine.TwoPhaseLoad - resolving associations for [CumbriaMD.Domain.Category#6]
DEBUG 105 NHibernate.Engine.Loading.LoadContexts - creating collection wrapper:[CumbriaMD.Domain.Category.Products#6]
DEBUG 105 NHibernate.Engine.Loading.LoadContexts - creating collection wrapper:[CumbriaMD.Domain.Category.Subcategories#6]
DEBUG 105 NHibernate.Event.Default.DefaultLoadEventListener - loading entity: [CumbriaMD.Domain.Category#4]
DEBUG 105 NHibernate.Event.Default.DefaultLoadEventListener - entity found in session cache
DEBUG 105 NHibernate.Engine.TwoPhaseLoad - done materializing entity [CumbriaMD.Domain.Category#6]
DEBUG 105 NHibernate.Engine.StatefulPersistenceContext - initializing non-lazy collections
DEBUG 105 NHibernate.AdoNet.ConnectionManager - after autocommit
DEBUG 105 NHibernate.Impl.SessionImpl - transaction completion
DEBUG 105 NHibernate.AdoNet.ConnectionManager - aggressively releasing database connection
DEBUG 105 NHibernate.Loader.Criteria.CriteriaQueryTranslator - put criteria=Parent.Id = 4
OrderInList asc alias=this0_
DEBUG 105 NHibernate.Loader.Criteria.CriteriaQueryTranslator - returning alias=this_ for criteria=Parent.Id = 4
OrderInList asc
DEBUG 105 NHibernate.Loader.Criteria.CriteriaQueryTranslator - returning alias=this_ for criteria=Parent.Id = 4
OrderInList asc
DEBUG 105 NHibernate.SqlCommand.SqlSelectBuilder - The initial capacity was set too low at: 8 for the SelectSqlBuilder that needed a capacity of: 9 for the table [Category] this_
DEBUG 105 NHibernate.AdoNet.AbstractBatcher - Opened new IDbCommand, open IDbCommands: 1
DEBUG 105 NHibernate.AdoNet.AbstractBatcher - Building an IDbCommand object for the SqlString: SELECT this_.Id as Id1_0_, this_.Name as Name1_0_, this_.IsActive as IsActive1_0_, this_.OrderInList as OrderInL4_1_0_, this_.ParentCategory as ParentCa5_1_0_ FROM [Category] this_ WHERE this_.ParentCategory = ? ORDER BY this_.OrderInList asc
DEBUG 105 NHibernate.Type.Int32Type - binding '4' to parameter: 0
INFO 105 NHibernate.Loader.Loader - SELECT this_.Id as Id1_0_, this_.Name as Name1_0_, this_.IsActive as IsActive1_0_, this_.OrderInList as OrderInL4_1_0_, this_.ParentCategory as ParentCa5_1_0_ FROM [Category] this_ WHERE this_.ParentCategory = @p0 ORDER BY this_.OrderInList asc
DEBUG 105 NHibernate.SQL - SELECT this_.Id as Id1_0_, this_.Name as Name1_0_, this_.IsActive as IsActive1_0_, this_.OrderInList as OrderInL4_1_0_, this_.ParentCategory as ParentCa5_1_0_ FROM [Category] this_ WHERE this_.ParentCategory = @p0 ORDER BY this_.OrderInList asc;@p0 = 4 [Type: Int32 (0)]
DEBUG 105 NHibernate.Connection.DriverConnectionProvider - Obtaining IDbConnection from Driver
DEBUG 105 NHibernate.AdoNet.AbstractBatcher - ExecuteReader took 1 ms
DEBUG 105 NHibernate.AdoNet.AbstractBatcher - Opened IDataReader, open IDataReaders: 1
DEBUG 105 NHibernate.Loader.Loader - processing result set
DEBUG 105 NHibernate.Loader.Loader - result set row: 0
DEBUG 105 NHibernate.Type.Int32Type - returning '6' as column: Id1_0_
DEBUG 105 NHibernate.Loader.Loader - result row: EntityKey[CumbriaMD.Domain.Category#6]
DEBUG 105 NHibernate.Loader.Loader - result set row: 1
DEBUG 105 NHibernate.Type.Int32Type - returning '5' as column: Id1_0_
DEBUG 105 NHibernate.Loader.Loader - result row: EntityKey[CumbriaMD.Domain.Category#5]
DEBUG 105 NHibernate.Loader.Loader - done processing result set (2 rows)
DEBUG 105 NHibernate.Driver.NHybridDataReader - running NHybridDataReader.Dispose()
DEBUG 105 NHibernate.AdoNet.AbstractBatcher - Closed IDataReader, open IDataReaders :0
DEBUG 105 NHibernate.AdoNet.AbstractBatcher - DataReader was closed after 1 ms
DEBUG 105 NHibernate.AdoNet.AbstractBatcher - Closed IDbCommand, open IDbCommands: 0
DEBUG 105 NHibernate.AdoNet.ConnectionManager - aggressively releasing database connection
DEBUG 105 NHibernate.Connection.ConnectionProvider - Closing connection
DEBUG 105 NHibernate.Loader.Loader - total objects hydrated: 0
DEBUG 105 NHibernate.Engine.StatefulPersistenceContext - initializing non-lazy collections
DEBUG 105 NHibernate.AdoNet.ConnectionManager - after autocommit
DEBUG 105 NHibernate.Impl.SessionImpl - transaction completion
DEBUG 105 NHibernate.AdoNet.ConnectionManager - aggressively releasing database connection
DEBUG 105 NHibernate.Impl.SessionImpl - [session-id=431228be-1bff-4160-a7f4-c32e6be117a7] running ISession.Dispose()
DEBUG 105 NHibernate.Impl.SessionImpl - [session-id=431228be-1bff-4160-a7f4-c32e6be117a7] executing real Dispose(True)
DEBUG 105 NHibernate.Impl.SessionImpl - closing session
DEBUG 105 NHibernate.AdoNet.AbstractBatcher - running BatcherImpl.Dispose(true)
INFO 96 NHibernate.Impl.SessionFactoryImpl - Closing
DEBUG 96 NHibernate.Connection.ConnectionProvider - Disposing of ConnectionProvider.
INFO 79 NHibernate.Cfg.Environment - NHibernate 3.3.1.4000 (3.3.1.4000)
INFO 79 NHibernate.Cfg.Environment - hibernate-configuration section not found in application configuration file
INFO 79 NHibernate.Cfg.Environment - Bytecode provider name : lcg
INFO 79 NHibernate.Cfg.Environment - Using reflection optimizer
DEBUG 96 NHibernate.Cfg.Configuration - Mapping XML:
<hibernate-mapping xmlns="urn:nhibernate-mapping-2.2"><class xmlns="urn:nhibernate-mapping-2.2" name="CumbriaMD.Domain.Brand, CumbriaMD.Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" table="`Brand`"><id name="Id" type="System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"><column name="Id" /><generator class="identity" /></id><bag name="Products"><key><column name="Brand_id" /></key><one-to-many class="CumbriaMD.Domain.Product, CumbriaMD.Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" /></bag><property name="Name" type="System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"><column name="Name" length="50" not-null="true" /></property><property name="IsActive" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"><column name="IsActive" not-null="true" /></property><many-to-one class="CumbriaMD.Domain.Product, CumbriaMD.Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" name="DefaultProduct"><column name="DefaultProduct_id" /></many-to-one></class></hibernate-mapping>
INFO 96 NHibernate.Dialect.Dialect - Using dialect: NHibernate.Dialect.MsSql2008Dialect
INFO 96 NHibernate.Cfg.XmlHbmBinding.Binder - Mapping class: CumbriaMD.Domain.Brand -> Brand
DEBUG 96 NHibernate.Cfg.XmlHbmBinding.Binder - Mapped property: Id -> Id, type: Int32
DEBUG 96 NHibernate.Cfg.XmlHbmBinding.Binder - Mapped property: Products, type: System.Collections.Generic.ICollection`1[[CumbriaMD.Domain.Product, CumbriaMD.Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]](CumbriaMD.Domain.Brand.Products)
DEBUG 96 NHibernate.Cfg.XmlHbmBinding.Binder - Mapped property: Name -> Name, type: String
DEBUG 96 NHibernate.Cfg.XmlHbmBinding.Binder - Mapped property: IsActive -> IsActive, type: Boolean
DEBUG 96 NHibernate.Cfg.XmlHbmBinding.Binder - Mapped property: DefaultProduct -> DefaultProduct_id, type: CumbriaMD.Domain.Product
DEBUG 96 NHibernate.Cfg.Configuration - Mapping XML:
<hibernate-mapping xmlns="urn:nhibernate-mapping-2.2"><class xmlns="urn:nhibernate-mapping-2.2" name="CumbriaMD.Domain.Category, CumbriaMD.Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" table="`Category`"><id name="Id" type="System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"><column name="Id" /><generator class="identity" /></id><bag cascade="all" inverse="true" name="Products" table="CategoriesProducts"><key><column name="Category_id" /></key><many-to-many class="CumbriaMD.Domain.Product, CumbriaMD.Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null"><column name="Product_id" /></many-to-many></bag><bag cascade="all-delete-orphan" name="Subcategories"><key><column name="ParentCategory" /></key><one-to-many class="CumbriaMD.Domain.Category, CumbriaMD.Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" /></bag><property name="Name" type="System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"><column name="Name" length="50" not-null="true" /></property><property name="IsActive" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"><column name="IsActive" not-null="true" /></property><property name="OrderInList" type="System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"><column name="OrderInList" /></property><many-to-one class="CumbriaMD.Domain.Category, CumbriaMD.Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" name="Parent"><column name="ParentCategory" /></many-to-one></class></hibernate-mapping>
INFO 96 NHibernate.Dialect.Dialect - Using dialect: NHibernate.Dialect.MsSql2008Dialect
INFO 96 NHibernate.Cfg.XmlHbmBinding.Binder - Mapping class: CumbriaMD.Domain.Category -> Category
DEBUG 96 NHibernate.Cfg.XmlHbmBinding.Binder - Mapped property: Id -> Id, type: Int32
INFO 96 NHibernate.Cfg.XmlHbmBinding.Binder - Mapping collection: CumbriaMD.Domain.Category.Products -> CategoriesProducts
DEBUG 96 NHibernate.Cfg.XmlHbmBinding.Binder - Mapped property: Products, type: System.Collections.Generic.ICollection`1[[CumbriaMD.Domain.Product, CumbriaMD.Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]](CumbriaMD.Domain.Category.Products)
DEBUG 96 NHibernate.Cfg.XmlHbmBinding.Binder - Mapped property: Subcategories, type: System.Collections.Generic.ICollection`1[[CumbriaMD.Domain.Category, CumbriaMD.Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]](CumbriaMD.Domain.Category.Subcategories)
DEBUG 96 NHibernate.Cfg.XmlHbmBinding.Binder - Mapped property: Name -> Name, type: String
DEBUG 96 NHibernate.Cfg.XmlHbmBinding.Binder - Mapped property: IsActive -> IsActive, type: Boolean
DEBUG 96 NHibernate.Cfg.XmlHbmBinding.Binder - Mapped property: OrderInList -> OrderInList, type: Int32
DEBUG 96 NHibernate.Cfg.XmlHbmBinding.Binder - Mapped property: Parent -> ParentCategory, type: CumbriaMD.Domain.Category
DEBUG 96 NHibernate.Cfg.Configuration - Mapping XML:
<hibernate-mapping xmlns="urn:nhibernate-mapping-2.2"><class xmlns="urn:nhibernate-mapping-2.2" name="CumbriaMD.Domain.Product, CumbriaMD.Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" table="`Product`"><id name="Id" type="System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"><column name="Id" /><generator class="identity" /></id><bag cascade="all" name="Categories" table="CategoriesProducts"><key><column name="Product_id" /></key><many-to-many class="CumbriaMD.Domain.Category, CumbriaMD.Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null"><column name="Category_id" /></many-to-many></bag><property name="Name" type="System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"><column name="Name" length="100" not-null="true" /></property><property name="Code" type="System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"><column name="Code" not-null="true" /></property><property name="Description" type="System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"><column name="Description" length="1500" not-null="true" /></property><property name="Price" type="System.Decimal, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"><column name="Price" not-null="true" /></property><property name="IsDiscounted" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"><column name="IsDiscounted" not-null="true" /></property><property name="IsInStock" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"><column name="IsInStock" not-null="true" /></property><property name="AddedAt" type="System.Nullable`1[[System.DateTime, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]], mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"><column name="AddedAt" not-null="true" /></property><property name="UpdatedAt" type="System.Nullable`1[[System.DateTime, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]], mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"><column name="UpdatedAt" not-null="true" /></property><many-to-one class="CumbriaMD.Domain.Brand, CumbriaMD.Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" name="Brand"><column name="Brand_id" /></many-to-one></class></hibernate-mapping>
INFO 96 NHibernate.Dialect.Dialect - Using dialect: NHibernate.Dialect.MsSql2008Dialect
INFO 96 NHibernate.Cfg.XmlHbmBinding.Binder - Mapping class: CumbriaMD.Domain.Product -> Product
DEBUG 96 NHibernate.Cfg.XmlHbmBinding.Binder - Mapped property: Id -> Id, type: Int32
INFO 96 NHibernate.Cfg.XmlHbmBinding.Binder - Mapping collection: CumbriaMD.Domain.Product.Categories -> CategoriesProducts
DEBUG 96 NHibernate.Cfg.XmlHbmBinding.Binder - Mapped property: Categories, type: System.Collections.Generic.ICollection`1[[CumbriaMD.Domain.Category, CumbriaMD.Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]](CumbriaMD.Domain.Product.Categories)
DEBUG 96 NHibernate.Cfg.XmlHbmBinding.Binder - Mapped property: Name -> Name, type: String
DEBUG 96 NHibernate.Cfg.XmlHbmBinding.Binder - Mapped property: Code -> Code, type: String
DEBUG 96 NHibernate.Cfg.XmlHbmBinding.Binder - Mapped property: Description -> Description, type: String
DEBUG 96 NHibernate.Cfg.XmlHbmBinding.Binder - Mapped property: Price -> Price, type: Decimal
DEBUG 96 NHibernate.Cfg.XmlHbmBinding.Binder - Mapped property: IsDiscounted -> IsDiscounted, type: Boolean
DEBUG 96 NHibernate.Cfg.XmlHbmBinding.Binder - Mapped property: IsInStock -> IsInStock, type: Boolean
DEBUG 96 NHibernate.Cfg.XmlHbmBinding.Binder - Mapped property: AddedAt -> AddedAt, type: DateTime
DEBUG 96 NHibernate.Cfg.XmlHbmBinding.Binder - Mapped property: UpdatedAt -> UpdatedAt, type: DateTime
DEBUG 96 NHibernate.Cfg.XmlHbmBinding.Binder - Mapped property: Brand -> Brand_id, type: CumbriaMD.Domain.Brand
INFO 96 NHibernate.Dialect.Dialect - Using dialect: NHibernate.Dialect.MsSql2008Dialect
INFO 96 NHibernate.Dialect.Dialect - Using dialect: NHibernate.Dialect.MsSql2008Dialect
INFO 96 NHibernate.Connection.ConnectionProviderFactory - Initializing connection provider: NHibernate.Connection.DriverConnectionProvider
INFO 96 NHibernate.Connection.ConnectionProvider - Configuring ConnectionProvider
DEBUG 96 NHibernate.Connection.DriverConnectionProvider - Obtaining IDbConnection from Driver
DEBUG 96 NHibernate.Connection.ConnectionProvider - Closing connection
INFO 96 NHibernate.Dialect.Dialect - Using dialect: NHibernate.Dialect.MsSql2008Dialect
INFO 96 NHibernate.Cfg.Configuration - checking mappings queue
INFO 96 NHibernate.Cfg.Configuration - processing one-to-many association mappings
DEBUG 96 NHibernate.Cfg.XmlHbmBinding.Binder - Second pass for collection: CumbriaMD.Domain.Brand.Products
INFO 96 NHibernate.Cfg.XmlHbmBinding.Binder - mapping collection: CumbriaMD.Domain.Brand.Products -> Product
DEBUG 96 NHibernate.Cfg.XmlHbmBinding.Binder - Mapped collection key: Brand_id, one-to-many: CumbriaMD.Domain.Product
DEBUG 96 NHibernate.Cfg.XmlHbmBinding.Binder - Second pass for collection: CumbriaMD.Domain.Category.Products
DEBUG 96 NHibernate.Cfg.XmlHbmBinding.Binder - Mapped collection key: Category_id, element: Product_id, type: CumbriaMD.Domain.Product
DEBUG 96 NHibernate.Cfg.XmlHbmBinding.Binder - Second pass for collection: CumbriaMD.Domain.Category.Subcategories
INFO 96 NHibernate.Cfg.XmlHbmBinding.Binder - mapping collection: CumbriaMD.Domain.Category.Subcategories -> Category
DEBUG 96 NHibernate.Cfg.XmlHbmBinding.Binder - Mapped collection key: ParentCategory, one-to-many: CumbriaMD.Domain.Category
DEBUG 96 NHibernate.Cfg.XmlHbmBinding.Binder - Second pass for collection: CumbriaMD.Domain.Product.Categories
DEBUG 96 NHibernate.Cfg.XmlHbmBinding.Binder - Mapped collection key: Product_id, element: Category_id, type: CumbriaMD.Domain.Category
INFO 96 NHibernate.Cfg.Configuration - processing one-to-one association property references
INFO 96 NHibernate.Cfg.Configuration - processing foreign key constraints
DEBUG 96 NHibernate.Cfg.Configuration - resolving reference to class: CumbriaMD.Domain.Product
DEBUG 96 NHibernate.Cfg.Configuration - resolving reference to class: CumbriaMD.Domain.Category
DEBUG 96 NHibernate.Cfg.Configuration - resolving reference to class: CumbriaMD.Domain.Product
DEBUG 96 NHibernate.Cfg.Configuration - resolving reference to class: CumbriaMD.Domain.Category
DEBUG 96 NHibernate.Cfg.Configuration - resolving reference to class: CumbriaMD.Domain.Brand
INFO 96 NHibernate.Cfg.Configuration - processing filters (second pass)
INFO 96 NHibernate.Cfg.Configuration - checking mappings queue
INFO 96 NHibernate.Cfg.Configuration - processing one-to-many association mappings
INFO 96 NHibernate.Cfg.Configuration - processing one-to-one association property references
INFO 96 NHibernate.Cfg.Configuration - processing foreign key constraints
DEBUG 96 NHibernate.Cfg.Configuration - resolving reference to class: CumbriaMD.Domain.Product
DEBUG 96 NHibernate.Cfg.Configuration - resolving reference to class: CumbriaMD.Domain.Category
DEBUG 96 NHibernate.Cfg.Configuration - resolving reference to class: CumbriaMD.Domain.Product
DEBUG 96 NHibernate.Cfg.Configuration - resolving reference to class: CumbriaMD.Domain.Category
DEBUG 96 NHibernate.Cfg.Configuration - resolving reference to class: CumbriaMD.Domain.Brand
INFO 96 NHibernate.Cfg.Configuration - processing filters (second pass)
DEBUG 96 NHibernate.Tool.hbm2ddl.SchemaExport - 
    if exists (select 1 from sys.objects where object_id = OBJECT_ID(N'[FK18E3AB3D8E538E2D]') AND parent_object_id = OBJECT_ID('[Brand]'))
alter table [Brand]  drop constraint FK18E3AB3D8E538E2D

DEBUG 96 NHibernate.Tool.hbm2ddl.SchemaExport - 
    if exists (select 1 from sys.objects where object_id = OBJECT_ID(N'[FK6482F24CBCE17DD]') AND parent_object_id = OBJECT_ID('[Category]'))
alter table [Category]  drop constraint FK6482F24CBCE17DD

DEBUG 96 NHibernate.Tool.hbm2ddl.SchemaExport - 
    if exists (select 1 from sys.objects where object_id = OBJECT_ID(N'[FKAD3E9DD3350EC5DF]') AND parent_object_id = OBJECT_ID('CategoriesProducts'))
alter table CategoriesProducts  drop constraint FKAD3E9DD3350EC5DF

DEBUG 96 NHibernate.Tool.hbm2ddl.SchemaExport - 
    if exists (select 1 from sys.objects where object_id = OBJECT_ID(N'[FKAD3E9DD3ED552755]') AND parent_object_id = OBJECT_ID('CategoriesProducts'))
alter table CategoriesProducts  drop constraint FKAD3E9DD3ED552755

DEBUG 96 NHibernate.Tool.hbm2ddl.SchemaExport - 
    if exists (select 1 from sys.objects where object_id = OBJECT_ID(N'[FK1F94D86AF20A7EB]') AND parent_object_id = OBJECT_ID('[Product]'))
alter table [Product]  drop constraint FK1F94D86AF20A7EB

DEBUG 96 NHibernate.Tool.hbm2ddl.SchemaExport - 
    if exists (select * from dbo.sysobjects where id = object_id(N'[Brand]') and OBJECTPROPERTY(id, N'IsUserTable') = 1) drop table [Brand]
DEBUG 96 NHibernate.Tool.hbm2ddl.SchemaExport - 
    if exists (select * from dbo.sysobjects where id = object_id(N'[Category]') and OBJECTPROPERTY(id, N'IsUserTable') = 1) drop table [Category]
DEBUG 96 NHibernate.Tool.hbm2ddl.SchemaExport - 
    if exists (select * from dbo.sysobjects where id = object_id(N'CategoriesProducts') and OBJECTPROPERTY(id, N'IsUserTable') = 1) drop table CategoriesProducts
DEBUG 96 NHibernate.Tool.hbm2ddl.SchemaExport - 
    if exists (select * from dbo.sysobjects where id = object_id(N'[Product]') and OBJECTPROPERTY(id, N'IsUserTable') = 1) drop table [Product]
DEBUG 96 NHibernate.Tool.hbm2ddl.SchemaExport - 
    create table [Brand] (
        Id INT IDENTITY NOT NULL,
       Name NVARCHAR(50) not null,
       IsActive BIT not null,
       DefaultProduct_id INT null,
       primary key (Id)
    )
DEBUG 96 NHibernate.Tool.hbm2ddl.SchemaExport - 
    create table [Category] (
        Id INT IDENTITY NOT NULL,
       Name NVARCHAR(50) not null,
       IsActive BIT not null,
       OrderInList INT null,
       ParentCategory INT null,
       primary key (Id)
    )
DEBUG 96 NHibernate.Tool.hbm2ddl.SchemaExport - 
    create table CategoriesProducts (
        Category_id INT not null,
       Product_id INT not null
    )
DEBUG 96 NHibernate.Tool.hbm2ddl.SchemaExport - 
    create table [Product] (
        Id INT IDENTITY NOT NULL,
       Name NVARCHAR(100) not null,
       Code NVARCHAR(255) not null,
       Description NVARCHAR(1500) not null,
       Price DECIMAL(19,5) not null,
       IsDiscounted BIT not null,
       IsInStock BIT not null,
       AddedAt DATETIME not null,
       UpdatedAt DATETIME not null,
       Brand_id INT null,
       primary key (Id)
    )
DEBUG 96 NHibernate.Tool.hbm2ddl.SchemaExport - 
    alter table [Brand] 
        add constraint FK18E3AB3D8E538E2D 
        foreign key (DefaultProduct_id) 
        references [Product]
DEBUG 96 NHibernate.Tool.hbm2ddl.SchemaExport - 
    alter table [Category] 
        add constraint FK6482F24CBCE17DD 
        foreign key (ParentCategory) 
        references [Category]
DEBUG 96 NHibernate.Tool.hbm2ddl.SchemaExport - 
    alter table CategoriesProducts 
        add constraint FKAD3E9DD3350EC5DF 
        foreign key (Product_id) 
        references [Product]
DEBUG 96 NHibernate.Tool.hbm2ddl.SchemaExport - 
    alter table CategoriesProducts 
        add constraint FKAD3E9DD3ED552755 
        foreign key (Category_id) 
        references [Category]
DEBUG 96 NHibernate.Tool.hbm2ddl.SchemaExport - 
    alter table [Product] 
        add constraint FK1F94D86AF20A7EB 
        foreign key (Brand_id) 
        references [Brand]
INFO 96 NHibernate.Cfg.Configuration - checking mappings queue
INFO 96 NHibernate.Cfg.Configuration - processing one-to-many association mappings
INFO 96 NHibernate.Cfg.Configuration - processing one-to-one association property references
INFO 96 NHibernate.Cfg.Configuration - processing foreign key constraints
DEBUG 96 NHibernate.Cfg.Configuration - resolving reference to class: CumbriaMD.Domain.Product
DEBUG 96 NHibernate.Cfg.Configuration - resolving reference to class: CumbriaMD.Domain.Category
DEBUG 96 NHibernate.Cfg.Configuration - resolving reference to class: CumbriaMD.Domain.Product
DEBUG 96 NHibernate.Cfg.Configuration - resolving reference to class: CumbriaMD.Domain.Category
DEBUG 96 NHibernate.Cfg.Configuration - resolving reference to class: CumbriaMD.Domain.Brand
INFO 96 NHibernate.Cfg.Configuration - processing filters (second pass)
INFO 96 NHibernate.Dialect.Dialect - Using dialect: NHibernate.Dialect.MsSql2008Dialect
INFO 96 NHibernate.Dialect.Dialect - Using dialect: NHibernate.Dialect.MsSql2008Dialect
INFO 96 NHibernate.Exceptions.SQLExceptionConverterFactory - Using dialect defined converter
INFO 96 NHibernate.Cfg.SettingsFactory - Generate SQL with comments: disabled
INFO 96 NHibernate.Connection.ConnectionProviderFactory - Initializing connection provider: NHibernate.Connection.DriverConnectionProvider
INFO 96 NHibernate.Connection.ConnectionProvider - Configuring ConnectionProvider
INFO 96 NHibernate.Cfg.SettingsFactory - Transaction factory: NHibernate.Transaction.AdoNetWithDistributedTransactionFactory
INFO 96 NHibernate.Cfg.SettingsFactory - Optimize cache for minimal puts: False
INFO 96 NHibernate.Cfg.SettingsFactory - Connection release mode: auto
INFO 96 NHibernate.Cfg.SettingsFactory - Default batch fetch size: 1
INFO 96 NHibernate.Cfg.SettingsFactory - echoing all SQL to stdout
INFO 96 NHibernate.Cfg.SettingsFactory - Statistics: disabled
INFO 96 NHibernate.Cfg.SettingsFactory - Deleted entity synthetic identifier rollback: disabled
INFO 96 NHibernate.Cfg.SettingsFactory - Query translator: NHibernate.Hql.Ast.ANTLR.ASTQueryTranslatorFactory
INFO 96 NHibernate.Cfg.SettingsFactory - Query language substitutions: {'true'='1', 'false'='0', 'yes'=''Y'', 'no'=''N''}
INFO 96 NHibernate.Cfg.SettingsFactory - cache provider: NHibernate.Cache.NoCacheProvider, NHibernate, Version=3.3.1.4000, Culture=neutral, PublicKeyToken=aa95f207798dfdb4
INFO 96 NHibernate.Cfg.SettingsFactory - Order SQL inserts for batching: enabled
DEBUG 96 NHibernate.Cfg.SettingsFactory - Wrap result sets: disabled
INFO 96 NHibernate.Cfg.SettingsFactory - Batcher factory: NHibernate.AdoNet.SqlClientBatchingBatcherFactory, NHibernate, Version=3.3.1.4000, Culture=neutral, PublicKeyToken=aa95f207798dfdb4
INFO 96 NHibernate.Cfg.SettingsFactory - Default entity-mode: Poco
INFO 96 NHibernate.Cfg.SettingsFactory - Named query checking : enabled
INFO 96 NHibernate.Impl.SessionFactoryImpl - building session factory
DEBUG 96 NHibernate.Impl.SessionFactoryImpl - Session factory constructed with filter configurations : {}
DEBUG 96 NHibernate.Impl.SessionFactoryImpl - instantiating session factory with properties: {'use_reflection_optimizer'='True', 'connection.provider'='NHibernate.Connection.DriverConnectionProvider', 'connection.driver_class'='NHibernate.Driver.SqlClientDriver, NHibernate, Version=3.3.1.4000, Culture=neutral, PublicKeyToken=aa95f207798dfdb4', 'dialect'='NHibernate.Dialect.MsSql2008Dialect, NHibernate, Version=3.3.1.4000, Culture=neutral, PublicKeyToken=aa95f207798dfdb4', 'hibernate.dialect'='NHibernate.Dialect.MsSql2008Dialect, NHibernate, Version=3.3.1.4000, Culture=neutral, PublicKeyToken=aa95f207798dfdb4', 'use_outer_join'='true', 'show_sql'='true', 'connection.connection_string'='Data Source=localhost\SQLEXPRESS;Initial Catalog=eDetectorDb;Integrated Security=true'}
DEBUG 96 NHibernate.Connection.DriverConnectionProvider - Obtaining IDbConnection from Driver
DEBUG 96 NHibernate.Connection.ConnectionProvider - Closing connection
DEBUG 96 NHibernate.Tuple.Entity.AbstractEntityTuplizer - No custom accessors found for entity: CumbriaMD.Domain.Brand
DEBUG 96 NHibernate.Tuple.Entity.AbstractEntityTuplizer - No custom accessors found for entity: CumbriaMD.Domain.Brand
DEBUG 96 NHibernate.Tuple.Entity.PocoEntityTuplizer - Create Instantiator using optimizer for:CumbriaMD.Domain.Brand
DEBUG 96 NHibernate.Tuple.Entity.AbstractEntityTuplizer - No custom accessors found for entity: CumbriaMD.Domain.Category
DEBUG 96 NHibernate.Tuple.Entity.AbstractEntityTuplizer - No custom accessors found for entity: CumbriaMD.Domain.Category
DEBUG 96 NHibernate.Tuple.Entity.PocoEntityTuplizer - Create Instantiator using optimizer for:CumbriaMD.Domain.Category
DEBUG 96 NHibernate.Tuple.Entity.AbstractEntityTuplizer - No custom accessors found for entity: CumbriaMD.Domain.Product
DEBUG 96 NHibernate.Tuple.Entity.AbstractEntityTuplizer - No custom accessors found for entity: CumbriaMD.Domain.Product
DEBUG 96 NHibernate.Tuple.Entity.PocoEntityTuplizer - Create Instantiator using optimizer for:CumbriaMD.Domain.Product
DEBUG 96 NHibernate.Persister.Collection.ICollectionPersister - Static SQL for collection: CumbriaMD.Domain.Brand.Products
DEBUG 96 NHibernate.Persister.Collection.ICollectionPersister -  Row insert: UPDATE [Product] SET Brand_id = ? WHERE Id = ?
DEBUG 96 NHibernate.Persister.Collection.ICollectionPersister -  Row delete: UPDATE [Product] SET Brand_id = null WHERE Brand_id = ? AND Id = ?
DEBUG 96 NHibernate.Persister.Collection.ICollectionPersister -  One-shot delete: UPDATE [Product] SET Brand_id = null WHERE Brand_id = ?
DEBUG 96 NHibernate.Persister.Collection.ICollectionPersister - Static SQL for collection: CumbriaMD.Domain.Category.Products
DEBUG 96 NHibernate.Persister.Collection.ICollectionPersister -  Row insert: INSERT INTO CategoriesProducts (Category_id, Product_id) VALUES (?, ?)
DEBUG 96 NHibernate.Persister.Collection.ICollectionPersister -  Row update: UPDATE CategoriesProducts SET Product_id = ? WHERE Category_id = ? AND Product_id = ?
DEBUG 96 NHibernate.Persister.Collection.ICollectionPersister -  Row delete: DELETE FROM CategoriesProducts WHERE Category_id = ? AND Product_id = ?
DEBUG 96 NHibernate.Persister.Collection.ICollectionPersister -  One-shot delete: DELETE FROM CategoriesProducts WHERE Category_id = ?
DEBUG 96 NHibernate.Persister.Collection.ICollectionPersister - Static SQL for collection: CumbriaMD.Domain.Category.Subcategories
DEBUG 96 NHibernate.Persister.Collection.ICollectionPersister -  Row insert: UPDATE [Category] SET ParentCategory = ? WHERE Id = ?
DEBUG 96 NHibernate.Persister.Collection.ICollectionPersister -  Row delete: UPDATE [Category] SET ParentCategory = null WHERE ParentCategory = ? AND Id = ?
DEBUG 96 NHibernate.Persister.Collection.ICollectionPersister -  One-shot delete: UPDATE [Category] SET ParentCategory = null WHERE ParentCategory = ?
DEBUG 96 NHibernate.Persister.Collection.ICollectionPersister - Static SQL for collection: CumbriaMD.Domain.Product.Categories
DEBUG 96 NHibernate.Persister.Collection.ICollectionPersister -  Row insert: INSERT INTO CategoriesProducts (Product_id, Category_id) VALUES (?, ?)
DEBUG 96 NHibernate.Persister.Collection.ICollectionPersister -  Row update: UPDATE CategoriesProducts SET Category_id = ? WHERE Product_id = ? AND Category_id = ?
DEBUG 96 NHibernate.Persister.Collection.ICollectionPersister -  Row delete: DELETE FROM CategoriesProducts WHERE Product_id = ? AND Category_id = ?
DEBUG 96 NHibernate.Persister.Collection.ICollectionPersister -  One-shot delete: DELETE FROM CategoriesProducts WHERE Product_id = ?
DEBUG 96 NHibernate.Persister.Entity.AbstractEntityPersister - Static SQL for entity: CumbriaMD.Domain.Brand
DEBUG 96 NHibernate.Persister.Entity.AbstractEntityPersister -  Version select: SELECT Id FROM [Brand] WHERE Id = ?
DEBUG 96 NHibernate.Persister.Entity.AbstractEntityPersister -  Snapshot select: SELECT brand_.Id, brand_.Name as Name0_, brand_.IsActive as IsActive0_, brand_.DefaultProduct_id as DefaultP4_0_ FROM [Brand] brand_ WHERE brand_.Id=?
DEBUG 96 NHibernate.Persister.Entity.AbstractEntityPersister -  Insert 0: INSERT INTO [Brand] (Name, IsActive, DefaultProduct_id, Id) VALUES (?, ?, ?, ?)
DEBUG 96 NHibernate.Persister.Entity.AbstractEntityPersister -  Update 0: UPDATE [Brand] SET Name = ?, IsActive = ?, DefaultProduct_id = ? WHERE Id = ?
DEBUG 96 NHibernate.Persister.Entity.AbstractEntityPersister -  Delete 0: DELETE FROM [Brand] WHERE Id = ?
DEBUG 96 NHibernate.Persister.Entity.AbstractEntityPersister -  Identity insert: INSERT INTO [Brand] (Name, IsActive, DefaultProduct_id) VALUES (?, ?, ?); select SCOPE_IDENTITY()
DEBUG 96 NHibernate.Loader.Entity.AbstractEntityLoader - Static select for entity CumbriaMD.Domain.Brand: SELECT brand0_.Id as Id0_0_, brand0_.Name as Name0_0_, brand0_.IsActive as IsActive0_0_, brand0_.DefaultProduct_id as DefaultP4_0_0_ FROM [Brand] brand0_ WHERE brand0_.Id=?
DEBUG 96 NHibernate.Loader.Entity.AbstractEntityLoader - Static select for entity CumbriaMD.Domain.Brand: SELECT brand0_.Id as Id0_0_, brand0_.Name as Name0_0_, brand0_.IsActive as IsActive0_0_, brand0_.DefaultProduct_id as DefaultP4_0_0_ FROM [Brand] brand0_ WHERE brand0_.Id=?
DEBUG 96 NHibernate.Loader.Entity.AbstractEntityLoader - Static select for entity CumbriaMD.Domain.Brand: SELECT brand0_.Id as Id0_0_, brand0_.Name as Name0_0_, brand0_.IsActive as IsActive0_0_, brand0_.DefaultProduct_id as DefaultP4_0_0_ FROM [Brand] brand0_ with (updlock, rowlock) WHERE brand0_.Id=?
DEBUG 96 NHibernate.Loader.Entity.AbstractEntityLoader - Static select for entity CumbriaMD.Domain.Brand: SELECT brand0_.Id as Id0_0_, brand0_.Name as Name0_0_, brand0_.IsActive as IsActive0_0_, brand0_.DefaultProduct_id as DefaultP4_0_0_ FROM [Brand] brand0_ with (updlock, rowlock, nowait) WHERE brand0_.Id=?
DEBUG 96 NHibernate.Loader.Entity.AbstractEntityLoader - Static select for entity CumbriaMD.Domain.Brand: SELECT brand0_.Id as Id0_0_, brand0_.Name as Name0_0_, brand0_.IsActive as IsActive0_0_, brand0_.DefaultProduct_id as DefaultP4_0_0_ FROM [Brand] brand0_ with (updlock, rowlock) WHERE brand0_.Id=?
DEBUG 96 NHibernate.Loader.Entity.AbstractEntityLoader - Static select for action NHibernate.Engine.CascadingAction+MergeCascadingAction on entity CumbriaMD.Domain.Brand: SELECT brand0_.Id as Id0_0_, brand0_.Name as Name0_0_, brand0_.IsActive as IsActive0_0_, brand0_.DefaultProduct_id as DefaultP4_0_0_ FROM [Brand] brand0_ WHERE brand0_.Id=?
